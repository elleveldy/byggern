
ByggernGruppe48H2015.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000158  00800100  000016cc  00001760  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800258  00800258  000018b8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018b8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000318  00000000  00000000  00001914  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000315c  00000000  00000000  00001c2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001032  00000000  00000000  00004d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001011  00000000  00000000  00005dba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000008b0  00000000  00000000  00006dcc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000869  00000000  00000000  0000767c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001e61  00000000  00000000  00007ee5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002a0  00000000  00000000  00009d46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <oled_init+0xe>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ec ec       	ldi	r30, 0xCC	; 204
     37c:	f6 e1       	ldi	r31, 0x16	; 22
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 35       	cpi	r26, 0x58	; 88
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	a8 e5       	ldi	r26, 0x58	; 88
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ae 36       	cpi	r26, 0x6E	; 110
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 cc 03 	call	0x798	; 0x798 <main>
     39e:	0c 94 64 0b 	jmp	0x16c8	; 0x16c8 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <can_init>:
#include <avr/io.h>
#include <stdlib.h>
#include <string.h>


void can_init(int mode){
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	ec 01       	movw	r28, r24

	mcp2515_init();
     3ac:	0e 94 6e 04 	call	0x8dc	; 0x8dc <mcp2515_init>
	mcp2515_bit_modify(MCP_RXB0CTRL, MCP_MASK_FILTER, 0xff);
     3b0:	4f ef       	ldi	r20, 0xFF	; 255
     3b2:	50 e0       	ldi	r21, 0x00	; 0
     3b4:	60 e6       	ldi	r22, 0x60	; 96
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	80 e6       	ldi	r24, 0x60	; 96
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	0e 94 50 04 	call	0x8a0	; 0x8a0 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_RXB1CTRL, MCP_MASK_FILTER, 0xff);
     3c0:	4f ef       	ldi	r20, 0xFF	; 255
     3c2:	50 e0       	ldi	r21, 0x00	; 0
     3c4:	60 e6       	ldi	r22, 0x60	; 96
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	80 e7       	ldi	r24, 0x70	; 112
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	0e 94 50 04 	call	0x8a0	; 0x8a0 <mcp2515_bit_modify>
	mcp2515_bit_modify(MCP_CANCTRL, MODE_MASK, mode);
     3d0:	ae 01       	movw	r20, r28
     3d2:	60 ee       	ldi	r22, 0xE0	; 224
     3d4:	70 e0       	ldi	r23, 0x00	; 0
     3d6:	8f e0       	ldi	r24, 0x0F	; 15
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	0e 94 50 04 	call	0x8a0	; 0x8a0 <mcp2515_bit_modify>
	DDRE &= ~(1 << PE0);
     3de:	30 98       	cbi	0x06, 0	; 6
}
     3e0:	df 91       	pop	r29
     3e2:	cf 91       	pop	r28
     3e4:	08 95       	ret

000003e6 <can_transmit>:

void can_transmit(can_message* msg, int buffer_select){
     3e6:	2f 92       	push	r2
     3e8:	3f 92       	push	r3
     3ea:	4f 92       	push	r4
     3ec:	5f 92       	push	r5
     3ee:	6f 92       	push	r6
     3f0:	7f 92       	push	r7
     3f2:	8f 92       	push	r8
     3f4:	9f 92       	push	r9
     3f6:	af 92       	push	r10
     3f8:	bf 92       	push	r11
     3fa:	cf 92       	push	r12
     3fc:	df 92       	push	r13
     3fe:	ef 92       	push	r14
     400:	ff 92       	push	r15
     402:	0f 93       	push	r16
     404:	1f 93       	push	r17
     406:	cf 93       	push	r28
     408:	df 93       	push	r29
     40a:	00 d0       	rcall	.+0      	; 0x40c <can_transmit+0x26>
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	5c 01       	movw	r10, r24
     412:	7b 01       	movw	r14, r22
	
	mcp2515_bit_modify(buffer_select, 0x08, 0xff);
     414:	4f ef       	ldi	r20, 0xFF	; 255
     416:	50 e0       	ldi	r21, 0x00	; 0
     418:	68 e0       	ldi	r22, 0x08	; 8
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	c7 01       	movw	r24, r14
     41e:	0e 94 50 04 	call	0x8a0	; 0x8a0 <mcp2515_bit_modify>
	
	while(mcp2515_read(buffer_select) & (1 << MCP_TXREQ));
     422:	c7 01       	movw	r24, r14
     424:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     428:	83 fd       	sbrc	r24, 3
     42a:	fb cf       	rjmp	.-10     	; 0x422 <can_transmit+0x3c>
	
	volatile uint8_t idl = MCP2515_MASK_IDL & (msg->id << 5);
     42c:	f5 01       	movw	r30, r10
     42e:	80 81       	ld	r24, Z
     430:	91 81       	ldd	r25, Z+1	; 0x01
     432:	28 2f       	mov	r18, r24
     434:	22 95       	swap	r18
     436:	22 0f       	add	r18, r18
     438:	20 7e       	andi	r18, 0xE0	; 224
     43a:	29 83       	std	Y+1, r18	; 0x01
	volatile uint8_t idh = MCP2515_MASK_IDH & (msg->id >> 3);
     43c:	96 95       	lsr	r25
     43e:	87 95       	ror	r24
     440:	96 95       	lsr	r25
     442:	87 95       	ror	r24
     444:	96 95       	lsr	r25
     446:	87 95       	ror	r24
     448:	8a 83       	std	Y+2, r24	; 0x02
	
	mcp2515_write(buffer_select + MCP2515_IDL_OFFSET, idl); //3 LSB
     44a:	69 81       	ldd	r22, Y+1	; 0x01
     44c:	17 01       	movw	r2, r14
     44e:	f2 e0       	ldi	r31, 0x02	; 2
     450:	2f 0e       	add	r2, r31
     452:	31 1c       	adc	r3, r1
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	c1 01       	movw	r24, r2
     458:	0e 94 39 04 	call	0x872	; 0x872 <mcp2515_write>
	mcp2515_write(buffer_select + MCP2515_IDH_OFFSET, idh); //8 MSB
     45c:	6a 81       	ldd	r22, Y+2	; 0x02
     45e:	27 01       	movw	r4, r14
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	48 1a       	sub	r4, r24
     464:	58 0a       	sbc	r5, r24
     466:	70 e0       	ldi	r23, 0x00	; 0
     468:	c2 01       	movw	r24, r4
     46a:	0e 94 39 04 	call	0x872	; 0x872 <mcp2515_write>
	
	mcp2515_write(buffer_select + MCP2515_DLC_OFFSET, MCP2515_MASK_DLC & (msg->length));
     46e:	37 01       	movw	r6, r14
     470:	95 e0       	ldi	r25, 0x05	; 5
     472:	69 0e       	add	r6, r25
     474:	71 1c       	adc	r7, r1
     476:	f5 01       	movw	r30, r10
     478:	62 81       	ldd	r22, Z+2	; 0x02
     47a:	6f 70       	andi	r22, 0x0F	; 15
     47c:	70 e0       	ldi	r23, 0x00	; 0
     47e:	c3 01       	movw	r24, r6
     480:	0e 94 39 04 	call	0x872	; 0x872 <mcp2515_write>
	
	
	for(int i = 0; i < msg->length; i++){
     484:	f5 01       	movw	r30, r10
     486:	82 81       	ldd	r24, Z+2	; 0x02
     488:	88 23       	and	r24, r24
     48a:	d9 f0       	breq	.+54     	; 0x4c2 <can_transmit+0xdc>
     48c:	65 01       	movw	r12, r10
     48e:	f3 e0       	ldi	r31, 0x03	; 3
     490:	cf 0e       	add	r12, r31
     492:	d1 1c       	adc	r13, r1
     494:	00 e0       	ldi	r16, 0x00	; 0
     496:	10 e0       	ldi	r17, 0x00	; 0
     498:	47 01       	movw	r8, r14
     49a:	86 e0       	ldi	r24, 0x06	; 6
     49c:	88 0e       	add	r8, r24
     49e:	91 1c       	adc	r9, r1
		mcp2515_write(buffer_select + MCP2515_TXB_OFFSET + i, msg->data[i]);
     4a0:	f6 01       	movw	r30, r12
     4a2:	61 91       	ld	r22, Z+
     4a4:	6f 01       	movw	r12, r30
     4a6:	70 e0       	ldi	r23, 0x00	; 0
     4a8:	c4 01       	movw	r24, r8
     4aa:	80 0f       	add	r24, r16
     4ac:	91 1f       	adc	r25, r17
     4ae:	0e 94 39 04 	call	0x872	; 0x872 <mcp2515_write>
	mcp2515_write(buffer_select + MCP2515_IDH_OFFSET, idh); //8 MSB
	
	mcp2515_write(buffer_select + MCP2515_DLC_OFFSET, MCP2515_MASK_DLC & (msg->length));
	
	
	for(int i = 0; i < msg->length; i++){
     4b2:	0f 5f       	subi	r16, 0xFF	; 255
     4b4:	1f 4f       	sbci	r17, 0xFF	; 255
     4b6:	f5 01       	movw	r30, r10
     4b8:	82 81       	ldd	r24, Z+2	; 0x02
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	08 17       	cp	r16, r24
     4be:	19 07       	cpc	r17, r25
     4c0:	7c f3       	brlt	.-34     	; 0x4a0 <can_transmit+0xba>
		
	}
	
	int buffer_control;
	
	if (buffer_select == MCP_TXB0CTRL){
     4c2:	f0 e3       	ldi	r31, 0x30	; 48
     4c4:	ef 16       	cp	r14, r31
     4c6:	f1 04       	cpc	r15, r1
     4c8:	59 f0       	breq	.+22     	; 0x4e0 <can_transmit+0xfa>
		buffer_control = MCP_RTS_TX0;
	}
	else if (buffer_select == MCP_TXB1CTRL){
     4ca:	80 e4       	ldi	r24, 0x40	; 64
     4cc:	e8 16       	cp	r14, r24
     4ce:	f1 04       	cpc	r15, r1
     4d0:	51 f0       	breq	.+20     	; 0x4e6 <can_transmit+0x100>
		buffer_control = MCP_RTS_TX1;
	}
	else if (buffer_select == MCP_TXB2CTRL){
     4d2:	90 e5       	ldi	r25, 0x50	; 80
     4d4:	e9 16       	cp	r14, r25
     4d6:	f1 04       	cpc	r15, r1
     4d8:	d1 f5       	brne	.+116    	; 0x54e <__stack+0x4f>
		buffer_control=MCP_RTS_TX2;
     4da:	04 e8       	ldi	r16, 0x84	; 132
     4dc:	10 e0       	ldi	r17, 0x00	; 0
     4de:	05 c0       	rjmp	.+10     	; 0x4ea <can_transmit+0x104>
	}
	
	int buffer_control;
	
	if (buffer_select == MCP_TXB0CTRL){
		buffer_control = MCP_RTS_TX0;
     4e0:	01 e8       	ldi	r16, 0x81	; 129
     4e2:	10 e0       	ldi	r17, 0x00	; 0
     4e4:	02 c0       	rjmp	.+4      	; 0x4ea <can_transmit+0x104>
	}
	else if (buffer_select == MCP_TXB1CTRL){
		buffer_control = MCP_RTS_TX1;
     4e6:	02 e8       	ldi	r16, 0x82	; 130
     4e8:	10 e0       	ldi	r17, 0x00	; 0
	}
	else{
		return; 
	}
	
	printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
     4ea:	c7 01       	movw	r24, r14
     4ec:	06 96       	adiw	r24, 0x06	; 6
     4ee:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     4f2:	b8 2e       	mov	r11, r24
     4f4:	a9 2e       	mov	r10, r25
     4f6:	c3 01       	movw	r24, r6
     4f8:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     4fc:	d8 2e       	mov	r13, r24
     4fe:	c9 2e       	mov	r12, r25
     500:	c2 01       	movw	r24, r4
     502:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     506:	7c 01       	movw	r14, r24
     508:	c1 01       	movw	r24, r2
     50a:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     50e:	af 92       	push	r10
     510:	bf 92       	push	r11
     512:	cf 92       	push	r12
     514:	df 92       	push	r13
     516:	95 95       	asr	r25
     518:	87 95       	ror	r24
     51a:	95 95       	asr	r25
     51c:	87 95       	ror	r24
     51e:	95 95       	asr	r25
     520:	87 95       	ror	r24
     522:	95 95       	asr	r25
     524:	87 95       	ror	r24
     526:	95 95       	asr	r25
     528:	87 95       	ror	r24
     52a:	8e 29       	or	r24, r14
     52c:	9f 29       	or	r25, r15
     52e:	9f 93       	push	r25
     530:	8f 93       	push	r24
     532:	88 e1       	ldi	r24, 0x18	; 24
     534:	91 e0       	ldi	r25, 0x01	; 1
     536:	9f 93       	push	r25
     538:	8f 93       	push	r24
     53a:	0e 94 51 08 	call	0x10a2	; 0x10a2 <printf>
	
	mcp2515_request_to_send(buffer_control);
     53e:	c8 01       	movw	r24, r16
     540:	0e 94 4b 04 	call	0x896	; 0x896 <mcp2515_request_to_send>
     544:	0f b6       	in	r0, 0x3f	; 63
     546:	f8 94       	cli
     548:	de bf       	out	0x3e, r29	; 62
     54a:	0f be       	out	0x3f, r0	; 63
     54c:	cd bf       	out	0x3d, r28	; 61
}
     54e:	0f 90       	pop	r0
     550:	0f 90       	pop	r0
     552:	df 91       	pop	r29
     554:	cf 91       	pop	r28
     556:	1f 91       	pop	r17
     558:	0f 91       	pop	r16
     55a:	ff 90       	pop	r15
     55c:	ef 90       	pop	r14
     55e:	df 90       	pop	r13
     560:	cf 90       	pop	r12
     562:	bf 90       	pop	r11
     564:	af 90       	pop	r10
     566:	9f 90       	pop	r9
     568:	8f 90       	pop	r8
     56a:	7f 90       	pop	r7
     56c:	6f 90       	pop	r6
     56e:	5f 90       	pop	r5
     570:	4f 90       	pop	r4
     572:	3f 90       	pop	r3
     574:	2f 90       	pop	r2
     576:	08 95       	ret

00000578 <can_poll_interrupt>:
}


uint8_t can_poll_interrupt(){
	
	while(!(PINE & (1 << PE0))){}
     578:	28 9b       	sbis	0x05, 0	; 5
     57a:	fe cf       	rjmp	.-4      	; 0x578 <can_poll_interrupt>
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     57c:	8c e2       	ldi	r24, 0x2C	; 44
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     584:	80 fd       	sbrc	r24, 0
     586:	08 c0       	rjmp	.+16     	; 0x598 <can_poll_interrupt+0x20>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
	}
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     588:	8c e2       	ldi	r24, 0x2C	; 44
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     590:	81 ff       	sbrs	r24, 1
     592:	04 c0       	rjmp	.+8      	; 0x59c <can_poll_interrupt+0x24>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
     594:	80 e7       	ldi	r24, 0x70	; 112
     596:	08 95       	ret
	
	while(!(PINE & (1 << PE0))){}
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
     598:	80 e6       	ldi	r24, 0x60	; 96
     59a:	08 95       	ret
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
	}
	return -1;
     59c:	8f ef       	ldi	r24, 0xFF	; 255
}
     59e:	08 95       	ret

000005a0 <can_recieve>:
	printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}

can_message can_recieve(can_message* msg){
     5a0:	2f 92       	push	r2
     5a2:	3f 92       	push	r3
     5a4:	4f 92       	push	r4
     5a6:	5f 92       	push	r5
     5a8:	6f 92       	push	r6
     5aa:	7f 92       	push	r7
     5ac:	8f 92       	push	r8
     5ae:	9f 92       	push	r9
     5b0:	af 92       	push	r10
     5b2:	bf 92       	push	r11
     5b4:	cf 92       	push	r12
     5b6:	df 92       	push	r13
     5b8:	ef 92       	push	r14
     5ba:	ff 92       	push	r15
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
     5c4:	cd b7       	in	r28, 0x3d	; 61
     5c6:	de b7       	in	r29, 0x3e	; 62
     5c8:	2e 97       	sbiw	r28, 0x0e	; 14
     5ca:	0f b6       	in	r0, 0x3f	; 63
     5cc:	f8 94       	cli
     5ce:	de bf       	out	0x3e, r29	; 62
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	cd bf       	out	0x3d, r28	; 61
     5d4:	5c 01       	movw	r10, r24
	can_message m;
	
	uint8_t buffer_select = can_poll_interrupt();
     5d6:	0e 94 bc 02 	call	0x578	; 0x578 <can_poll_interrupt>
     5da:	8c 87       	std	Y+12, r24	; 0x0c
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
     5dc:	c8 2e       	mov	r12, r24
     5de:	d1 2c       	mov	r13, r1
     5e0:	36 01       	movw	r6, r12
     5e2:	2f ef       	ldi	r18, 0xFF	; 255
     5e4:	62 1a       	sub	r6, r18
     5e6:	72 0a       	sbc	r7, r18
     5e8:	c3 01       	movw	r24, r6
     5ea:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     5ee:	8c 01       	movw	r16, r24
     5f0:	26 01       	movw	r4, r12
     5f2:	32 e0       	ldi	r19, 0x02	; 2
     5f4:	43 0e       	add	r4, r19
     5f6:	51 1c       	adc	r5, r1
     5f8:	c2 01       	movw	r24, r4
     5fa:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     5fe:	95 95       	asr	r25
     600:	87 95       	ror	r24
     602:	95 95       	asr	r25
     604:	87 95       	ror	r24
     606:	95 95       	asr	r25
     608:	87 95       	ror	r24
     60a:	95 95       	asr	r25
     60c:	87 95       	ror	r24
     60e:	95 95       	asr	r25
     610:	87 95       	ror	r24
     612:	00 0f       	add	r16, r16
     614:	11 1f       	adc	r17, r17
     616:	00 0f       	add	r16, r16
     618:	11 1f       	adc	r17, r17
     61a:	00 0f       	add	r16, r16
     61c:	11 1f       	adc	r17, r17
     61e:	fc 01       	movw	r30, r24
     620:	e0 2b       	or	r30, r16
     622:	f1 2b       	or	r31, r17
     624:	fe 87       	std	Y+14, r31	; 0x0e
     626:	ed 87       	std	Y+13, r30	; 0x0d
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
     628:	46 01       	movw	r8, r12
     62a:	f5 e0       	ldi	r31, 0x05	; 5
     62c:	8f 0e       	add	r8, r31
     62e:	91 1c       	adc	r9, r1
     630:	c4 01       	movw	r24, r8
     632:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     636:	8f 70       	andi	r24, 0x0F	; 15
     638:	28 2e       	mov	r2, r24
	
	for(uint8_t i = 0; i < m.length; i++){
     63a:	b9 f0       	breq	.+46     	; 0x66a <can_recieve+0xca>
     63c:	8e 01       	movw	r16, r28
     63e:	0c 5f       	subi	r16, 0xFC	; 252
     640:	1f 4f       	sbci	r17, 0xFF	; 255
     642:	31 2c       	mov	r3, r1
     644:	ce 01       	movw	r24, r28
     646:	80 95       	com	r24
     648:	90 95       	com	r25
     64a:	03 96       	adiw	r24, 0x03	; 3
     64c:	7c 01       	movw	r14, r24
     64e:	2c 85       	ldd	r18, Y+12	; 0x0c
     650:	e2 0e       	add	r14, r18
     652:	f1 1c       	adc	r15, r1
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
     654:	c7 01       	movw	r24, r14
     656:	80 0f       	add	r24, r16
     658:	91 1f       	adc	r25, r17
     65a:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     65e:	f8 01       	movw	r30, r16
     660:	81 93       	st	Z+, r24
     662:	8f 01       	movw	r16, r30
	uint8_t buffer_select = can_poll_interrupt();
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
	
	for(uint8_t i = 0; i < m.length; i++){
     664:	33 94       	inc	r3
     666:	32 10       	cpse	r3, r2
     668:	f5 cf       	rjmp	.-22     	; 0x654 <can_recieve+0xb4>
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
	}
	
	printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
     66a:	c6 01       	movw	r24, r12
     66c:	06 96       	adiw	r24, 0x06	; 6
     66e:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     672:	f8 2e       	mov	r15, r24
     674:	e9 2e       	mov	r14, r25
     676:	c4 01       	movw	r24, r8
     678:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     67c:	d8 2e       	mov	r13, r24
     67e:	c9 2e       	mov	r12, r25
     680:	c3 01       	movw	r24, r6
     682:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     686:	8c 01       	movw	r16, r24
     688:	c2 01       	movw	r24, r4
     68a:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     68e:	ef 92       	push	r14
     690:	ff 92       	push	r15
     692:	cf 92       	push	r12
     694:	df 92       	push	r13
     696:	95 95       	asr	r25
     698:	87 95       	ror	r24
     69a:	95 95       	asr	r25
     69c:	87 95       	ror	r24
     69e:	95 95       	asr	r25
     6a0:	87 95       	ror	r24
     6a2:	95 95       	asr	r25
     6a4:	87 95       	ror	r24
     6a6:	95 95       	asr	r25
     6a8:	87 95       	ror	r24
     6aa:	00 0f       	add	r16, r16
     6ac:	11 1f       	adc	r17, r17
     6ae:	00 0f       	add	r16, r16
     6b0:	11 1f       	adc	r17, r17
     6b2:	00 0f       	add	r16, r16
     6b4:	11 1f       	adc	r17, r17
     6b6:	80 2b       	or	r24, r16
     6b8:	91 2b       	or	r25, r17
     6ba:	9f 93       	push	r25
     6bc:	8f 93       	push	r24
     6be:	88 e1       	ldi	r24, 0x18	; 24
     6c0:	91 e0       	ldi	r25, 0x01	; 1
     6c2:	9f 93       	push	r25
     6c4:	8f 93       	push	r24
     6c6:	0e 94 51 08 	call	0x10a2	; 0x10a2 <printf>
	
	
	switch(buffer_select){
     6ca:	0f b6       	in	r0, 0x3f	; 63
     6cc:	f8 94       	cli
     6ce:	de bf       	out	0x3e, r29	; 62
     6d0:	0f be       	out	0x3f, r0	; 63
     6d2:	cd bf       	out	0x3d, r28	; 61
     6d4:	3c 85       	ldd	r19, Y+12	; 0x0c
     6d6:	30 36       	cpi	r19, 0x60	; 96
     6d8:	19 f0       	breq	.+6      	; 0x6e0 <can_recieve+0x140>
     6da:	30 37       	cpi	r19, 0x70	; 112
     6dc:	51 f0       	breq	.+20     	; 0x6f2 <can_recieve+0x152>
     6de:	11 c0       	rjmp	.+34     	; 0x702 <can_recieve+0x162>
		case MCP_RXB0CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
     6e0:	40 e0       	ldi	r20, 0x00	; 0
     6e2:	50 e0       	ldi	r21, 0x00	; 0
     6e4:	61 e0       	ldi	r22, 0x01	; 1
     6e6:	70 e0       	ldi	r23, 0x00	; 0
     6e8:	8c e2       	ldi	r24, 0x2C	; 44
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	0e 94 50 04 	call	0x8a0	; 0x8a0 <mcp2515_bit_modify>
		break;
     6f0:	08 c0       	rjmp	.+16     	; 0x702 <can_recieve+0x162>
		case MCP_RXB1CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
     6f2:	40 e0       	ldi	r20, 0x00	; 0
     6f4:	50 e0       	ldi	r21, 0x00	; 0
     6f6:	62 e0       	ldi	r22, 0x02	; 2
     6f8:	70 e0       	ldi	r23, 0x00	; 0
     6fa:	8c e2       	ldi	r24, 0x2C	; 44
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	0e 94 50 04 	call	0x8a0	; 0x8a0 <mcp2515_bit_modify>
		break;
	}
	
	return m;
     702:	8d 85       	ldd	r24, Y+13	; 0x0d
     704:	9e 85       	ldd	r25, Y+14	; 0x0e
     706:	9a 83       	std	Y+2, r25	; 0x02
     708:	89 83       	std	Y+1, r24	; 0x01
     70a:	2b 82       	std	Y+3, r2	; 0x03
     70c:	8b e0       	ldi	r24, 0x0B	; 11
     70e:	fe 01       	movw	r30, r28
     710:	31 96       	adiw	r30, 0x01	; 1
     712:	d5 01       	movw	r26, r10
     714:	01 90       	ld	r0, Z+
     716:	0d 92       	st	X+, r0
     718:	8a 95       	dec	r24
     71a:	e1 f7       	brne	.-8      	; 0x714 <can_recieve+0x174>
}
     71c:	c5 01       	movw	r24, r10
     71e:	2e 96       	adiw	r28, 0x0e	; 14
     720:	0f b6       	in	r0, 0x3f	; 63
     722:	f8 94       	cli
     724:	de bf       	out	0x3e, r29	; 62
     726:	0f be       	out	0x3f, r0	; 63
     728:	cd bf       	out	0x3d, r28	; 61
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	1f 91       	pop	r17
     730:	0f 91       	pop	r16
     732:	ff 90       	pop	r15
     734:	ef 90       	pop	r14
     736:	df 90       	pop	r13
     738:	cf 90       	pop	r12
     73a:	bf 90       	pop	r11
     73c:	af 90       	pop	r10
     73e:	9f 90       	pop	r9
     740:	8f 90       	pop	r8
     742:	7f 90       	pop	r7
     744:	6f 90       	pop	r6
     746:	5f 90       	pop	r5
     748:	4f 90       	pop	r4
     74a:	3f 90       	pop	r3
     74c:	2f 90       	pop	r2
     74e:	08 95       	ret

00000750 <slider_left_read>:
     750:	86 e0       	ldi	r24, 0x06	; 6
     752:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     756:	81 e4       	ldi	r24, 0x41	; 65
     758:	8a 95       	dec	r24
     75a:	f1 f7       	brne	.-4      	; 0x758 <slider_left_read+0x8>
     75c:	00 c0       	rjmp	.+0      	; 0x75e <slider_left_read+0xe>
     75e:	80 91 00 14 	lds	r24, 0x1400
     762:	08 95       	ret

00000764 <buttons_init>:
     764:	b9 98       	cbi	0x17, 1	; 23
     766:	87 b3       	in	r24, 0x17	; 23
     768:	81 70       	andi	r24, 0x01	; 1
     76a:	87 bb       	out	0x17, r24	; 23
     76c:	87 b3       	in	r24, 0x17	; 23
     76e:	82 70       	andi	r24, 0x02	; 2
     770:	87 bb       	out	0x17, r24	; 23
     772:	87 b3       	in	r24, 0x17	; 23
     774:	84 70       	andi	r24, 0x04	; 4
     776:	87 bb       	out	0x17, r24	; 23
     778:	c2 9a       	sbi	0x18, 2	; 24
     77a:	08 95       	ret

0000077c <button_left_read>:
     77c:	81 e0       	ldi	r24, 0x01	; 1
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	b1 99       	sbic	0x16, 1	; 22
     782:	02 c0       	rjmp	.+4      	; 0x788 <button_left_read+0xc>
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	08 95       	ret

0000078a <button_right_read>:
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	b0 99       	sbic	0x16, 0	; 22
     790:	02 c0       	rjmp	.+4      	; 0x796 <button_right_read+0xc>
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	08 95       	ret

00000798 <main>:

void SRAM_test(void);



int main(void){
     798:	cf 93       	push	r28
     79a:	df 93       	push	r29
     79c:	cd b7       	in	r28, 0x3d	; 61
     79e:	de b7       	in	r29, 0x3e	; 62
     7a0:	66 97       	sbiw	r28, 0x16	; 22
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	f8 94       	cli
     7a6:	de bf       	out	0x3e, r29	; 62
     7a8:	0f be       	out	0x3f, r0	; 63
     7aa:	cd bf       	out	0x3d, r28	; 61
	fdevopen(uart_Transmit, uart_Receive);
     7ac:	6e ec       	ldi	r22, 0xCE	; 206
     7ae:	76 e0       	ldi	r23, 0x06	; 6
     7b0:	8a ec       	ldi	r24, 0xCA	; 202
     7b2:	96 e0       	ldi	r25, 0x06	; 6
     7b4:	0e 94 06 08 	call	0x100c	; 0x100c <fdevopen>
	
//switch case that only rewrites menu when joystick is moved
	
	
	MCUCR |= (1 << SRE);
     7b8:	85 b7       	in	r24, 0x35	; 53
     7ba:	80 68       	ori	r24, 0x80	; 128
     7bc:	85 bf       	out	0x35, r24	; 53
	
	uart_Init(MYUBRR);
     7be:	8f e1       	ldi	r24, 0x1F	; 31
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	0e 94 d2 06 	call	0xda4	; 0xda4 <uart_Init>
	
	
	buttons_init(); // useless thus far
     7c6:	0e 94 b2 03 	call	0x764	; 0x764 <buttons_init>
	oled_init();	
     7ca:	0e 94 9a 05 	call	0xb34	; 0xb34 <oled_init>
	oled_clear_screen();	
     7ce:	0e 94 2d 06 	call	0xc5a	; 0xc5a <oled_clear_screen>
	oled_home();
     7d2:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_home>
	
	
	Menuitem* menu = create_menu();
     7d6:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <create_menu>
	menu_selector = menu;
     7da:	90 93 61 02 	sts	0x0261, r25
     7de:	80 93 60 02 	sts	0x0260, r24
	menu_line_nr = 0; 
     7e2:	10 92 5d 02 	sts	0x025D, r1
     7e6:	10 92 5c 02 	sts	0x025C, r1
	//for(int i = 0; i < msg.length; i++){
		//msg.data[i] = i;	
	//}
	

	can_init(MODE_LOOPBACK);
     7ea:	80 e4       	ldi	r24, 0x40	; 64
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <can_init>
	can_message msg;
	
	msg.id = 3;
     7f2:	83 e0       	ldi	r24, 0x03	; 3
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	9a 83       	std	Y+2, r25	; 0x02
     7f8:	89 83       	std	Y+1, r24	; 0x01
	msg.length = 1;
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	8b 83       	std	Y+3, r24	; 0x03
	msg.data[0] = 4;
     7fe:	84 e0       	ldi	r24, 0x04	; 4
     800:	8c 83       	std	Y+4, r24	; 0x04
	
	can_transmit(&msg, MCP_TXB0CTRL);
     802:	60 e3       	ldi	r22, 0x30	; 48
     804:	70 e0       	ldi	r23, 0x00	; 0
     806:	ce 01       	movw	r24, r28
     808:	01 96       	adiw	r24, 0x01	; 1
     80a:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <can_transmit>

	can_message stuff = can_recieve();
     80e:	ce 01       	movw	r24, r28
     810:	0c 96       	adiw	r24, 0x0c	; 12
     812:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <can_recieve>
	
	
	
    while(1){
		;
		printf("id: %d\t\tlength: %d\tdata: %d\n",stuff.id, stuff.length, stuff.data[0]);
     816:	04 e4       	ldi	r16, 0x44	; 68
     818:	11 e0       	ldi	r17, 0x01	; 1
     81a:	8f 85       	ldd	r24, Y+15	; 0x0f
     81c:	1f 92       	push	r1
     81e:	8f 93       	push	r24
     820:	8e 85       	ldd	r24, Y+14	; 0x0e
     822:	1f 92       	push	r1
     824:	8f 93       	push	r24
     826:	8d 85       	ldd	r24, Y+13	; 0x0d
     828:	8f 93       	push	r24
     82a:	8c 85       	ldd	r24, Y+12	; 0x0c
     82c:	8f 93       	push	r24
     82e:	1f 93       	push	r17
     830:	0f 93       	push	r16
     832:	0e 94 51 08 	call	0x10a2	; 0x10a2 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     836:	2f ef       	ldi	r18, 0xFF	; 255
     838:	8f ef       	ldi	r24, 0xFF	; 255
     83a:	92 e0       	ldi	r25, 0x02	; 2
     83c:	21 50       	subi	r18, 0x01	; 1
     83e:	80 40       	sbci	r24, 0x00	; 0
     840:	90 40       	sbci	r25, 0x00	; 0
     842:	e1 f7       	brne	.-8      	; 0x83c <main+0xa4>
     844:	00 c0       	rjmp	.+0      	; 0x846 <main+0xae>
     846:	00 c0       	rjmp	.+0      	; 0x848 <main+0xb0>
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	f8 94       	cli
     84c:	de bf       	out	0x3e, r29	; 62
     84e:	0f be       	out	0x3f, r0	; 63
     850:	cd bf       	out	0x3d, r28	; 61
     852:	e3 cf       	rjmp	.-58     	; 0x81a <main+0x82>

00000854 <mcp2515_read>:
     854:	cf 93       	push	r28
     856:	c8 2f       	mov	r28, r24
     858:	c4 98       	cbi	0x18, 4	; 24
     85a:	83 e0       	ldi	r24, 0x03	; 3
     85c:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     860:	8c 2f       	mov	r24, r28
     862:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     86c:	c4 9a       	sbi	0x18, 4	; 24
     86e:	cf 91       	pop	r28
     870:	08 95       	ret

00000872 <mcp2515_write>:
     872:	cf 93       	push	r28
     874:	df 93       	push	r29
     876:	d8 2f       	mov	r29, r24
     878:	c6 2f       	mov	r28, r22
     87a:	c4 98       	cbi	0x18, 4	; 24
     87c:	82 e0       	ldi	r24, 0x02	; 2
     87e:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     882:	8d 2f       	mov	r24, r29
     884:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     888:	8c 2f       	mov	r24, r28
     88a:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     88e:	c4 9a       	sbi	0x18, 4	; 24
     890:	df 91       	pop	r29
     892:	cf 91       	pop	r28
     894:	08 95       	ret

00000896 <mcp2515_request_to_send>:
     896:	c4 98       	cbi	0x18, 4	; 24
     898:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     89c:	c4 9a       	sbi	0x18, 4	; 24
     89e:	08 95       	ret

000008a0 <mcp2515_bit_modify>:
     8a0:	1f 93       	push	r17
     8a2:	cf 93       	push	r28
     8a4:	df 93       	push	r29
     8a6:	18 2f       	mov	r17, r24
     8a8:	d6 2f       	mov	r29, r22
     8aa:	c4 2f       	mov	r28, r20
     8ac:	c4 98       	cbi	0x18, 4	; 24
     8ae:	85 e0       	ldi	r24, 0x05	; 5
     8b0:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     8b4:	81 2f       	mov	r24, r17
     8b6:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     8ba:	8d 2f       	mov	r24, r29
     8bc:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     8c0:	8c 2f       	mov	r24, r28
     8c2:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     8c6:	c4 9a       	sbi	0x18, 4	; 24
     8c8:	df 91       	pop	r29
     8ca:	cf 91       	pop	r28
     8cc:	1f 91       	pop	r17
     8ce:	08 95       	ret

000008d0 <mcp2515_reset>:
     8d0:	c4 98       	cbi	0x18, 4	; 24
     8d2:	80 ec       	ldi	r24, 0xC0	; 192
     8d4:	0e 94 c4 06 	call	0xd88	; 0xd88 <spi_write>
     8d8:	c4 9a       	sbi	0x18, 4	; 24
     8da:	08 95       	ret

000008dc <mcp2515_init>:
     8dc:	0e 94 bd 06 	call	0xd7a	; 0xd7a <spi_init>
     8e0:	0e 94 68 04 	call	0x8d0	; 0x8d0 <mcp2515_reset>
     8e4:	8e e0       	ldi	r24, 0x0E	; 14
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	0e 94 2a 04 	call	0x854	; 0x854 <mcp2515_read>
     8ec:	80 7e       	andi	r24, 0xE0	; 224
     8ee:	99 27       	eor	r25, r25
     8f0:	80 38       	cpi	r24, 0x80	; 128
     8f2:	91 05       	cpc	r25, r1
     8f4:	39 f0       	breq	.+14     	; 0x904 <mcp2515_init+0x28>
     8f6:	80 ed       	ldi	r24, 0xD0	; 208
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	0e 94 65 08 	call	0x10ca	; 0x10ca <puts>
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	08 95       	ret
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	08 95       	ret

0000090a <menu_toggle_negative>:
     90a:	08 95       	ret

0000090c <menu_snake_fn>:
     90c:	cf 93       	push	r28
     90e:	df 93       	push	r29
     910:	0e 94 2d 06 	call	0xc5a	; 0xc5a <oled_clear_screen>
     914:	c2 e0       	ldi	r28, 0x02	; 2
     916:	d2 e0       	ldi	r29, 0x02	; 2
     918:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_home>
     91c:	df 93       	push	r29
     91e:	cf 93       	push	r28
     920:	0e 94 3b 06 	call	0xc76	; 0xc76 <oled_printf>
     924:	0e 94 be 03 	call	0x77c	; 0x77c <button_left_read>
     928:	0f 90       	pop	r0
     92a:	0f 90       	pop	r0
     92c:	89 2b       	or	r24, r25
     92e:	a1 f3       	breq	.-24     	; 0x918 <menu_snake_fn+0xc>
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	08 95       	ret

00000936 <new_Menuitem>:
     936:	df 92       	push	r13
     938:	ef 92       	push	r14
     93a:	ff 92       	push	r15
     93c:	0f 93       	push	r16
     93e:	1f 93       	push	r17
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
     944:	7c 01       	movw	r14, r24
     946:	8b 01       	movw	r16, r22
     948:	d4 2e       	mov	r13, r20
     94a:	89 e0       	ldi	r24, 0x09	; 9
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	0e 94 df 06 	call	0xdbe	; 0xdbe <malloc>
     952:	ec 01       	movw	r28, r24
     954:	fe 82       	std	Y+6, r15	; 0x06
     956:	ed 82       	std	Y+5, r14	; 0x05
     958:	18 87       	std	Y+8, r17	; 0x08
     95a:	0f 83       	std	Y+7, r16	; 0x07
     95c:	d8 82       	st	Y, r13
     95e:	4d 2d       	mov	r20, r13
     960:	50 e0       	ldi	r21, 0x00	; 0
     962:	ca 01       	movw	r24, r20
     964:	88 0f       	add	r24, r24
     966:	99 1f       	adc	r25, r25
     968:	88 0f       	add	r24, r24
     96a:	99 1f       	adc	r25, r25
     96c:	88 0f       	add	r24, r24
     96e:	99 1f       	adc	r25, r25
     970:	84 0f       	add	r24, r20
     972:	95 1f       	adc	r25, r21
     974:	0e 94 df 06 	call	0xdbe	; 0xdbe <malloc>
     978:	9a 83       	std	Y+2, r25	; 0x02
     97a:	89 83       	std	Y+1, r24	; 0x01
     97c:	ce 01       	movw	r24, r28
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	ff 90       	pop	r15
     988:	ef 90       	pop	r14
     98a:	df 90       	pop	r13
     98c:	08 95       	ret

0000098e <assign_parents>:
     98e:	1f 93       	push	r17
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	ec 01       	movw	r28, r24
     996:	88 81       	ld	r24, Y
     998:	88 23       	and	r24, r24
     99a:	01 f1       	breq	.+64     	; 0x9dc <assign_parents+0x4e>
     99c:	10 e0       	ldi	r17, 0x00	; 0
     99e:	81 2f       	mov	r24, r17
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	88 0f       	add	r24, r24
     9a4:	99 1f       	adc	r25, r25
     9a6:	e9 81       	ldd	r30, Y+1	; 0x01
     9a8:	fa 81       	ldd	r31, Y+2	; 0x02
     9aa:	e8 0f       	add	r30, r24
     9ac:	f9 1f       	adc	r31, r25
     9ae:	01 90       	ld	r0, Z+
     9b0:	f0 81       	ld	r31, Z
     9b2:	e0 2d       	mov	r30, r0
     9b4:	d4 83       	std	Z+4, r29	; 0x04
     9b6:	c3 83       	std	Z+3, r28	; 0x03
     9b8:	29 81       	ldd	r18, Y+1	; 0x01
     9ba:	3a 81       	ldd	r19, Y+2	; 0x02
     9bc:	f9 01       	movw	r30, r18
     9be:	e8 0f       	add	r30, r24
     9c0:	f9 1f       	adc	r31, r25
     9c2:	01 90       	ld	r0, Z+
     9c4:	f0 81       	ld	r31, Z
     9c6:	e0 2d       	mov	r30, r0
     9c8:	80 81       	ld	r24, Z
     9ca:	88 23       	and	r24, r24
     9cc:	19 f0       	breq	.+6      	; 0x9d4 <assign_parents+0x46>
     9ce:	cf 01       	movw	r24, r30
     9d0:	0e 94 c7 04 	call	0x98e	; 0x98e <assign_parents>
     9d4:	1f 5f       	subi	r17, 0xFF	; 255
     9d6:	88 81       	ld	r24, Y
     9d8:	18 17       	cp	r17, r24
     9da:	08 f3       	brcs	.-62     	; 0x99e <assign_parents+0x10>
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	1f 91       	pop	r17
     9e2:	08 95       	ret

000009e4 <create_menu>:
     9e4:	0f 93       	push	r16
     9e6:	1f 93       	push	r17
     9e8:	cf 93       	push	r28
     9ea:	df 93       	push	r29
     9ec:	43 e0       	ldi	r20, 0x03	; 3
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	8d e0       	ldi	r24, 0x0D	; 13
     9f4:	92 e0       	ldi	r25, 0x02	; 2
     9f6:	0e 94 9b 04 	call	0x936	; 0x936 <new_Menuitem>
     9fa:	ec 01       	movw	r28, r24
     9fc:	09 81       	ldd	r16, Y+1	; 0x01
     9fe:	1a 81       	ldd	r17, Y+2	; 0x02
     a00:	40 e0       	ldi	r20, 0x00	; 0
     a02:	66 e8       	ldi	r22, 0x86	; 134
     a04:	74 e0       	ldi	r23, 0x04	; 4
     a06:	82 e1       	ldi	r24, 0x12	; 18
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	0e 94 9b 04 	call	0x936	; 0x936 <new_Menuitem>
     a0e:	f8 01       	movw	r30, r16
     a10:	91 83       	std	Z+1, r25	; 0x01
     a12:	80 83       	st	Z, r24
     a14:	09 81       	ldd	r16, Y+1	; 0x01
     a16:	1a 81       	ldd	r17, Y+2	; 0x02
     a18:	42 e0       	ldi	r20, 0x02	; 2
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	70 e0       	ldi	r23, 0x00	; 0
     a1e:	88 e1       	ldi	r24, 0x18	; 24
     a20:	92 e0       	ldi	r25, 0x02	; 2
     a22:	0e 94 9b 04 	call	0x936	; 0x936 <new_Menuitem>
     a26:	f8 01       	movw	r30, r16
     a28:	93 83       	std	Z+3, r25	; 0x03
     a2a:	82 83       	std	Z+2, r24	; 0x02
     a2c:	e9 81       	ldd	r30, Y+1	; 0x01
     a2e:	fa 81       	ldd	r31, Y+2	; 0x02
     a30:	02 80       	ldd	r0, Z+2	; 0x02
     a32:	f3 81       	ldd	r31, Z+3	; 0x03
     a34:	e0 2d       	mov	r30, r0
     a36:	01 81       	ldd	r16, Z+1	; 0x01
     a38:	12 81       	ldd	r17, Z+2	; 0x02
     a3a:	40 e0       	ldi	r20, 0x00	; 0
     a3c:	6f e6       	ldi	r22, 0x6F	; 111
     a3e:	76 e0       	ldi	r23, 0x06	; 6
     a40:	81 e2       	ldi	r24, 0x21	; 33
     a42:	92 e0       	ldi	r25, 0x02	; 2
     a44:	0e 94 9b 04 	call	0x936	; 0x936 <new_Menuitem>
     a48:	f8 01       	movw	r30, r16
     a4a:	91 83       	std	Z+1, r25	; 0x01
     a4c:	80 83       	st	Z, r24
     a4e:	e9 81       	ldd	r30, Y+1	; 0x01
     a50:	fa 81       	ldd	r31, Y+2	; 0x02
     a52:	02 80       	ldd	r0, Z+2	; 0x02
     a54:	f3 81       	ldd	r31, Z+3	; 0x03
     a56:	e0 2d       	mov	r30, r0
     a58:	01 81       	ldd	r16, Z+1	; 0x01
     a5a:	12 81       	ldd	r17, Z+2	; 0x02
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	69 e5       	ldi	r22, 0x59	; 89
     a60:	76 e0       	ldi	r23, 0x06	; 6
     a62:	8a e2       	ldi	r24, 0x2A	; 42
     a64:	92 e0       	ldi	r25, 0x02	; 2
     a66:	0e 94 9b 04 	call	0x936	; 0x936 <new_Menuitem>
     a6a:	f8 01       	movw	r30, r16
     a6c:	93 83       	std	Z+3, r25	; 0x03
     a6e:	82 83       	std	Z+2, r24	; 0x02
     a70:	09 81       	ldd	r16, Y+1	; 0x01
     a72:	1a 81       	ldd	r17, Y+2	; 0x02
     a74:	40 e0       	ldi	r20, 0x00	; 0
     a76:	65 e8       	ldi	r22, 0x85	; 133
     a78:	74 e0       	ldi	r23, 0x04	; 4
     a7a:	8a e3       	ldi	r24, 0x3A	; 58
     a7c:	92 e0       	ldi	r25, 0x02	; 2
     a7e:	0e 94 9b 04 	call	0x936	; 0x936 <new_Menuitem>
     a82:	f8 01       	movw	r30, r16
     a84:	95 83       	std	Z+5, r25	; 0x05
     a86:	84 83       	std	Z+4, r24	; 0x04
     a88:	ce 01       	movw	r24, r28
     a8a:	0e 94 c7 04 	call	0x98e	; 0x98e <assign_parents>
     a8e:	ce 01       	movw	r24, r28
     a90:	df 91       	pop	r29
     a92:	cf 91       	pop	r28
     a94:	1f 91       	pop	r17
     a96:	0f 91       	pop	r16
     a98:	08 95       	ret

00000a9a <oled_print_char>:
     a9a:	28 e0       	ldi	r18, 0x08	; 8
     a9c:	82 9f       	mul	r24, r18
     a9e:	c0 01       	movw	r24, r0
     aa0:	11 24       	eor	r1, r1
     aa2:	fc 01       	movw	r30, r24
     aa4:	e0 59       	subi	r30, 0x90	; 144
     aa6:	f0 40       	sbci	r31, 0x00	; 0
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	84 91       	lpm	r24, Z
     aae:	a0 91 08 01 	lds	r26, 0x0108
     ab2:	b0 91 09 01 	lds	r27, 0x0109
     ab6:	8c 93       	st	X, r24
     ab8:	2f 5f       	subi	r18, 0xFF	; 255
     aba:	3f 4f       	sbci	r19, 0xFF	; 255
     abc:	31 96       	adiw	r30, 0x01	; 1
     abe:	28 30       	cpi	r18, 0x08	; 8
     ac0:	31 05       	cpc	r19, r1
     ac2:	a1 f7       	brne	.-24     	; 0xaac <oled_print_char+0x12>
     ac4:	08 95       	ret

00000ac6 <oled_goto_col>:
     ac6:	28 2f       	mov	r18, r24
     ac8:	2f 70       	andi	r18, 0x0F	; 15
     aca:	e0 91 06 01 	lds	r30, 0x0106
     ace:	f0 91 07 01 	lds	r31, 0x0107
     ad2:	20 83       	st	Z, r18
     ad4:	80 7f       	andi	r24, 0xF0	; 240
     ad6:	99 27       	eor	r25, r25
     ad8:	95 95       	asr	r25
     ada:	87 95       	ror	r24
     adc:	95 95       	asr	r25
     ade:	87 95       	ror	r24
     ae0:	95 95       	asr	r25
     ae2:	87 95       	ror	r24
     ae4:	95 95       	asr	r25
     ae6:	87 95       	ror	r24
     ae8:	80 61       	ori	r24, 0x10	; 16
     aea:	e0 91 06 01 	lds	r30, 0x0106
     aee:	f0 91 07 01 	lds	r31, 0x0107
     af2:	80 83       	st	Z, r24
     af4:	08 95       	ret

00000af6 <oled_goto_page>:
     af6:	80 55       	subi	r24, 0x50	; 80
     af8:	e0 91 06 01 	lds	r30, 0x0106
     afc:	f0 91 07 01 	lds	r31, 0x0107
     b00:	80 83       	st	Z, r24
     b02:	e0 91 06 01 	lds	r30, 0x0106
     b06:	f0 91 07 01 	lds	r31, 0x0107
     b0a:	10 82       	st	Z, r1
     b0c:	08 95       	ret

00000b0e <oled_goto_pos>:
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	ec 01       	movw	r28, r24
     b14:	cb 01       	movw	r24, r22
     b16:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_goto_page>
     b1a:	ce 01       	movw	r24, r28
     b1c:	0e 94 63 05 	call	0xac6	; 0xac6 <oled_goto_col>
     b20:	df 91       	pop	r29
     b22:	cf 91       	pop	r28
     b24:	08 95       	ret

00000b26 <oled_home>:
     b26:	60 e0       	ldi	r22, 0x00	; 0
     b28:	70 e0       	ldi	r23, 0x00	; 0
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_goto_pos>
     b32:	08 95       	ret

00000b34 <oled_init>:
     b34:	e0 91 06 01 	lds	r30, 0x0106
     b38:	f0 91 07 01 	lds	r31, 0x0107
     b3c:	8e ea       	ldi	r24, 0xAE	; 174
     b3e:	80 83       	st	Z, r24
     b40:	e0 91 06 01 	lds	r30, 0x0106
     b44:	f0 91 07 01 	lds	r31, 0x0107
     b48:	81 ea       	ldi	r24, 0xA1	; 161
     b4a:	80 83       	st	Z, r24
     b4c:	e0 91 06 01 	lds	r30, 0x0106
     b50:	f0 91 07 01 	lds	r31, 0x0107
     b54:	8a ed       	ldi	r24, 0xDA	; 218
     b56:	80 83       	st	Z, r24
     b58:	e0 91 06 01 	lds	r30, 0x0106
     b5c:	f0 91 07 01 	lds	r31, 0x0107
     b60:	82 e1       	ldi	r24, 0x12	; 18
     b62:	80 83       	st	Z, r24
     b64:	e0 91 06 01 	lds	r30, 0x0106
     b68:	f0 91 07 01 	lds	r31, 0x0107
     b6c:	88 ec       	ldi	r24, 0xC8	; 200
     b6e:	80 83       	st	Z, r24
     b70:	e0 91 06 01 	lds	r30, 0x0106
     b74:	f0 91 07 01 	lds	r31, 0x0107
     b78:	88 ea       	ldi	r24, 0xA8	; 168
     b7a:	80 83       	st	Z, r24
     b7c:	e0 91 06 01 	lds	r30, 0x0106
     b80:	f0 91 07 01 	lds	r31, 0x0107
     b84:	8f e3       	ldi	r24, 0x3F	; 63
     b86:	80 83       	st	Z, r24
     b88:	e0 91 06 01 	lds	r30, 0x0106
     b8c:	f0 91 07 01 	lds	r31, 0x0107
     b90:	85 ed       	ldi	r24, 0xD5	; 213
     b92:	80 83       	st	Z, r24
     b94:	e0 91 06 01 	lds	r30, 0x0106
     b98:	f0 91 07 01 	lds	r31, 0x0107
     b9c:	80 e8       	ldi	r24, 0x80	; 128
     b9e:	80 83       	st	Z, r24
     ba0:	e0 91 06 01 	lds	r30, 0x0106
     ba4:	f0 91 07 01 	lds	r31, 0x0107
     ba8:	81 e8       	ldi	r24, 0x81	; 129
     baa:	80 83       	st	Z, r24
     bac:	e0 91 06 01 	lds	r30, 0x0106
     bb0:	f0 91 07 01 	lds	r31, 0x0107
     bb4:	80 e5       	ldi	r24, 0x50	; 80
     bb6:	80 83       	st	Z, r24
     bb8:	e0 91 06 01 	lds	r30, 0x0106
     bbc:	f0 91 07 01 	lds	r31, 0x0107
     bc0:	89 ed       	ldi	r24, 0xD9	; 217
     bc2:	80 83       	st	Z, r24
     bc4:	e0 91 06 01 	lds	r30, 0x0106
     bc8:	f0 91 07 01 	lds	r31, 0x0107
     bcc:	81 e2       	ldi	r24, 0x21	; 33
     bce:	80 83       	st	Z, r24
     bd0:	e0 91 06 01 	lds	r30, 0x0106
     bd4:	f0 91 07 01 	lds	r31, 0x0107
     bd8:	80 e2       	ldi	r24, 0x20	; 32
     bda:	80 83       	st	Z, r24
     bdc:	e0 91 06 01 	lds	r30, 0x0106
     be0:	f0 91 07 01 	lds	r31, 0x0107
     be4:	82 e0       	ldi	r24, 0x02	; 2
     be6:	80 83       	st	Z, r24
     be8:	e0 91 06 01 	lds	r30, 0x0106
     bec:	f0 91 07 01 	lds	r31, 0x0107
     bf0:	8b ed       	ldi	r24, 0xDB	; 219
     bf2:	80 83       	st	Z, r24
     bf4:	e0 91 06 01 	lds	r30, 0x0106
     bf8:	f0 91 07 01 	lds	r31, 0x0107
     bfc:	80 e3       	ldi	r24, 0x30	; 48
     bfe:	80 83       	st	Z, r24
     c00:	e0 91 06 01 	lds	r30, 0x0106
     c04:	f0 91 07 01 	lds	r31, 0x0107
     c08:	8d ea       	ldi	r24, 0xAD	; 173
     c0a:	80 83       	st	Z, r24
     c0c:	e0 91 06 01 	lds	r30, 0x0106
     c10:	f0 91 07 01 	lds	r31, 0x0107
     c14:	10 82       	st	Z, r1
     c16:	e0 91 06 01 	lds	r30, 0x0106
     c1a:	f0 91 07 01 	lds	r31, 0x0107
     c1e:	84 ea       	ldi	r24, 0xA4	; 164
     c20:	80 83       	st	Z, r24
     c22:	e0 91 06 01 	lds	r30, 0x0106
     c26:	f0 91 07 01 	lds	r31, 0x0107
     c2a:	86 ea       	ldi	r24, 0xA6	; 166
     c2c:	80 83       	st	Z, r24
     c2e:	e0 91 06 01 	lds	r30, 0x0106
     c32:	f0 91 07 01 	lds	r31, 0x0107
     c36:	8f ea       	ldi	r24, 0xAF	; 175
     c38:	80 83       	st	Z, r24
     c3a:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_home>
     c3e:	08 95       	ret

00000c40 <oled_clear_page>:
     c40:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <oled_goto_page>
     c44:	80 e8       	ldi	r24, 0x80	; 128
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	e0 91 08 01 	lds	r30, 0x0108
     c4c:	f0 91 09 01 	lds	r31, 0x0109
     c50:	10 82       	st	Z, r1
     c52:	01 97       	sbiw	r24, 0x01	; 1
     c54:	00 97       	sbiw	r24, 0x00	; 0
     c56:	c1 f7       	brne	.-16     	; 0xc48 <oled_clear_page+0x8>
     c58:	08 95       	ret

00000c5a <oled_clear_screen>:
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	c0 e0       	ldi	r28, 0x00	; 0
     c60:	d0 e0       	ldi	r29, 0x00	; 0
     c62:	ce 01       	movw	r24, r28
     c64:	0e 94 20 06 	call	0xc40	; 0xc40 <oled_clear_page>
     c68:	21 96       	adiw	r28, 0x01	; 1
     c6a:	c8 30       	cpi	r28, 0x08	; 8
     c6c:	d1 05       	cpc	r29, r1
     c6e:	c9 f7       	brne	.-14     	; 0xc62 <oled_clear_screen+0x8>
     c70:	df 91       	pop	r29
     c72:	cf 91       	pop	r28
     c74:	08 95       	ret

00000c76 <oled_printf>:
     c76:	cf 93       	push	r28
     c78:	df 93       	push	r29
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
     c7e:	fe 01       	movw	r30, r28
     c80:	35 96       	adiw	r30, 0x05	; 5
     c82:	61 91       	ld	r22, Z+
     c84:	71 91       	ld	r23, Z+
     c86:	af 01       	movw	r20, r30
     c88:	8a e0       	ldi	r24, 0x0A	; 10
     c8a:	91 e0       	ldi	r25, 0x01	; 1
     c8c:	0e 94 92 08 	call	0x1124	; 0x1124 <vfprintf>
     c90:	df 91       	pop	r29
     c92:	cf 91       	pop	r28
     c94:	08 95       	ret

00000c96 <oled_mode_negative>:
     c96:	e0 91 06 01 	lds	r30, 0x0106
     c9a:	f0 91 07 01 	lds	r31, 0x0107
     c9e:	87 ea       	ldi	r24, 0xA7	; 167
     ca0:	80 83       	st	Z, r24
     ca2:	08 95       	ret

00000ca4 <oled_mode_normal>:
     ca4:	e0 91 06 01 	lds	r30, 0x0106
     ca8:	f0 91 07 01 	lds	r31, 0x0107
     cac:	86 ea       	ldi	r24, 0xA6	; 166
     cae:	80 83       	st	Z, r24
     cb0:	08 95       	ret

00000cb2 <oled_toggle_negative>:
     cb2:	80 91 58 02 	lds	r24, 0x0258
     cb6:	90 91 59 02 	lds	r25, 0x0259
     cba:	89 2b       	or	r24, r25
     cbc:	39 f0       	breq	.+14     	; 0xccc <oled_toggle_negative+0x1a>
     cbe:	0e 94 52 06 	call	0xca4	; 0xca4 <oled_mode_normal>
     cc2:	10 92 59 02 	sts	0x0259, r1
     cc6:	10 92 58 02 	sts	0x0258, r1
     cca:	08 95       	ret
     ccc:	0e 94 4b 06 	call	0xc96	; 0xc96 <oled_mode_negative>
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	90 93 59 02 	sts	0x0259, r25
     cd8:	80 93 58 02 	sts	0x0258, r24
     cdc:	08 95       	ret

00000cde <oled_change_contrast>:
     cde:	cf 93       	push	r28
     ce0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <oled_clear_screen>
     ce4:	0e 94 93 05 	call	0xb26	; 0xb26 <oled_home>
     ce8:	81 e2       	ldi	r24, 0x21	; 33
     cea:	92 e0       	ldi	r25, 0x02	; 2
     cec:	9f 93       	push	r25
     cee:	8f 93       	push	r24
     cf0:	0e 94 3b 06 	call	0xc76	; 0xc76 <oled_printf>
     cf4:	63 e0       	ldi	r22, 0x03	; 3
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_goto_pos>
     d00:	84 e4       	ldi	r24, 0x44	; 68
     d02:	92 e0       	ldi	r25, 0x02	; 2
     d04:	9f 93       	push	r25
     d06:	8f 93       	push	r24
     d08:	0e 94 3b 06 	call	0xc76	; 0xc76 <oled_printf>
     d0c:	67 e0       	ldi	r22, 0x07	; 7
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	83 e0       	ldi	r24, 0x03	; 3
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_goto_pos>
     d18:	80 e5       	ldi	r24, 0x50	; 80
     d1a:	92 e0       	ldi	r25, 0x02	; 2
     d1c:	9f 93       	push	r25
     d1e:	8f 93       	push	r24
     d20:	0e 94 3b 06 	call	0xc76	; 0xc76 <oled_printf>
     d24:	0f 90       	pop	r0
     d26:	0f 90       	pop	r0
     d28:	0f 90       	pop	r0
     d2a:	0f 90       	pop	r0
     d2c:	0f 90       	pop	r0
     d2e:	0f 90       	pop	r0
     d30:	c1 e8       	ldi	r28, 0x81	; 129
     d32:	0e 94 be 03 	call	0x77c	; 0x77c <button_left_read>
     d36:	89 2b       	or	r24, r25
     d38:	f1 f4       	brne	.+60     	; 0xd76 <oled_change_contrast+0x98>
     d3a:	0e 94 c5 03 	call	0x78a	; 0x78a <button_right_read>
     d3e:	89 2b       	or	r24, r25
     d40:	69 f0       	breq	.+26     	; 0xd5c <oled_change_contrast+0x7e>
     d42:	e0 91 06 01 	lds	r30, 0x0106
     d46:	f0 91 07 01 	lds	r31, 0x0107
     d4a:	81 e8       	ldi	r24, 0x81	; 129
     d4c:	80 83       	st	Z, r24
     d4e:	e0 91 08 01 	lds	r30, 0x0108
     d52:	f0 91 09 01 	lds	r31, 0x0109
     d56:	80 e5       	ldi	r24, 0x50	; 80
     d58:	80 83       	st	Z, r24
     d5a:	0d c0       	rjmp	.+26     	; 0xd76 <oled_change_contrast+0x98>
     d5c:	0e 94 a8 03 	call	0x750	; 0x750 <slider_left_read>
     d60:	e0 91 06 01 	lds	r30, 0x0106
     d64:	f0 91 07 01 	lds	r31, 0x0107
     d68:	c0 83       	st	Z, r28
     d6a:	e0 91 08 01 	lds	r30, 0x0108
     d6e:	f0 91 09 01 	lds	r31, 0x0109
     d72:	80 83       	st	Z, r24
     d74:	de cf       	rjmp	.-68     	; 0xd32 <oled_change_contrast+0x54>
     d76:	cf 91       	pop	r28
     d78:	08 95       	ret

00000d7a <spi_init>:
     d7a:	87 b3       	in	r24, 0x17	; 23
     d7c:	80 6b       	ori	r24, 0xB0	; 176
     d7e:	87 bb       	out	0x17, r24	; 23
     d80:	be 98       	cbi	0x17, 6	; 23
     d82:	81 e5       	ldi	r24, 0x51	; 81
     d84:	8d b9       	out	0x0d, r24	; 13
     d86:	08 95       	ret

00000d88 <spi_write>:
     d88:	8f b9       	out	0x0f, r24	; 15
     d8a:	77 9b       	sbis	0x0e, 7	; 14
     d8c:	fe cf       	rjmp	.-4      	; 0xd8a <spi_write+0x2>
     d8e:	8f b1       	in	r24, 0x0f	; 15
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	08 95       	ret

00000d94 <uart_Transmit>:
     d94:	5d 9b       	sbis	0x0b, 5	; 11
     d96:	fe cf       	rjmp	.-4      	; 0xd94 <uart_Transmit>
     d98:	8c b9       	out	0x0c, r24	; 12
     d9a:	08 95       	ret

00000d9c <uart_Receive>:
     d9c:	5f 9b       	sbis	0x0b, 7	; 11
     d9e:	fe cf       	rjmp	.-4      	; 0xd9c <uart_Receive>
     da0:	8c b1       	in	r24, 0x0c	; 12
     da2:	08 95       	ret

00000da4 <uart_Init>:
     da4:	90 bd       	out	0x20, r25	; 32
     da6:	89 b9       	out	0x09, r24	; 9
     da8:	88 e1       	ldi	r24, 0x18	; 24
     daa:	8a b9       	out	0x0a, r24	; 10
     dac:	86 e8       	ldi	r24, 0x86	; 134
     dae:	80 bd       	out	0x20, r24	; 32
     db0:	6e ec       	ldi	r22, 0xCE	; 206
     db2:	76 e0       	ldi	r23, 0x06	; 6
     db4:	8a ec       	ldi	r24, 0xCA	; 202
     db6:	96 e0       	ldi	r25, 0x06	; 6
     db8:	0e 94 06 08 	call	0x100c	; 0x100c <fdevopen>
     dbc:	08 95       	ret

00000dbe <malloc>:
     dbe:	cf 93       	push	r28
     dc0:	df 93       	push	r29
     dc2:	82 30       	cpi	r24, 0x02	; 2
     dc4:	91 05       	cpc	r25, r1
     dc6:	10 f4       	brcc	.+4      	; 0xdcc <malloc+0xe>
     dc8:	82 e0       	ldi	r24, 0x02	; 2
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	e0 91 66 02 	lds	r30, 0x0266
     dd0:	f0 91 67 02 	lds	r31, 0x0267
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	a0 e0       	ldi	r26, 0x00	; 0
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	30 97       	sbiw	r30, 0x00	; 0
     dde:	39 f1       	breq	.+78     	; 0xe2e <malloc+0x70>
     de0:	40 81       	ld	r20, Z
     de2:	51 81       	ldd	r21, Z+1	; 0x01
     de4:	48 17       	cp	r20, r24
     de6:	59 07       	cpc	r21, r25
     de8:	b8 f0       	brcs	.+46     	; 0xe18 <malloc+0x5a>
     dea:	48 17       	cp	r20, r24
     dec:	59 07       	cpc	r21, r25
     dee:	71 f4       	brne	.+28     	; 0xe0c <malloc+0x4e>
     df0:	82 81       	ldd	r24, Z+2	; 0x02
     df2:	93 81       	ldd	r25, Z+3	; 0x03
     df4:	10 97       	sbiw	r26, 0x00	; 0
     df6:	29 f0       	breq	.+10     	; 0xe02 <malloc+0x44>
     df8:	13 96       	adiw	r26, 0x03	; 3
     dfa:	9c 93       	st	X, r25
     dfc:	8e 93       	st	-X, r24
     dfe:	12 97       	sbiw	r26, 0x02	; 2
     e00:	2c c0       	rjmp	.+88     	; 0xe5a <malloc+0x9c>
     e02:	90 93 67 02 	sts	0x0267, r25
     e06:	80 93 66 02 	sts	0x0266, r24
     e0a:	27 c0       	rjmp	.+78     	; 0xe5a <malloc+0x9c>
     e0c:	21 15       	cp	r18, r1
     e0e:	31 05       	cpc	r19, r1
     e10:	31 f0       	breq	.+12     	; 0xe1e <malloc+0x60>
     e12:	42 17       	cp	r20, r18
     e14:	53 07       	cpc	r21, r19
     e16:	18 f0       	brcs	.+6      	; 0xe1e <malloc+0x60>
     e18:	a9 01       	movw	r20, r18
     e1a:	db 01       	movw	r26, r22
     e1c:	01 c0       	rjmp	.+2      	; 0xe20 <malloc+0x62>
     e1e:	ef 01       	movw	r28, r30
     e20:	9a 01       	movw	r18, r20
     e22:	bd 01       	movw	r22, r26
     e24:	df 01       	movw	r26, r30
     e26:	02 80       	ldd	r0, Z+2	; 0x02
     e28:	f3 81       	ldd	r31, Z+3	; 0x03
     e2a:	e0 2d       	mov	r30, r0
     e2c:	d7 cf       	rjmp	.-82     	; 0xddc <malloc+0x1e>
     e2e:	21 15       	cp	r18, r1
     e30:	31 05       	cpc	r19, r1
     e32:	f9 f0       	breq	.+62     	; 0xe72 <malloc+0xb4>
     e34:	28 1b       	sub	r18, r24
     e36:	39 0b       	sbc	r19, r25
     e38:	24 30       	cpi	r18, 0x04	; 4
     e3a:	31 05       	cpc	r19, r1
     e3c:	80 f4       	brcc	.+32     	; 0xe5e <malloc+0xa0>
     e3e:	8a 81       	ldd	r24, Y+2	; 0x02
     e40:	9b 81       	ldd	r25, Y+3	; 0x03
     e42:	61 15       	cp	r22, r1
     e44:	71 05       	cpc	r23, r1
     e46:	21 f0       	breq	.+8      	; 0xe50 <malloc+0x92>
     e48:	fb 01       	movw	r30, r22
     e4a:	93 83       	std	Z+3, r25	; 0x03
     e4c:	82 83       	std	Z+2, r24	; 0x02
     e4e:	04 c0       	rjmp	.+8      	; 0xe58 <malloc+0x9a>
     e50:	90 93 67 02 	sts	0x0267, r25
     e54:	80 93 66 02 	sts	0x0266, r24
     e58:	fe 01       	movw	r30, r28
     e5a:	32 96       	adiw	r30, 0x02	; 2
     e5c:	44 c0       	rjmp	.+136    	; 0xee6 <malloc+0x128>
     e5e:	fe 01       	movw	r30, r28
     e60:	e2 0f       	add	r30, r18
     e62:	f3 1f       	adc	r31, r19
     e64:	81 93       	st	Z+, r24
     e66:	91 93       	st	Z+, r25
     e68:	22 50       	subi	r18, 0x02	; 2
     e6a:	31 09       	sbc	r19, r1
     e6c:	39 83       	std	Y+1, r19	; 0x01
     e6e:	28 83       	st	Y, r18
     e70:	3a c0       	rjmp	.+116    	; 0xee6 <malloc+0x128>
     e72:	20 91 64 02 	lds	r18, 0x0264
     e76:	30 91 65 02 	lds	r19, 0x0265
     e7a:	23 2b       	or	r18, r19
     e7c:	41 f4       	brne	.+16     	; 0xe8e <malloc+0xd0>
     e7e:	20 91 02 01 	lds	r18, 0x0102
     e82:	30 91 03 01 	lds	r19, 0x0103
     e86:	30 93 65 02 	sts	0x0265, r19
     e8a:	20 93 64 02 	sts	0x0264, r18
     e8e:	20 91 00 01 	lds	r18, 0x0100
     e92:	30 91 01 01 	lds	r19, 0x0101
     e96:	21 15       	cp	r18, r1
     e98:	31 05       	cpc	r19, r1
     e9a:	41 f4       	brne	.+16     	; 0xeac <malloc+0xee>
     e9c:	2d b7       	in	r18, 0x3d	; 61
     e9e:	3e b7       	in	r19, 0x3e	; 62
     ea0:	40 91 04 01 	lds	r20, 0x0104
     ea4:	50 91 05 01 	lds	r21, 0x0105
     ea8:	24 1b       	sub	r18, r20
     eaa:	35 0b       	sbc	r19, r21
     eac:	e0 91 64 02 	lds	r30, 0x0264
     eb0:	f0 91 65 02 	lds	r31, 0x0265
     eb4:	e2 17       	cp	r30, r18
     eb6:	f3 07       	cpc	r31, r19
     eb8:	a0 f4       	brcc	.+40     	; 0xee2 <malloc+0x124>
     eba:	2e 1b       	sub	r18, r30
     ebc:	3f 0b       	sbc	r19, r31
     ebe:	28 17       	cp	r18, r24
     ec0:	39 07       	cpc	r19, r25
     ec2:	78 f0       	brcs	.+30     	; 0xee2 <malloc+0x124>
     ec4:	ac 01       	movw	r20, r24
     ec6:	4e 5f       	subi	r20, 0xFE	; 254
     ec8:	5f 4f       	sbci	r21, 0xFF	; 255
     eca:	24 17       	cp	r18, r20
     ecc:	35 07       	cpc	r19, r21
     ece:	48 f0       	brcs	.+18     	; 0xee2 <malloc+0x124>
     ed0:	4e 0f       	add	r20, r30
     ed2:	5f 1f       	adc	r21, r31
     ed4:	50 93 65 02 	sts	0x0265, r21
     ed8:	40 93 64 02 	sts	0x0264, r20
     edc:	81 93       	st	Z+, r24
     ede:	91 93       	st	Z+, r25
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <malloc+0x128>
     ee2:	e0 e0       	ldi	r30, 0x00	; 0
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	cf 01       	movw	r24, r30
     ee8:	df 91       	pop	r29
     eea:	cf 91       	pop	r28
     eec:	08 95       	ret

00000eee <free>:
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	00 97       	sbiw	r24, 0x00	; 0
     ef4:	09 f4       	brne	.+2      	; 0xef8 <free+0xa>
     ef6:	87 c0       	rjmp	.+270    	; 0x1006 <free+0x118>
     ef8:	fc 01       	movw	r30, r24
     efa:	32 97       	sbiw	r30, 0x02	; 2
     efc:	13 82       	std	Z+3, r1	; 0x03
     efe:	12 82       	std	Z+2, r1	; 0x02
     f00:	c0 91 66 02 	lds	r28, 0x0266
     f04:	d0 91 67 02 	lds	r29, 0x0267
     f08:	20 97       	sbiw	r28, 0x00	; 0
     f0a:	81 f4       	brne	.+32     	; 0xf2c <free+0x3e>
     f0c:	20 81       	ld	r18, Z
     f0e:	31 81       	ldd	r19, Z+1	; 0x01
     f10:	28 0f       	add	r18, r24
     f12:	39 1f       	adc	r19, r25
     f14:	80 91 64 02 	lds	r24, 0x0264
     f18:	90 91 65 02 	lds	r25, 0x0265
     f1c:	82 17       	cp	r24, r18
     f1e:	93 07       	cpc	r25, r19
     f20:	79 f5       	brne	.+94     	; 0xf80 <free+0x92>
     f22:	f0 93 65 02 	sts	0x0265, r31
     f26:	e0 93 64 02 	sts	0x0264, r30
     f2a:	6d c0       	rjmp	.+218    	; 0x1006 <free+0x118>
     f2c:	de 01       	movw	r26, r28
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	ae 17       	cp	r26, r30
     f34:	bf 07       	cpc	r27, r31
     f36:	50 f4       	brcc	.+20     	; 0xf4c <free+0x5e>
     f38:	12 96       	adiw	r26, 0x02	; 2
     f3a:	4d 91       	ld	r20, X+
     f3c:	5c 91       	ld	r21, X
     f3e:	13 97       	sbiw	r26, 0x03	; 3
     f40:	9d 01       	movw	r18, r26
     f42:	41 15       	cp	r20, r1
     f44:	51 05       	cpc	r21, r1
     f46:	09 f1       	breq	.+66     	; 0xf8a <free+0x9c>
     f48:	da 01       	movw	r26, r20
     f4a:	f3 cf       	rjmp	.-26     	; 0xf32 <free+0x44>
     f4c:	b3 83       	std	Z+3, r27	; 0x03
     f4e:	a2 83       	std	Z+2, r26	; 0x02
     f50:	40 81       	ld	r20, Z
     f52:	51 81       	ldd	r21, Z+1	; 0x01
     f54:	84 0f       	add	r24, r20
     f56:	95 1f       	adc	r25, r21
     f58:	8a 17       	cp	r24, r26
     f5a:	9b 07       	cpc	r25, r27
     f5c:	71 f4       	brne	.+28     	; 0xf7a <free+0x8c>
     f5e:	8d 91       	ld	r24, X+
     f60:	9c 91       	ld	r25, X
     f62:	11 97       	sbiw	r26, 0x01	; 1
     f64:	84 0f       	add	r24, r20
     f66:	95 1f       	adc	r25, r21
     f68:	02 96       	adiw	r24, 0x02	; 2
     f6a:	91 83       	std	Z+1, r25	; 0x01
     f6c:	80 83       	st	Z, r24
     f6e:	12 96       	adiw	r26, 0x02	; 2
     f70:	8d 91       	ld	r24, X+
     f72:	9c 91       	ld	r25, X
     f74:	13 97       	sbiw	r26, 0x03	; 3
     f76:	93 83       	std	Z+3, r25	; 0x03
     f78:	82 83       	std	Z+2, r24	; 0x02
     f7a:	21 15       	cp	r18, r1
     f7c:	31 05       	cpc	r19, r1
     f7e:	29 f4       	brne	.+10     	; 0xf8a <free+0x9c>
     f80:	f0 93 67 02 	sts	0x0267, r31
     f84:	e0 93 66 02 	sts	0x0266, r30
     f88:	3e c0       	rjmp	.+124    	; 0x1006 <free+0x118>
     f8a:	d9 01       	movw	r26, r18
     f8c:	13 96       	adiw	r26, 0x03	; 3
     f8e:	fc 93       	st	X, r31
     f90:	ee 93       	st	-X, r30
     f92:	12 97       	sbiw	r26, 0x02	; 2
     f94:	4d 91       	ld	r20, X+
     f96:	5d 91       	ld	r21, X+
     f98:	a4 0f       	add	r26, r20
     f9a:	b5 1f       	adc	r27, r21
     f9c:	ea 17       	cp	r30, r26
     f9e:	fb 07       	cpc	r31, r27
     fa0:	79 f4       	brne	.+30     	; 0xfc0 <free+0xd2>
     fa2:	80 81       	ld	r24, Z
     fa4:	91 81       	ldd	r25, Z+1	; 0x01
     fa6:	84 0f       	add	r24, r20
     fa8:	95 1f       	adc	r25, r21
     faa:	02 96       	adiw	r24, 0x02	; 2
     fac:	d9 01       	movw	r26, r18
     fae:	11 96       	adiw	r26, 0x01	; 1
     fb0:	9c 93       	st	X, r25
     fb2:	8e 93       	st	-X, r24
     fb4:	82 81       	ldd	r24, Z+2	; 0x02
     fb6:	93 81       	ldd	r25, Z+3	; 0x03
     fb8:	13 96       	adiw	r26, 0x03	; 3
     fba:	9c 93       	st	X, r25
     fbc:	8e 93       	st	-X, r24
     fbe:	12 97       	sbiw	r26, 0x02	; 2
     fc0:	e0 e0       	ldi	r30, 0x00	; 0
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	8a 81       	ldd	r24, Y+2	; 0x02
     fc6:	9b 81       	ldd	r25, Y+3	; 0x03
     fc8:	00 97       	sbiw	r24, 0x00	; 0
     fca:	19 f0       	breq	.+6      	; 0xfd2 <free+0xe4>
     fcc:	fe 01       	movw	r30, r28
     fce:	ec 01       	movw	r28, r24
     fd0:	f9 cf       	rjmp	.-14     	; 0xfc4 <free+0xd6>
     fd2:	ce 01       	movw	r24, r28
     fd4:	02 96       	adiw	r24, 0x02	; 2
     fd6:	28 81       	ld	r18, Y
     fd8:	39 81       	ldd	r19, Y+1	; 0x01
     fda:	82 0f       	add	r24, r18
     fdc:	93 1f       	adc	r25, r19
     fde:	20 91 64 02 	lds	r18, 0x0264
     fe2:	30 91 65 02 	lds	r19, 0x0265
     fe6:	28 17       	cp	r18, r24
     fe8:	39 07       	cpc	r19, r25
     fea:	69 f4       	brne	.+26     	; 0x1006 <free+0x118>
     fec:	30 97       	sbiw	r30, 0x00	; 0
     fee:	29 f4       	brne	.+10     	; 0xffa <free+0x10c>
     ff0:	10 92 67 02 	sts	0x0267, r1
     ff4:	10 92 66 02 	sts	0x0266, r1
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <free+0x110>
     ffa:	13 82       	std	Z+3, r1	; 0x03
     ffc:	12 82       	std	Z+2, r1	; 0x02
     ffe:	d0 93 65 02 	sts	0x0265, r29
    1002:	c0 93 64 02 	sts	0x0264, r28
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	08 95       	ret

0000100c <fdevopen>:
    100c:	0f 93       	push	r16
    100e:	1f 93       	push	r17
    1010:	cf 93       	push	r28
    1012:	df 93       	push	r29
    1014:	ec 01       	movw	r28, r24
    1016:	8b 01       	movw	r16, r22
    1018:	00 97       	sbiw	r24, 0x00	; 0
    101a:	31 f4       	brne	.+12     	; 0x1028 <fdevopen+0x1c>
    101c:	61 15       	cp	r22, r1
    101e:	71 05       	cpc	r23, r1
    1020:	19 f4       	brne	.+6      	; 0x1028 <fdevopen+0x1c>
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	38 c0       	rjmp	.+112    	; 0x1098 <fdevopen+0x8c>
    1028:	6e e0       	ldi	r22, 0x0E	; 14
    102a:	70 e0       	ldi	r23, 0x00	; 0
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <calloc>
    1034:	fc 01       	movw	r30, r24
    1036:	00 97       	sbiw	r24, 0x00	; 0
    1038:	a1 f3       	breq	.-24     	; 0x1022 <fdevopen+0x16>
    103a:	80 e8       	ldi	r24, 0x80	; 128
    103c:	83 83       	std	Z+3, r24	; 0x03
    103e:	01 15       	cp	r16, r1
    1040:	11 05       	cpc	r17, r1
    1042:	71 f0       	breq	.+28     	; 0x1060 <fdevopen+0x54>
    1044:	13 87       	std	Z+11, r17	; 0x0b
    1046:	02 87       	std	Z+10, r16	; 0x0a
    1048:	81 e8       	ldi	r24, 0x81	; 129
    104a:	83 83       	std	Z+3, r24	; 0x03
    104c:	80 91 68 02 	lds	r24, 0x0268
    1050:	90 91 69 02 	lds	r25, 0x0269
    1054:	89 2b       	or	r24, r25
    1056:	21 f4       	brne	.+8      	; 0x1060 <fdevopen+0x54>
    1058:	f0 93 69 02 	sts	0x0269, r31
    105c:	e0 93 68 02 	sts	0x0268, r30
    1060:	20 97       	sbiw	r28, 0x00	; 0
    1062:	c9 f0       	breq	.+50     	; 0x1096 <fdevopen+0x8a>
    1064:	d1 87       	std	Z+9, r29	; 0x09
    1066:	c0 87       	std	Z+8, r28	; 0x08
    1068:	83 81       	ldd	r24, Z+3	; 0x03
    106a:	82 60       	ori	r24, 0x02	; 2
    106c:	83 83       	std	Z+3, r24	; 0x03
    106e:	80 91 6a 02 	lds	r24, 0x026A
    1072:	90 91 6b 02 	lds	r25, 0x026B
    1076:	89 2b       	or	r24, r25
    1078:	71 f4       	brne	.+28     	; 0x1096 <fdevopen+0x8a>
    107a:	f0 93 6b 02 	sts	0x026B, r31
    107e:	e0 93 6a 02 	sts	0x026A, r30
    1082:	80 91 6c 02 	lds	r24, 0x026C
    1086:	90 91 6d 02 	lds	r25, 0x026D
    108a:	89 2b       	or	r24, r25
    108c:	21 f4       	brne	.+8      	; 0x1096 <fdevopen+0x8a>
    108e:	f0 93 6d 02 	sts	0x026D, r31
    1092:	e0 93 6c 02 	sts	0x026C, r30
    1096:	cf 01       	movw	r24, r30
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	1f 91       	pop	r17
    109e:	0f 91       	pop	r16
    10a0:	08 95       	ret

000010a2 <printf>:
    10a2:	a0 e0       	ldi	r26, 0x00	; 0
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	e7 e5       	ldi	r30, 0x57	; 87
    10a8:	f8 e0       	ldi	r31, 0x08	; 8
    10aa:	0c 94 3d 0b 	jmp	0x167a	; 0x167a <__prologue_saves__+0x20>
    10ae:	fe 01       	movw	r30, r28
    10b0:	35 96       	adiw	r30, 0x05	; 5
    10b2:	61 91       	ld	r22, Z+
    10b4:	71 91       	ld	r23, Z+
    10b6:	af 01       	movw	r20, r30
    10b8:	80 91 6a 02 	lds	r24, 0x026A
    10bc:	90 91 6b 02 	lds	r25, 0x026B
    10c0:	0e 94 92 08 	call	0x1124	; 0x1124 <vfprintf>
    10c4:	e2 e0       	ldi	r30, 0x02	; 2
    10c6:	0c 94 59 0b 	jmp	0x16b2	; 0x16b2 <__epilogue_restores__+0x20>

000010ca <puts>:
    10ca:	0f 93       	push	r16
    10cc:	1f 93       	push	r17
    10ce:	cf 93       	push	r28
    10d0:	df 93       	push	r29
    10d2:	e0 91 6a 02 	lds	r30, 0x026A
    10d6:	f0 91 6b 02 	lds	r31, 0x026B
    10da:	23 81       	ldd	r18, Z+3	; 0x03
    10dc:	21 ff       	sbrs	r18, 1
    10de:	1b c0       	rjmp	.+54     	; 0x1116 <puts+0x4c>
    10e0:	ec 01       	movw	r28, r24
    10e2:	00 e0       	ldi	r16, 0x00	; 0
    10e4:	10 e0       	ldi	r17, 0x00	; 0
    10e6:	89 91       	ld	r24, Y+
    10e8:	60 91 6a 02 	lds	r22, 0x026A
    10ec:	70 91 6b 02 	lds	r23, 0x026B
    10f0:	db 01       	movw	r26, r22
    10f2:	18 96       	adiw	r26, 0x08	; 8
    10f4:	ed 91       	ld	r30, X+
    10f6:	fc 91       	ld	r31, X
    10f8:	19 97       	sbiw	r26, 0x09	; 9
    10fa:	88 23       	and	r24, r24
    10fc:	31 f0       	breq	.+12     	; 0x110a <puts+0x40>
    10fe:	09 95       	icall
    1100:	89 2b       	or	r24, r25
    1102:	89 f3       	breq	.-30     	; 0x10e6 <puts+0x1c>
    1104:	0f ef       	ldi	r16, 0xFF	; 255
    1106:	1f ef       	ldi	r17, 0xFF	; 255
    1108:	ee cf       	rjmp	.-36     	; 0x10e6 <puts+0x1c>
    110a:	8a e0       	ldi	r24, 0x0A	; 10
    110c:	09 95       	icall
    110e:	89 2b       	or	r24, r25
    1110:	11 f4       	brne	.+4      	; 0x1116 <puts+0x4c>
    1112:	c8 01       	movw	r24, r16
    1114:	02 c0       	rjmp	.+4      	; 0x111a <puts+0x50>
    1116:	8f ef       	ldi	r24, 0xFF	; 255
    1118:	9f ef       	ldi	r25, 0xFF	; 255
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	08 95       	ret

00001124 <vfprintf>:
    1124:	ac e0       	ldi	r26, 0x0C	; 12
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e8 e9       	ldi	r30, 0x98	; 152
    112a:	f8 e0       	ldi	r31, 0x08	; 8
    112c:	0c 94 2d 0b 	jmp	0x165a	; 0x165a <__prologue_saves__>
    1130:	7c 01       	movw	r14, r24
    1132:	6b 01       	movw	r12, r22
    1134:	8a 01       	movw	r16, r20
    1136:	fc 01       	movw	r30, r24
    1138:	17 82       	std	Z+7, r1	; 0x07
    113a:	16 82       	std	Z+6, r1	; 0x06
    113c:	83 81       	ldd	r24, Z+3	; 0x03
    113e:	81 ff       	sbrs	r24, 1
    1140:	bd c1       	rjmp	.+890    	; 0x14bc <vfprintf+0x398>
    1142:	ce 01       	movw	r24, r28
    1144:	01 96       	adiw	r24, 0x01	; 1
    1146:	4c 01       	movw	r8, r24
    1148:	f7 01       	movw	r30, r14
    114a:	93 81       	ldd	r25, Z+3	; 0x03
    114c:	f6 01       	movw	r30, r12
    114e:	93 fd       	sbrc	r25, 3
    1150:	85 91       	lpm	r24, Z+
    1152:	93 ff       	sbrs	r25, 3
    1154:	81 91       	ld	r24, Z+
    1156:	6f 01       	movw	r12, r30
    1158:	88 23       	and	r24, r24
    115a:	09 f4       	brne	.+2      	; 0x115e <vfprintf+0x3a>
    115c:	ab c1       	rjmp	.+854    	; 0x14b4 <vfprintf+0x390>
    115e:	85 32       	cpi	r24, 0x25	; 37
    1160:	39 f4       	brne	.+14     	; 0x1170 <vfprintf+0x4c>
    1162:	93 fd       	sbrc	r25, 3
    1164:	85 91       	lpm	r24, Z+
    1166:	93 ff       	sbrs	r25, 3
    1168:	81 91       	ld	r24, Z+
    116a:	6f 01       	movw	r12, r30
    116c:	85 32       	cpi	r24, 0x25	; 37
    116e:	29 f4       	brne	.+10     	; 0x117a <vfprintf+0x56>
    1170:	b7 01       	movw	r22, r14
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    1178:	e7 cf       	rjmp	.-50     	; 0x1148 <vfprintf+0x24>
    117a:	51 2c       	mov	r5, r1
    117c:	31 2c       	mov	r3, r1
    117e:	20 e0       	ldi	r18, 0x00	; 0
    1180:	20 32       	cpi	r18, 0x20	; 32
    1182:	a0 f4       	brcc	.+40     	; 0x11ac <vfprintf+0x88>
    1184:	8b 32       	cpi	r24, 0x2B	; 43
    1186:	69 f0       	breq	.+26     	; 0x11a2 <vfprintf+0x7e>
    1188:	30 f4       	brcc	.+12     	; 0x1196 <vfprintf+0x72>
    118a:	80 32       	cpi	r24, 0x20	; 32
    118c:	59 f0       	breq	.+22     	; 0x11a4 <vfprintf+0x80>
    118e:	83 32       	cpi	r24, 0x23	; 35
    1190:	69 f4       	brne	.+26     	; 0x11ac <vfprintf+0x88>
    1192:	20 61       	ori	r18, 0x10	; 16
    1194:	2c c0       	rjmp	.+88     	; 0x11ee <vfprintf+0xca>
    1196:	8d 32       	cpi	r24, 0x2D	; 45
    1198:	39 f0       	breq	.+14     	; 0x11a8 <vfprintf+0x84>
    119a:	80 33       	cpi	r24, 0x30	; 48
    119c:	39 f4       	brne	.+14     	; 0x11ac <vfprintf+0x88>
    119e:	21 60       	ori	r18, 0x01	; 1
    11a0:	26 c0       	rjmp	.+76     	; 0x11ee <vfprintf+0xca>
    11a2:	22 60       	ori	r18, 0x02	; 2
    11a4:	24 60       	ori	r18, 0x04	; 4
    11a6:	23 c0       	rjmp	.+70     	; 0x11ee <vfprintf+0xca>
    11a8:	28 60       	ori	r18, 0x08	; 8
    11aa:	21 c0       	rjmp	.+66     	; 0x11ee <vfprintf+0xca>
    11ac:	27 fd       	sbrc	r18, 7
    11ae:	27 c0       	rjmp	.+78     	; 0x11fe <vfprintf+0xda>
    11b0:	30 ed       	ldi	r19, 0xD0	; 208
    11b2:	38 0f       	add	r19, r24
    11b4:	3a 30       	cpi	r19, 0x0A	; 10
    11b6:	78 f4       	brcc	.+30     	; 0x11d6 <vfprintf+0xb2>
    11b8:	26 ff       	sbrs	r18, 6
    11ba:	06 c0       	rjmp	.+12     	; 0x11c8 <vfprintf+0xa4>
    11bc:	fa e0       	ldi	r31, 0x0A	; 10
    11be:	5f 9e       	mul	r5, r31
    11c0:	30 0d       	add	r19, r0
    11c2:	11 24       	eor	r1, r1
    11c4:	53 2e       	mov	r5, r19
    11c6:	13 c0       	rjmp	.+38     	; 0x11ee <vfprintf+0xca>
    11c8:	8a e0       	ldi	r24, 0x0A	; 10
    11ca:	38 9e       	mul	r3, r24
    11cc:	30 0d       	add	r19, r0
    11ce:	11 24       	eor	r1, r1
    11d0:	33 2e       	mov	r3, r19
    11d2:	20 62       	ori	r18, 0x20	; 32
    11d4:	0c c0       	rjmp	.+24     	; 0x11ee <vfprintf+0xca>
    11d6:	8e 32       	cpi	r24, 0x2E	; 46
    11d8:	21 f4       	brne	.+8      	; 0x11e2 <vfprintf+0xbe>
    11da:	26 fd       	sbrc	r18, 6
    11dc:	6b c1       	rjmp	.+726    	; 0x14b4 <vfprintf+0x390>
    11de:	20 64       	ori	r18, 0x40	; 64
    11e0:	06 c0       	rjmp	.+12     	; 0x11ee <vfprintf+0xca>
    11e2:	8c 36       	cpi	r24, 0x6C	; 108
    11e4:	11 f4       	brne	.+4      	; 0x11ea <vfprintf+0xc6>
    11e6:	20 68       	ori	r18, 0x80	; 128
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <vfprintf+0xca>
    11ea:	88 36       	cpi	r24, 0x68	; 104
    11ec:	41 f4       	brne	.+16     	; 0x11fe <vfprintf+0xda>
    11ee:	f6 01       	movw	r30, r12
    11f0:	93 fd       	sbrc	r25, 3
    11f2:	85 91       	lpm	r24, Z+
    11f4:	93 ff       	sbrs	r25, 3
    11f6:	81 91       	ld	r24, Z+
    11f8:	6f 01       	movw	r12, r30
    11fa:	81 11       	cpse	r24, r1
    11fc:	c1 cf       	rjmp	.-126    	; 0x1180 <vfprintf+0x5c>
    11fe:	98 2f       	mov	r25, r24
    1200:	9f 7d       	andi	r25, 0xDF	; 223
    1202:	95 54       	subi	r25, 0x45	; 69
    1204:	93 30       	cpi	r25, 0x03	; 3
    1206:	28 f4       	brcc	.+10     	; 0x1212 <vfprintf+0xee>
    1208:	0c 5f       	subi	r16, 0xFC	; 252
    120a:	1f 4f       	sbci	r17, 0xFF	; 255
    120c:	ff e3       	ldi	r31, 0x3F	; 63
    120e:	f9 83       	std	Y+1, r31	; 0x01
    1210:	0d c0       	rjmp	.+26     	; 0x122c <vfprintf+0x108>
    1212:	83 36       	cpi	r24, 0x63	; 99
    1214:	31 f0       	breq	.+12     	; 0x1222 <vfprintf+0xfe>
    1216:	83 37       	cpi	r24, 0x73	; 115
    1218:	71 f0       	breq	.+28     	; 0x1236 <vfprintf+0x112>
    121a:	83 35       	cpi	r24, 0x53	; 83
    121c:	09 f0       	breq	.+2      	; 0x1220 <vfprintf+0xfc>
    121e:	5b c0       	rjmp	.+182    	; 0x12d6 <vfprintf+0x1b2>
    1220:	22 c0       	rjmp	.+68     	; 0x1266 <vfprintf+0x142>
    1222:	f8 01       	movw	r30, r16
    1224:	80 81       	ld	r24, Z
    1226:	89 83       	std	Y+1, r24	; 0x01
    1228:	0e 5f       	subi	r16, 0xFE	; 254
    122a:	1f 4f       	sbci	r17, 0xFF	; 255
    122c:	44 24       	eor	r4, r4
    122e:	43 94       	inc	r4
    1230:	51 2c       	mov	r5, r1
    1232:	54 01       	movw	r10, r8
    1234:	15 c0       	rjmp	.+42     	; 0x1260 <vfprintf+0x13c>
    1236:	38 01       	movw	r6, r16
    1238:	f2 e0       	ldi	r31, 0x02	; 2
    123a:	6f 0e       	add	r6, r31
    123c:	71 1c       	adc	r7, r1
    123e:	f8 01       	movw	r30, r16
    1240:	a0 80       	ld	r10, Z
    1242:	b1 80       	ldd	r11, Z+1	; 0x01
    1244:	26 ff       	sbrs	r18, 6
    1246:	03 c0       	rjmp	.+6      	; 0x124e <vfprintf+0x12a>
    1248:	65 2d       	mov	r22, r5
    124a:	70 e0       	ldi	r23, 0x00	; 0
    124c:	02 c0       	rjmp	.+4      	; 0x1252 <vfprintf+0x12e>
    124e:	6f ef       	ldi	r22, 0xFF	; 255
    1250:	7f ef       	ldi	r23, 0xFF	; 255
    1252:	c5 01       	movw	r24, r10
    1254:	2c 87       	std	Y+12, r18	; 0x0c
    1256:	0e 94 92 0a 	call	0x1524	; 0x1524 <strnlen>
    125a:	2c 01       	movw	r4, r24
    125c:	83 01       	movw	r16, r6
    125e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1260:	2f 77       	andi	r18, 0x7F	; 127
    1262:	22 2e       	mov	r2, r18
    1264:	17 c0       	rjmp	.+46     	; 0x1294 <vfprintf+0x170>
    1266:	38 01       	movw	r6, r16
    1268:	f2 e0       	ldi	r31, 0x02	; 2
    126a:	6f 0e       	add	r6, r31
    126c:	71 1c       	adc	r7, r1
    126e:	f8 01       	movw	r30, r16
    1270:	a0 80       	ld	r10, Z
    1272:	b1 80       	ldd	r11, Z+1	; 0x01
    1274:	26 ff       	sbrs	r18, 6
    1276:	03 c0       	rjmp	.+6      	; 0x127e <vfprintf+0x15a>
    1278:	65 2d       	mov	r22, r5
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <vfprintf+0x15e>
    127e:	6f ef       	ldi	r22, 0xFF	; 255
    1280:	7f ef       	ldi	r23, 0xFF	; 255
    1282:	c5 01       	movw	r24, r10
    1284:	2c 87       	std	Y+12, r18	; 0x0c
    1286:	0e 94 80 0a 	call	0x1500	; 0x1500 <strnlen_P>
    128a:	2c 01       	movw	r4, r24
    128c:	2c 85       	ldd	r18, Y+12	; 0x0c
    128e:	20 68       	ori	r18, 0x80	; 128
    1290:	22 2e       	mov	r2, r18
    1292:	83 01       	movw	r16, r6
    1294:	23 fc       	sbrc	r2, 3
    1296:	1b c0       	rjmp	.+54     	; 0x12ce <vfprintf+0x1aa>
    1298:	83 2d       	mov	r24, r3
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	48 16       	cp	r4, r24
    129e:	59 06       	cpc	r5, r25
    12a0:	b0 f4       	brcc	.+44     	; 0x12ce <vfprintf+0x1aa>
    12a2:	b7 01       	movw	r22, r14
    12a4:	80 e2       	ldi	r24, 0x20	; 32
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    12ac:	3a 94       	dec	r3
    12ae:	f4 cf       	rjmp	.-24     	; 0x1298 <vfprintf+0x174>
    12b0:	f5 01       	movw	r30, r10
    12b2:	27 fc       	sbrc	r2, 7
    12b4:	85 91       	lpm	r24, Z+
    12b6:	27 fe       	sbrs	r2, 7
    12b8:	81 91       	ld	r24, Z+
    12ba:	5f 01       	movw	r10, r30
    12bc:	b7 01       	movw	r22, r14
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    12c4:	31 10       	cpse	r3, r1
    12c6:	3a 94       	dec	r3
    12c8:	f1 e0       	ldi	r31, 0x01	; 1
    12ca:	4f 1a       	sub	r4, r31
    12cc:	51 08       	sbc	r5, r1
    12ce:	41 14       	cp	r4, r1
    12d0:	51 04       	cpc	r5, r1
    12d2:	71 f7       	brne	.-36     	; 0x12b0 <vfprintf+0x18c>
    12d4:	e5 c0       	rjmp	.+458    	; 0x14a0 <vfprintf+0x37c>
    12d6:	84 36       	cpi	r24, 0x64	; 100
    12d8:	11 f0       	breq	.+4      	; 0x12de <vfprintf+0x1ba>
    12da:	89 36       	cpi	r24, 0x69	; 105
    12dc:	39 f5       	brne	.+78     	; 0x132c <vfprintf+0x208>
    12de:	f8 01       	movw	r30, r16
    12e0:	27 ff       	sbrs	r18, 7
    12e2:	07 c0       	rjmp	.+14     	; 0x12f2 <vfprintf+0x1ce>
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	82 81       	ldd	r24, Z+2	; 0x02
    12ea:	93 81       	ldd	r25, Z+3	; 0x03
    12ec:	0c 5f       	subi	r16, 0xFC	; 252
    12ee:	1f 4f       	sbci	r17, 0xFF	; 255
    12f0:	08 c0       	rjmp	.+16     	; 0x1302 <vfprintf+0x1de>
    12f2:	60 81       	ld	r22, Z
    12f4:	71 81       	ldd	r23, Z+1	; 0x01
    12f6:	88 27       	eor	r24, r24
    12f8:	77 fd       	sbrc	r23, 7
    12fa:	80 95       	com	r24
    12fc:	98 2f       	mov	r25, r24
    12fe:	0e 5f       	subi	r16, 0xFE	; 254
    1300:	1f 4f       	sbci	r17, 0xFF	; 255
    1302:	2f 76       	andi	r18, 0x6F	; 111
    1304:	b2 2e       	mov	r11, r18
    1306:	97 ff       	sbrs	r25, 7
    1308:	09 c0       	rjmp	.+18     	; 0x131c <vfprintf+0x1f8>
    130a:	90 95       	com	r25
    130c:	80 95       	com	r24
    130e:	70 95       	com	r23
    1310:	61 95       	neg	r22
    1312:	7f 4f       	sbci	r23, 0xFF	; 255
    1314:	8f 4f       	sbci	r24, 0xFF	; 255
    1316:	9f 4f       	sbci	r25, 0xFF	; 255
    1318:	20 68       	ori	r18, 0x80	; 128
    131a:	b2 2e       	mov	r11, r18
    131c:	2a e0       	ldi	r18, 0x0A	; 10
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	a4 01       	movw	r20, r8
    1322:	0e 94 cf 0a 	call	0x159e	; 0x159e <__ultoa_invert>
    1326:	a8 2e       	mov	r10, r24
    1328:	a8 18       	sub	r10, r8
    132a:	44 c0       	rjmp	.+136    	; 0x13b4 <vfprintf+0x290>
    132c:	85 37       	cpi	r24, 0x75	; 117
    132e:	29 f4       	brne	.+10     	; 0x133a <vfprintf+0x216>
    1330:	2f 7e       	andi	r18, 0xEF	; 239
    1332:	b2 2e       	mov	r11, r18
    1334:	2a e0       	ldi	r18, 0x0A	; 10
    1336:	30 e0       	ldi	r19, 0x00	; 0
    1338:	25 c0       	rjmp	.+74     	; 0x1384 <vfprintf+0x260>
    133a:	f2 2f       	mov	r31, r18
    133c:	f9 7f       	andi	r31, 0xF9	; 249
    133e:	bf 2e       	mov	r11, r31
    1340:	8f 36       	cpi	r24, 0x6F	; 111
    1342:	c1 f0       	breq	.+48     	; 0x1374 <vfprintf+0x250>
    1344:	18 f4       	brcc	.+6      	; 0x134c <vfprintf+0x228>
    1346:	88 35       	cpi	r24, 0x58	; 88
    1348:	79 f0       	breq	.+30     	; 0x1368 <vfprintf+0x244>
    134a:	b4 c0       	rjmp	.+360    	; 0x14b4 <vfprintf+0x390>
    134c:	80 37       	cpi	r24, 0x70	; 112
    134e:	19 f0       	breq	.+6      	; 0x1356 <vfprintf+0x232>
    1350:	88 37       	cpi	r24, 0x78	; 120
    1352:	21 f0       	breq	.+8      	; 0x135c <vfprintf+0x238>
    1354:	af c0       	rjmp	.+350    	; 0x14b4 <vfprintf+0x390>
    1356:	2f 2f       	mov	r18, r31
    1358:	20 61       	ori	r18, 0x10	; 16
    135a:	b2 2e       	mov	r11, r18
    135c:	b4 fe       	sbrs	r11, 4
    135e:	0d c0       	rjmp	.+26     	; 0x137a <vfprintf+0x256>
    1360:	8b 2d       	mov	r24, r11
    1362:	84 60       	ori	r24, 0x04	; 4
    1364:	b8 2e       	mov	r11, r24
    1366:	09 c0       	rjmp	.+18     	; 0x137a <vfprintf+0x256>
    1368:	24 ff       	sbrs	r18, 4
    136a:	0a c0       	rjmp	.+20     	; 0x1380 <vfprintf+0x25c>
    136c:	9f 2f       	mov	r25, r31
    136e:	96 60       	ori	r25, 0x06	; 6
    1370:	b9 2e       	mov	r11, r25
    1372:	06 c0       	rjmp	.+12     	; 0x1380 <vfprintf+0x25c>
    1374:	28 e0       	ldi	r18, 0x08	; 8
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	05 c0       	rjmp	.+10     	; 0x1384 <vfprintf+0x260>
    137a:	20 e1       	ldi	r18, 0x10	; 16
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	02 c0       	rjmp	.+4      	; 0x1384 <vfprintf+0x260>
    1380:	20 e1       	ldi	r18, 0x10	; 16
    1382:	32 e0       	ldi	r19, 0x02	; 2
    1384:	f8 01       	movw	r30, r16
    1386:	b7 fe       	sbrs	r11, 7
    1388:	07 c0       	rjmp	.+14     	; 0x1398 <vfprintf+0x274>
    138a:	60 81       	ld	r22, Z
    138c:	71 81       	ldd	r23, Z+1	; 0x01
    138e:	82 81       	ldd	r24, Z+2	; 0x02
    1390:	93 81       	ldd	r25, Z+3	; 0x03
    1392:	0c 5f       	subi	r16, 0xFC	; 252
    1394:	1f 4f       	sbci	r17, 0xFF	; 255
    1396:	06 c0       	rjmp	.+12     	; 0x13a4 <vfprintf+0x280>
    1398:	60 81       	ld	r22, Z
    139a:	71 81       	ldd	r23, Z+1	; 0x01
    139c:	80 e0       	ldi	r24, 0x00	; 0
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	0e 5f       	subi	r16, 0xFE	; 254
    13a2:	1f 4f       	sbci	r17, 0xFF	; 255
    13a4:	a4 01       	movw	r20, r8
    13a6:	0e 94 cf 0a 	call	0x159e	; 0x159e <__ultoa_invert>
    13aa:	a8 2e       	mov	r10, r24
    13ac:	a8 18       	sub	r10, r8
    13ae:	fb 2d       	mov	r31, r11
    13b0:	ff 77       	andi	r31, 0x7F	; 127
    13b2:	bf 2e       	mov	r11, r31
    13b4:	b6 fe       	sbrs	r11, 6
    13b6:	0b c0       	rjmp	.+22     	; 0x13ce <vfprintf+0x2aa>
    13b8:	2b 2d       	mov	r18, r11
    13ba:	2e 7f       	andi	r18, 0xFE	; 254
    13bc:	a5 14       	cp	r10, r5
    13be:	50 f4       	brcc	.+20     	; 0x13d4 <vfprintf+0x2b0>
    13c0:	b4 fe       	sbrs	r11, 4
    13c2:	0a c0       	rjmp	.+20     	; 0x13d8 <vfprintf+0x2b4>
    13c4:	b2 fc       	sbrc	r11, 2
    13c6:	08 c0       	rjmp	.+16     	; 0x13d8 <vfprintf+0x2b4>
    13c8:	2b 2d       	mov	r18, r11
    13ca:	2e 7e       	andi	r18, 0xEE	; 238
    13cc:	05 c0       	rjmp	.+10     	; 0x13d8 <vfprintf+0x2b4>
    13ce:	7a 2c       	mov	r7, r10
    13d0:	2b 2d       	mov	r18, r11
    13d2:	03 c0       	rjmp	.+6      	; 0x13da <vfprintf+0x2b6>
    13d4:	7a 2c       	mov	r7, r10
    13d6:	01 c0       	rjmp	.+2      	; 0x13da <vfprintf+0x2b6>
    13d8:	75 2c       	mov	r7, r5
    13da:	24 ff       	sbrs	r18, 4
    13dc:	0d c0       	rjmp	.+26     	; 0x13f8 <vfprintf+0x2d4>
    13de:	fe 01       	movw	r30, r28
    13e0:	ea 0d       	add	r30, r10
    13e2:	f1 1d       	adc	r31, r1
    13e4:	80 81       	ld	r24, Z
    13e6:	80 33       	cpi	r24, 0x30	; 48
    13e8:	11 f4       	brne	.+4      	; 0x13ee <vfprintf+0x2ca>
    13ea:	29 7e       	andi	r18, 0xE9	; 233
    13ec:	09 c0       	rjmp	.+18     	; 0x1400 <vfprintf+0x2dc>
    13ee:	22 ff       	sbrs	r18, 2
    13f0:	06 c0       	rjmp	.+12     	; 0x13fe <vfprintf+0x2da>
    13f2:	73 94       	inc	r7
    13f4:	73 94       	inc	r7
    13f6:	04 c0       	rjmp	.+8      	; 0x1400 <vfprintf+0x2dc>
    13f8:	82 2f       	mov	r24, r18
    13fa:	86 78       	andi	r24, 0x86	; 134
    13fc:	09 f0       	breq	.+2      	; 0x1400 <vfprintf+0x2dc>
    13fe:	73 94       	inc	r7
    1400:	23 fd       	sbrc	r18, 3
    1402:	13 c0       	rjmp	.+38     	; 0x142a <vfprintf+0x306>
    1404:	20 ff       	sbrs	r18, 0
    1406:	06 c0       	rjmp	.+12     	; 0x1414 <vfprintf+0x2f0>
    1408:	5a 2c       	mov	r5, r10
    140a:	73 14       	cp	r7, r3
    140c:	18 f4       	brcc	.+6      	; 0x1414 <vfprintf+0x2f0>
    140e:	53 0c       	add	r5, r3
    1410:	57 18       	sub	r5, r7
    1412:	73 2c       	mov	r7, r3
    1414:	73 14       	cp	r7, r3
    1416:	68 f4       	brcc	.+26     	; 0x1432 <vfprintf+0x30e>
    1418:	b7 01       	movw	r22, r14
    141a:	80 e2       	ldi	r24, 0x20	; 32
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	2c 87       	std	Y+12, r18	; 0x0c
    1420:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    1424:	73 94       	inc	r7
    1426:	2c 85       	ldd	r18, Y+12	; 0x0c
    1428:	f5 cf       	rjmp	.-22     	; 0x1414 <vfprintf+0x2f0>
    142a:	73 14       	cp	r7, r3
    142c:	10 f4       	brcc	.+4      	; 0x1432 <vfprintf+0x30e>
    142e:	37 18       	sub	r3, r7
    1430:	01 c0       	rjmp	.+2      	; 0x1434 <vfprintf+0x310>
    1432:	31 2c       	mov	r3, r1
    1434:	24 ff       	sbrs	r18, 4
    1436:	12 c0       	rjmp	.+36     	; 0x145c <vfprintf+0x338>
    1438:	b7 01       	movw	r22, r14
    143a:	80 e3       	ldi	r24, 0x30	; 48
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	2c 87       	std	Y+12, r18	; 0x0c
    1440:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    1444:	2c 85       	ldd	r18, Y+12	; 0x0c
    1446:	22 ff       	sbrs	r18, 2
    1448:	17 c0       	rjmp	.+46     	; 0x1478 <vfprintf+0x354>
    144a:	21 ff       	sbrs	r18, 1
    144c:	03 c0       	rjmp	.+6      	; 0x1454 <vfprintf+0x330>
    144e:	88 e5       	ldi	r24, 0x58	; 88
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	02 c0       	rjmp	.+4      	; 0x1458 <vfprintf+0x334>
    1454:	88 e7       	ldi	r24, 0x78	; 120
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	b7 01       	movw	r22, r14
    145a:	0c c0       	rjmp	.+24     	; 0x1474 <vfprintf+0x350>
    145c:	82 2f       	mov	r24, r18
    145e:	86 78       	andi	r24, 0x86	; 134
    1460:	59 f0       	breq	.+22     	; 0x1478 <vfprintf+0x354>
    1462:	21 fd       	sbrc	r18, 1
    1464:	02 c0       	rjmp	.+4      	; 0x146a <vfprintf+0x346>
    1466:	80 e2       	ldi	r24, 0x20	; 32
    1468:	01 c0       	rjmp	.+2      	; 0x146c <vfprintf+0x348>
    146a:	8b e2       	ldi	r24, 0x2B	; 43
    146c:	27 fd       	sbrc	r18, 7
    146e:	8d e2       	ldi	r24, 0x2D	; 45
    1470:	b7 01       	movw	r22, r14
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    1478:	a5 14       	cp	r10, r5
    147a:	38 f4       	brcc	.+14     	; 0x148a <vfprintf+0x366>
    147c:	b7 01       	movw	r22, r14
    147e:	80 e3       	ldi	r24, 0x30	; 48
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    1486:	5a 94       	dec	r5
    1488:	f7 cf       	rjmp	.-18     	; 0x1478 <vfprintf+0x354>
    148a:	aa 94       	dec	r10
    148c:	f4 01       	movw	r30, r8
    148e:	ea 0d       	add	r30, r10
    1490:	f1 1d       	adc	r31, r1
    1492:	80 81       	ld	r24, Z
    1494:	b7 01       	movw	r22, r14
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    149c:	a1 10       	cpse	r10, r1
    149e:	f5 cf       	rjmp	.-22     	; 0x148a <vfprintf+0x366>
    14a0:	33 20       	and	r3, r3
    14a2:	09 f4       	brne	.+2      	; 0x14a6 <vfprintf+0x382>
    14a4:	51 ce       	rjmp	.-862    	; 0x1148 <vfprintf+0x24>
    14a6:	b7 01       	movw	r22, r14
    14a8:	80 e2       	ldi	r24, 0x20	; 32
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	0e 94 9d 0a 	call	0x153a	; 0x153a <fputc>
    14b0:	3a 94       	dec	r3
    14b2:	f6 cf       	rjmp	.-20     	; 0x14a0 <vfprintf+0x37c>
    14b4:	f7 01       	movw	r30, r14
    14b6:	86 81       	ldd	r24, Z+6	; 0x06
    14b8:	97 81       	ldd	r25, Z+7	; 0x07
    14ba:	02 c0       	rjmp	.+4      	; 0x14c0 <vfprintf+0x39c>
    14bc:	8f ef       	ldi	r24, 0xFF	; 255
    14be:	9f ef       	ldi	r25, 0xFF	; 255
    14c0:	2c 96       	adiw	r28, 0x0c	; 12
    14c2:	e2 e1       	ldi	r30, 0x12	; 18
    14c4:	0c 94 49 0b 	jmp	0x1692	; 0x1692 <__epilogue_restores__>

000014c8 <calloc>:
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	86 9f       	mul	r24, r22
    14d2:	80 01       	movw	r16, r0
    14d4:	87 9f       	mul	r24, r23
    14d6:	10 0d       	add	r17, r0
    14d8:	96 9f       	mul	r25, r22
    14da:	10 0d       	add	r17, r0
    14dc:	11 24       	eor	r1, r1
    14de:	c8 01       	movw	r24, r16
    14e0:	0e 94 df 06 	call	0xdbe	; 0xdbe <malloc>
    14e4:	ec 01       	movw	r28, r24
    14e6:	00 97       	sbiw	r24, 0x00	; 0
    14e8:	29 f0       	breq	.+10     	; 0x14f4 <calloc+0x2c>
    14ea:	a8 01       	movw	r20, r16
    14ec:	60 e0       	ldi	r22, 0x00	; 0
    14ee:	70 e0       	ldi	r23, 0x00	; 0
    14f0:	0e 94 8b 0a 	call	0x1516	; 0x1516 <memset>
    14f4:	ce 01       	movw	r24, r28
    14f6:	df 91       	pop	r29
    14f8:	cf 91       	pop	r28
    14fa:	1f 91       	pop	r17
    14fc:	0f 91       	pop	r16
    14fe:	08 95       	ret

00001500 <strnlen_P>:
    1500:	fc 01       	movw	r30, r24
    1502:	05 90       	lpm	r0, Z+
    1504:	61 50       	subi	r22, 0x01	; 1
    1506:	70 40       	sbci	r23, 0x00	; 0
    1508:	01 10       	cpse	r0, r1
    150a:	d8 f7       	brcc	.-10     	; 0x1502 <strnlen_P+0x2>
    150c:	80 95       	com	r24
    150e:	90 95       	com	r25
    1510:	8e 0f       	add	r24, r30
    1512:	9f 1f       	adc	r25, r31
    1514:	08 95       	ret

00001516 <memset>:
    1516:	dc 01       	movw	r26, r24
    1518:	01 c0       	rjmp	.+2      	; 0x151c <memset+0x6>
    151a:	6d 93       	st	X+, r22
    151c:	41 50       	subi	r20, 0x01	; 1
    151e:	50 40       	sbci	r21, 0x00	; 0
    1520:	e0 f7       	brcc	.-8      	; 0x151a <memset+0x4>
    1522:	08 95       	ret

00001524 <strnlen>:
    1524:	fc 01       	movw	r30, r24
    1526:	61 50       	subi	r22, 0x01	; 1
    1528:	70 40       	sbci	r23, 0x00	; 0
    152a:	01 90       	ld	r0, Z+
    152c:	01 10       	cpse	r0, r1
    152e:	d8 f7       	brcc	.-10     	; 0x1526 <strnlen+0x2>
    1530:	80 95       	com	r24
    1532:	90 95       	com	r25
    1534:	8e 0f       	add	r24, r30
    1536:	9f 1f       	adc	r25, r31
    1538:	08 95       	ret

0000153a <fputc>:
    153a:	0f 93       	push	r16
    153c:	1f 93       	push	r17
    153e:	cf 93       	push	r28
    1540:	df 93       	push	r29
    1542:	18 2f       	mov	r17, r24
    1544:	09 2f       	mov	r16, r25
    1546:	eb 01       	movw	r28, r22
    1548:	8b 81       	ldd	r24, Y+3	; 0x03
    154a:	81 fd       	sbrc	r24, 1
    154c:	03 c0       	rjmp	.+6      	; 0x1554 <fputc+0x1a>
    154e:	8f ef       	ldi	r24, 0xFF	; 255
    1550:	9f ef       	ldi	r25, 0xFF	; 255
    1552:	20 c0       	rjmp	.+64     	; 0x1594 <fputc+0x5a>
    1554:	82 ff       	sbrs	r24, 2
    1556:	10 c0       	rjmp	.+32     	; 0x1578 <fputc+0x3e>
    1558:	4e 81       	ldd	r20, Y+6	; 0x06
    155a:	5f 81       	ldd	r21, Y+7	; 0x07
    155c:	2c 81       	ldd	r18, Y+4	; 0x04
    155e:	3d 81       	ldd	r19, Y+5	; 0x05
    1560:	42 17       	cp	r20, r18
    1562:	53 07       	cpc	r21, r19
    1564:	7c f4       	brge	.+30     	; 0x1584 <fputc+0x4a>
    1566:	e8 81       	ld	r30, Y
    1568:	f9 81       	ldd	r31, Y+1	; 0x01
    156a:	9f 01       	movw	r18, r30
    156c:	2f 5f       	subi	r18, 0xFF	; 255
    156e:	3f 4f       	sbci	r19, 0xFF	; 255
    1570:	39 83       	std	Y+1, r19	; 0x01
    1572:	28 83       	st	Y, r18
    1574:	10 83       	st	Z, r17
    1576:	06 c0       	rjmp	.+12     	; 0x1584 <fputc+0x4a>
    1578:	e8 85       	ldd	r30, Y+8	; 0x08
    157a:	f9 85       	ldd	r31, Y+9	; 0x09
    157c:	81 2f       	mov	r24, r17
    157e:	09 95       	icall
    1580:	89 2b       	or	r24, r25
    1582:	29 f7       	brne	.-54     	; 0x154e <fputc+0x14>
    1584:	2e 81       	ldd	r18, Y+6	; 0x06
    1586:	3f 81       	ldd	r19, Y+7	; 0x07
    1588:	2f 5f       	subi	r18, 0xFF	; 255
    158a:	3f 4f       	sbci	r19, 0xFF	; 255
    158c:	3f 83       	std	Y+7, r19	; 0x07
    158e:	2e 83       	std	Y+6, r18	; 0x06
    1590:	81 2f       	mov	r24, r17
    1592:	90 2f       	mov	r25, r16
    1594:	df 91       	pop	r29
    1596:	cf 91       	pop	r28
    1598:	1f 91       	pop	r17
    159a:	0f 91       	pop	r16
    159c:	08 95       	ret

0000159e <__ultoa_invert>:
    159e:	fa 01       	movw	r30, r20
    15a0:	aa 27       	eor	r26, r26
    15a2:	28 30       	cpi	r18, 0x08	; 8
    15a4:	51 f1       	breq	.+84     	; 0x15fa <__ultoa_invert+0x5c>
    15a6:	20 31       	cpi	r18, 0x10	; 16
    15a8:	81 f1       	breq	.+96     	; 0x160a <__ultoa_invert+0x6c>
    15aa:	e8 94       	clt
    15ac:	6f 93       	push	r22
    15ae:	6e 7f       	andi	r22, 0xFE	; 254
    15b0:	6e 5f       	subi	r22, 0xFE	; 254
    15b2:	7f 4f       	sbci	r23, 0xFF	; 255
    15b4:	8f 4f       	sbci	r24, 0xFF	; 255
    15b6:	9f 4f       	sbci	r25, 0xFF	; 255
    15b8:	af 4f       	sbci	r26, 0xFF	; 255
    15ba:	b1 e0       	ldi	r27, 0x01	; 1
    15bc:	3e d0       	rcall	.+124    	; 0x163a <__ultoa_invert+0x9c>
    15be:	b4 e0       	ldi	r27, 0x04	; 4
    15c0:	3c d0       	rcall	.+120    	; 0x163a <__ultoa_invert+0x9c>
    15c2:	67 0f       	add	r22, r23
    15c4:	78 1f       	adc	r23, r24
    15c6:	89 1f       	adc	r24, r25
    15c8:	9a 1f       	adc	r25, r26
    15ca:	a1 1d       	adc	r26, r1
    15cc:	68 0f       	add	r22, r24
    15ce:	79 1f       	adc	r23, r25
    15d0:	8a 1f       	adc	r24, r26
    15d2:	91 1d       	adc	r25, r1
    15d4:	a1 1d       	adc	r26, r1
    15d6:	6a 0f       	add	r22, r26
    15d8:	71 1d       	adc	r23, r1
    15da:	81 1d       	adc	r24, r1
    15dc:	91 1d       	adc	r25, r1
    15de:	a1 1d       	adc	r26, r1
    15e0:	20 d0       	rcall	.+64     	; 0x1622 <__ultoa_invert+0x84>
    15e2:	09 f4       	brne	.+2      	; 0x15e6 <__ultoa_invert+0x48>
    15e4:	68 94       	set
    15e6:	3f 91       	pop	r19
    15e8:	2a e0       	ldi	r18, 0x0A	; 10
    15ea:	26 9f       	mul	r18, r22
    15ec:	11 24       	eor	r1, r1
    15ee:	30 19       	sub	r19, r0
    15f0:	30 5d       	subi	r19, 0xD0	; 208
    15f2:	31 93       	st	Z+, r19
    15f4:	de f6       	brtc	.-74     	; 0x15ac <__ultoa_invert+0xe>
    15f6:	cf 01       	movw	r24, r30
    15f8:	08 95       	ret
    15fa:	46 2f       	mov	r20, r22
    15fc:	47 70       	andi	r20, 0x07	; 7
    15fe:	40 5d       	subi	r20, 0xD0	; 208
    1600:	41 93       	st	Z+, r20
    1602:	b3 e0       	ldi	r27, 0x03	; 3
    1604:	0f d0       	rcall	.+30     	; 0x1624 <__ultoa_invert+0x86>
    1606:	c9 f7       	brne	.-14     	; 0x15fa <__ultoa_invert+0x5c>
    1608:	f6 cf       	rjmp	.-20     	; 0x15f6 <__ultoa_invert+0x58>
    160a:	46 2f       	mov	r20, r22
    160c:	4f 70       	andi	r20, 0x0F	; 15
    160e:	40 5d       	subi	r20, 0xD0	; 208
    1610:	4a 33       	cpi	r20, 0x3A	; 58
    1612:	18 f0       	brcs	.+6      	; 0x161a <__ultoa_invert+0x7c>
    1614:	49 5d       	subi	r20, 0xD9	; 217
    1616:	31 fd       	sbrc	r19, 1
    1618:	40 52       	subi	r20, 0x20	; 32
    161a:	41 93       	st	Z+, r20
    161c:	02 d0       	rcall	.+4      	; 0x1622 <__ultoa_invert+0x84>
    161e:	a9 f7       	brne	.-22     	; 0x160a <__ultoa_invert+0x6c>
    1620:	ea cf       	rjmp	.-44     	; 0x15f6 <__ultoa_invert+0x58>
    1622:	b4 e0       	ldi	r27, 0x04	; 4
    1624:	a6 95       	lsr	r26
    1626:	97 95       	ror	r25
    1628:	87 95       	ror	r24
    162a:	77 95       	ror	r23
    162c:	67 95       	ror	r22
    162e:	ba 95       	dec	r27
    1630:	c9 f7       	brne	.-14     	; 0x1624 <__ultoa_invert+0x86>
    1632:	00 97       	sbiw	r24, 0x00	; 0
    1634:	61 05       	cpc	r22, r1
    1636:	71 05       	cpc	r23, r1
    1638:	08 95       	ret
    163a:	9b 01       	movw	r18, r22
    163c:	ac 01       	movw	r20, r24
    163e:	0a 2e       	mov	r0, r26
    1640:	06 94       	lsr	r0
    1642:	57 95       	ror	r21
    1644:	47 95       	ror	r20
    1646:	37 95       	ror	r19
    1648:	27 95       	ror	r18
    164a:	ba 95       	dec	r27
    164c:	c9 f7       	brne	.-14     	; 0x1640 <__ultoa_invert+0xa2>
    164e:	62 0f       	add	r22, r18
    1650:	73 1f       	adc	r23, r19
    1652:	84 1f       	adc	r24, r20
    1654:	95 1f       	adc	r25, r21
    1656:	a0 1d       	adc	r26, r0
    1658:	08 95       	ret

0000165a <__prologue_saves__>:
    165a:	2f 92       	push	r2
    165c:	3f 92       	push	r3
    165e:	4f 92       	push	r4
    1660:	5f 92       	push	r5
    1662:	6f 92       	push	r6
    1664:	7f 92       	push	r7
    1666:	8f 92       	push	r8
    1668:	9f 92       	push	r9
    166a:	af 92       	push	r10
    166c:	bf 92       	push	r11
    166e:	cf 92       	push	r12
    1670:	df 92       	push	r13
    1672:	ef 92       	push	r14
    1674:	ff 92       	push	r15
    1676:	0f 93       	push	r16
    1678:	1f 93       	push	r17
    167a:	cf 93       	push	r28
    167c:	df 93       	push	r29
    167e:	cd b7       	in	r28, 0x3d	; 61
    1680:	de b7       	in	r29, 0x3e	; 62
    1682:	ca 1b       	sub	r28, r26
    1684:	db 0b       	sbc	r29, r27
    1686:	0f b6       	in	r0, 0x3f	; 63
    1688:	f8 94       	cli
    168a:	de bf       	out	0x3e, r29	; 62
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	cd bf       	out	0x3d, r28	; 61
    1690:	09 94       	ijmp

00001692 <__epilogue_restores__>:
    1692:	2a 88       	ldd	r2, Y+18	; 0x12
    1694:	39 88       	ldd	r3, Y+17	; 0x11
    1696:	48 88       	ldd	r4, Y+16	; 0x10
    1698:	5f 84       	ldd	r5, Y+15	; 0x0f
    169a:	6e 84       	ldd	r6, Y+14	; 0x0e
    169c:	7d 84       	ldd	r7, Y+13	; 0x0d
    169e:	8c 84       	ldd	r8, Y+12	; 0x0c
    16a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    16a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    16a4:	b9 84       	ldd	r11, Y+9	; 0x09
    16a6:	c8 84       	ldd	r12, Y+8	; 0x08
    16a8:	df 80       	ldd	r13, Y+7	; 0x07
    16aa:	ee 80       	ldd	r14, Y+6	; 0x06
    16ac:	fd 80       	ldd	r15, Y+5	; 0x05
    16ae:	0c 81       	ldd	r16, Y+4	; 0x04
    16b0:	1b 81       	ldd	r17, Y+3	; 0x03
    16b2:	aa 81       	ldd	r26, Y+2	; 0x02
    16b4:	b9 81       	ldd	r27, Y+1	; 0x01
    16b6:	ce 0f       	add	r28, r30
    16b8:	d1 1d       	adc	r29, r1
    16ba:	0f b6       	in	r0, 0x3f	; 63
    16bc:	f8 94       	cli
    16be:	de bf       	out	0x3e, r29	; 62
    16c0:	0f be       	out	0x3f, r0	; 63
    16c2:	cd bf       	out	0x3d, r28	; 61
    16c4:	ed 01       	movw	r28, r26
    16c6:	08 95       	ret

000016c8 <_exit>:
    16c8:	f8 94       	cli

000016ca <__stop_program>:
    16ca:	ff cf       	rjmp	.-2      	; 0x16ca <__stop_program>
