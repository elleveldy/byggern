
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c8  00800200  00001d7e  00001e12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001e  008002c8  008002c8  00001eda  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001eda  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000003d8  00000000  00000000  00001f36  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002d8d  00000000  00000000  0000230e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001404  00000000  00000000  0000509b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001cc8  00000000  00000000  0000649f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000944  00000000  00000000  00008168  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000009fa  00000000  00000000  00008aac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000197e  00000000  00000000  000094a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000002f8  00000000  00000000  0000ae24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	43 c1       	rjmp	.+646    	; 0x288 <__ctors_end>
       2:	00 00       	nop
       4:	61 c1       	rjmp	.+706    	; 0x2c8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c1       	rjmp	.+702    	; 0x2c8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c1       	rjmp	.+698    	; 0x2c8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c1       	rjmp	.+694    	; 0x2c8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c1       	rjmp	.+690    	; 0x2c8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c1       	rjmp	.+686    	; 0x2c8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c1       	rjmp	.+682    	; 0x2c8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c1       	rjmp	.+678    	; 0x2c8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c1       	rjmp	.+674    	; 0x2c8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c1       	rjmp	.+670    	; 0x2c8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c1       	rjmp	.+666    	; 0x2c8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c1       	rjmp	.+662    	; 0x2c8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c1       	rjmp	.+658    	; 0x2c8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c1       	rjmp	.+654    	; 0x2c8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c1       	rjmp	.+650    	; 0x2c8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c1       	rjmp	.+646    	; 0x2c8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c1       	rjmp	.+642    	; 0x2c8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c1       	rjmp	.+638    	; 0x2c8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c1       	rjmp	.+634    	; 0x2c8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c1       	rjmp	.+630    	; 0x2c8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c1       	rjmp	.+626    	; 0x2c8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c1       	rjmp	.+622    	; 0x2c8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c1       	rjmp	.+618    	; 0x2c8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c1       	rjmp	.+614    	; 0x2c8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c1       	rjmp	.+610    	; 0x2c8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c1       	rjmp	.+606    	; 0x2c8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c1       	rjmp	.+602    	; 0x2c8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c1       	rjmp	.+598    	; 0x2c8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c1       	rjmp	.+594    	; 0x2c8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c1       	rjmp	.+590    	; 0x2c8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c1       	rjmp	.+586    	; 0x2c8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c1       	rjmp	.+582    	; 0x2c8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c1       	rjmp	.+578    	; 0x2c8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c1       	rjmp	.+574    	; 0x2c8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1d c1       	rjmp	.+570    	; 0x2c8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	1b c1       	rjmp	.+566    	; 0x2c8 <__bad_interrupt>
      92:	00 00       	nop
      94:	19 c1       	rjmp	.+562    	; 0x2c8 <__bad_interrupt>
      96:	00 00       	nop
      98:	17 c1       	rjmp	.+558    	; 0x2c8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	01 c5       	rjmp	.+2562   	; 0xaa0 <__vector_39>
      9e:	00 00       	nop
      a0:	13 c1       	rjmp	.+550    	; 0x2c8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	11 c1       	rjmp	.+546    	; 0x2c8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0f c1       	rjmp	.+542    	; 0x2c8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0d c1       	rjmp	.+538    	; 0x2c8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	0b c1       	rjmp	.+534    	; 0x2c8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	09 c1       	rjmp	.+530    	; 0x2c8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	07 c1       	rjmp	.+526    	; 0x2c8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	05 c1       	rjmp	.+522    	; 0x2c8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	03 c1       	rjmp	.+518    	; 0x2c8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	01 c1       	rjmp	.+514    	; 0x2c8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	ff c0       	rjmp	.+510    	; 0x2c8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	fd c0       	rjmp	.+506    	; 0x2c8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	fb c0       	rjmp	.+502    	; 0x2c8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	f9 c0       	rjmp	.+498    	; 0x2c8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f7 c0       	rjmp	.+494    	; 0x2c8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	f5 c0       	rjmp	.+490    	; 0x2c8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	f3 c0       	rjmp	.+486    	; 0x2c8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	6b 05       	cpc	r22, r11
      e6:	bd 05       	cpc	r27, r13
      e8:	bd 05       	cpc	r27, r13
      ea:	bd 05       	cpc	r27, r13
      ec:	bd 05       	cpc	r27, r13
      ee:	bd 05       	cpc	r27, r13
      f0:	bd 05       	cpc	r27, r13
      f2:	bd 05       	cpc	r27, r13
      f4:	6b 05       	cpc	r22, r11
      f6:	bd 05       	cpc	r27, r13
      f8:	bd 05       	cpc	r27, r13
      fa:	bd 05       	cpc	r27, r13
      fc:	bd 05       	cpc	r27, r13
      fe:	bd 05       	cpc	r27, r13
     100:	bd 05       	cpc	r27, r13
     102:	bd 05       	cpc	r27, r13
     104:	6d 05       	cpc	r22, r13
     106:	bd 05       	cpc	r27, r13
     108:	bd 05       	cpc	r27, r13
     10a:	bd 05       	cpc	r27, r13
     10c:	bd 05       	cpc	r27, r13
     10e:	bd 05       	cpc	r27, r13
     110:	bd 05       	cpc	r27, r13
     112:	bd 05       	cpc	r27, r13
     114:	bd 05       	cpc	r27, r13
     116:	bd 05       	cpc	r27, r13
     118:	bd 05       	cpc	r27, r13
     11a:	bd 05       	cpc	r27, r13
     11c:	bd 05       	cpc	r27, r13
     11e:	bd 05       	cpc	r27, r13
     120:	bd 05       	cpc	r27, r13
     122:	bd 05       	cpc	r27, r13
     124:	6d 05       	cpc	r22, r13
     126:	bd 05       	cpc	r27, r13
     128:	bd 05       	cpc	r27, r13
     12a:	bd 05       	cpc	r27, r13
     12c:	bd 05       	cpc	r27, r13
     12e:	bd 05       	cpc	r27, r13
     130:	bd 05       	cpc	r27, r13
     132:	bd 05       	cpc	r27, r13
     134:	bd 05       	cpc	r27, r13
     136:	bd 05       	cpc	r27, r13
     138:	bd 05       	cpc	r27, r13
     13a:	bd 05       	cpc	r27, r13
     13c:	bd 05       	cpc	r27, r13
     13e:	bd 05       	cpc	r27, r13
     140:	bd 05       	cpc	r27, r13
     142:	bd 05       	cpc	r27, r13
     144:	b9 05       	cpc	r27, r9
     146:	bd 05       	cpc	r27, r13
     148:	bd 05       	cpc	r27, r13
     14a:	bd 05       	cpc	r27, r13
     14c:	bd 05       	cpc	r27, r13
     14e:	bd 05       	cpc	r27, r13
     150:	bd 05       	cpc	r27, r13
     152:	bd 05       	cpc	r27, r13
     154:	96 05       	cpc	r25, r6
     156:	bd 05       	cpc	r27, r13
     158:	bd 05       	cpc	r27, r13
     15a:	bd 05       	cpc	r27, r13
     15c:	bd 05       	cpc	r27, r13
     15e:	bd 05       	cpc	r27, r13
     160:	bd 05       	cpc	r27, r13
     162:	bd 05       	cpc	r27, r13
     164:	bd 05       	cpc	r27, r13
     166:	bd 05       	cpc	r27, r13
     168:	bd 05       	cpc	r27, r13
     16a:	bd 05       	cpc	r27, r13
     16c:	bd 05       	cpc	r27, r13
     16e:	bd 05       	cpc	r27, r13
     170:	bd 05       	cpc	r27, r13
     172:	bd 05       	cpc	r27, r13
     174:	8a 05       	cpc	r24, r10
     176:	bd 05       	cpc	r27, r13
     178:	bd 05       	cpc	r27, r13
     17a:	bd 05       	cpc	r27, r13
     17c:	bd 05       	cpc	r27, r13
     17e:	bd 05       	cpc	r27, r13
     180:	bd 05       	cpc	r27, r13
     182:	bd 05       	cpc	r27, r13
     184:	a8 05       	cpc	r26, r8

00000186 <__trampolines_end>:
     186:	6e 61       	ori	r22, 0x1E	; 30
     188:	6e 00       	.word	0x006e	; ????

0000018a <__c.2159>:
     18a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     19a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     1aa:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     1ba:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     1ca:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     1da:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     1ea:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1fa:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     20a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     21a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     22a:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     23a:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     24a:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     25a:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     26a:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     27a:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000288 <__ctors_end>:
     288:	11 24       	eor	r1, r1
     28a:	1f be       	out	0x3f, r1	; 63
     28c:	cf ef       	ldi	r28, 0xFF	; 255
     28e:	d1 e2       	ldi	r29, 0x21	; 33
     290:	de bf       	out	0x3e, r29	; 62
     292:	cd bf       	out	0x3d, r28	; 61
     294:	00 e0       	ldi	r16, 0x00	; 0
     296:	0c bf       	out	0x3c, r16	; 60

00000298 <__do_copy_data>:
     298:	12 e0       	ldi	r17, 0x02	; 2
     29a:	a0 e0       	ldi	r26, 0x00	; 0
     29c:	b2 e0       	ldi	r27, 0x02	; 2
     29e:	ee e7       	ldi	r30, 0x7E	; 126
     2a0:	fd e1       	ldi	r31, 0x1D	; 29
     2a2:	00 e0       	ldi	r16, 0x00	; 0
     2a4:	0b bf       	out	0x3b, r16	; 59
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__do_copy_data+0x14>
     2a8:	07 90       	elpm	r0, Z+
     2aa:	0d 92       	st	X+, r0
     2ac:	a8 3c       	cpi	r26, 0xC8	; 200
     2ae:	b1 07       	cpc	r27, r17
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <__do_copy_data+0x10>

000002b2 <__do_clear_bss>:
     2b2:	22 e0       	ldi	r18, 0x02	; 2
     2b4:	a8 ec       	ldi	r26, 0xC8	; 200
     2b6:	b2 e0       	ldi	r27, 0x02	; 2
     2b8:	01 c0       	rjmp	.+2      	; 0x2bc <.do_clear_bss_start>

000002ba <.do_clear_bss_loop>:
     2ba:	1d 92       	st	X+, r1

000002bc <.do_clear_bss_start>:
     2bc:	a6 3e       	cpi	r26, 0xE6	; 230
     2be:	b2 07       	cpc	r27, r18
     2c0:	e1 f7       	brne	.-8      	; 0x2ba <.do_clear_bss_loop>
     2c2:	11 d0       	rcall	.+34     	; 0x2e6 <main>
     2c4:	0c 94 bd 0e 	jmp	0x1d7a	; 0x1d7a <_exit>

000002c8 <__bad_interrupt>:
     2c8:	9b ce       	rjmp	.-714    	; 0x0 <__vectors>

000002ca <adc_init>:
#include "adc.h"

void adc_init(){
	
	// Division factor 128
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
     2ca:	ea e7       	ldi	r30, 0x7A	; 122
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	87 68       	ori	r24, 0x87	; 135
     2d2:	80 83       	st	Z, r24
	
	/*We find max voltage to be 1.1 V
	Internal 1.1 V Voltage Reference with external capacitor at AREF pin  ->  REFS1 = 1 REFS0 = 0 
	*/  
	ADMUX |= (1 << REFS0);
     2d4:	ec e7       	ldi	r30, 0x7C	; 124
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	80 81       	ld	r24, Z
     2da:	80 64       	ori	r24, 0x40	; 64
     2dc:	80 83       	st	Z, r24
	//ADMUX &= ~(1 << REFS1);
	ADMUX |= (1 << REFS1);
     2de:	80 81       	ld	r24, Z
     2e0:	80 68       	ori	r24, 0x80	; 128
     2e2:	80 83       	st	Z, r24
     2e4:	08 95       	ret

000002e6 <main>:

*/



int main(void){
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	cd b7       	in	r28, 0x3d	; 61
     2ec:	de b7       	in	r29, 0x3e	; 62
     2ee:	2b 97       	sbiw	r28, 0x0b	; 11
     2f0:	0f b6       	in	r0, 0x3f	; 63
     2f2:	f8 94       	cli
     2f4:	de bf       	out	0x3e, r29	; 62
     2f6:	0f be       	out	0x3f, r0	; 63
     2f8:	cd bf       	out	0x3d, r28	; 61
		PORTB = 0;
		_delay_ms(500);
	}*/
	
	
	MCUCR |= (1 << SRE);
     2fa:	85 b7       	in	r24, 0x35	; 53
     2fc:	80 68       	ori	r24, 0x80	; 128
     2fe:	85 bf       	out	0x35, r24	; 53
	uart_Init(MYUBRR);
     300:	87 e6       	ldi	r24, 0x67	; 103
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	60 d4       	rcall	.+2240   	; 0xbc6 <uart_Init>
	//
	
	
	can_init(MODE_NORMAL);
     306:	80 e0       	ldi	r24, 0x00	; 0
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	7e d0       	rcall	.+252    	; 0x408 <can_init>
	pwm_init();//servo
     30c:	40 d3       	rcall	.+1664   	; 0x98e <pwm_init>
	adc_init();
     30e:	dd df       	rcall	.-70     	; 0x2ca <adc_init>
	
	DDRE |= (1 << 3); //studass PWM bandaid that can be removed? 
     310:	6b 9a       	sbi	0x0d, 3	; 13
	/*
	int high = adc_read(0x00);
	int low = adc_read(0x00);
	*/

	timer_init();
     312:	84 d3       	rcall	.+1800   	; 0xa1c <timer_init>
	
	solenoid_init();
     314:	6a d3       	rcall	.+1748   	; 0x9ea <solenoid_init>
	motor_init();
     316:	0a d2       	rcall	.+1044   	; 0x72c <motor_init>
	
	
	/*motor_controller_calibrate_by_reset();
	P_controller_init(0.03);*/
	
	PI_controller* sliders = PI_controller_new(0.02, 0.05);
     318:	2d ec       	ldi	r18, 0xCD	; 205
     31a:	3c ec       	ldi	r19, 0xCC	; 204
     31c:	4c e4       	ldi	r20, 0x4C	; 76
     31e:	5d e3       	ldi	r21, 0x3D	; 61
     320:	6a e0       	ldi	r22, 0x0A	; 10
     322:	77 ed       	ldi	r23, 0xD7	; 215
     324:	83 ea       	ldi	r24, 0xA3	; 163
     326:	9c e3       	ldi	r25, 0x3C	; 60
     328:	ab d2       	rcall	.+1366   	; 0x880 <PI_controller_new>
     32a:	6c 01       	movw	r12, r24
	uint16_t x;
	float output;
	
	//P_controller_init(0.1);
	
	motor_controller_calibrate_by_reset();
     32c:	2e d2       	rcall	.+1116   	; 0x78a <motor_controller_calibrate_by_reset>
		
		
		output = -PI_controller_set_output(sliders, x, y);
		
		if(y > max_left | y < 0){
			output = 0;
     32e:	51 2c       	mov	r5, r1
		/*x = canjoy_slider_right();
		y = canjoy_slider_left();
		output = PI_controller_set_output(sliders, x, y);*/
		
		
		printf("Pos: %u\tRef: %u\toutput: %f\n", y, x, output);
     330:	0f 2e       	mov	r0, r31
     332:	f1 e1       	ldi	r31, 0x11	; 17
     334:	ef 2e       	mov	r14, r31
     336:	f2 e0       	ldi	r31, 0x02	; 2
     338:	ff 2e       	mov	r15, r31
     33a:	f0 2d       	mov	r31, r0
	
	while(1){
		
		//can_test_recieve();
		
		canjoy_recieve();
     33c:	ce 01       	movw	r24, r28
     33e:	01 96       	adiw	r24, 0x01	; 1
     340:	16 d1       	rcall	.+556    	; 0x56e <canjoy_recieve>
		
		x = abs(canjoy_slider_right() - 255) * (float)(max_left) / 255.0;		
     342:	54 d1       	rcall	.+680    	; 0x5ec <canjoy_slider_right>
     344:	8f 5f       	subi	r24, 0xFF	; 255
     346:	91 09       	sbc	r25, r1
     348:	bc 01       	movw	r22, r24
     34a:	99 23       	and	r25, r25
     34c:	24 f4       	brge	.+8      	; 0x356 <main+0x70>
     34e:	66 27       	eor	r22, r22
     350:	77 27       	eor	r23, r23
     352:	68 1b       	sub	r22, r24
     354:	79 0b       	sbc	r23, r25
     356:	88 27       	eor	r24, r24
     358:	77 fd       	sbrc	r23, 7
     35a:	80 95       	com	r24
     35c:	98 2f       	mov	r25, r24
     35e:	43 d5       	rcall	.+2694   	; 0xde6 <__floatsisf>
     360:	4b 01       	movw	r8, r22
     362:	5c 01       	movw	r10, r24
     364:	60 91 cf 02 	lds	r22, 0x02CF
     368:	70 91 d0 02 	lds	r23, 0x02D0
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	38 d5       	rcall	.+2672   	; 0xde2 <__floatunsisf>
     372:	9b 01       	movw	r18, r22
     374:	ac 01       	movw	r20, r24
     376:	c5 01       	movw	r24, r10
     378:	b4 01       	movw	r22, r8
     37a:	c1 d5       	rcall	.+2946   	; 0xefe <__mulsf3>
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	4f e7       	ldi	r20, 0x7F	; 127
     382:	53 e4       	ldi	r21, 0x43	; 67
     384:	95 d4       	rcall	.+2346   	; 0xcb0 <__divsf3>
     386:	01 d5       	rcall	.+2562   	; 0xd8a <__fixunssfsi>
     388:	b6 2e       	mov	r11, r22
     38a:	a7 2e       	mov	r10, r23
		y = motor_encoder_read();
     38c:	db d1       	rcall	.+950    	; 0x744 <motor_encoder_read>
     38e:	8c 01       	movw	r16, r24
		
		
		
		output = -PI_controller_set_output(sliders, x, y);
     390:	ac 01       	movw	r20, r24
     392:	6b 2d       	mov	r22, r11
     394:	7a 2d       	mov	r23, r10
     396:	c6 01       	movw	r24, r12
     398:	99 d2       	rcall	.+1330   	; 0x8cc <PI_controller_set_output>
		
		if(y > max_left | y < 0){
     39a:	20 91 cf 02 	lds	r18, 0x02CF
     39e:	30 91 d0 02 	lds	r19, 0x02D0
     3a2:	20 17       	cp	r18, r16
     3a4:	31 07       	cpc	r19, r17
     3a6:	70 f0       	brcs	.+28     	; 0x3c4 <main+0xde>
		x = abs(canjoy_slider_right() - 255) * (float)(max_left) / 255.0;		
		y = motor_encoder_read();
		
		
		
		output = -PI_controller_set_output(sliders, x, y);
     3a8:	66 27       	eor	r22, r22
     3aa:	77 27       	eor	r23, r23
     3ac:	68 1b       	sub	r22, r24
     3ae:	79 0b       	sbc	r23, r25
     3b0:	88 27       	eor	r24, r24
     3b2:	77 fd       	sbrc	r23, 7
     3b4:	80 95       	com	r24
     3b6:	98 2f       	mov	r25, r24
     3b8:	16 d5       	rcall	.+2604   	; 0xde6 <__floatsisf>
     3ba:	96 2e       	mov	r9, r22
     3bc:	87 2e       	mov	r8, r23
     3be:	78 2e       	mov	r7, r24
     3c0:	69 2e       	mov	r6, r25
     3c2:	04 c0       	rjmp	.+8      	; 0x3cc <main+0xe6>
		
		if(y > max_left | y < 0){
			output = 0;
     3c4:	95 2c       	mov	r9, r5
     3c6:	85 2c       	mov	r8, r5
     3c8:	75 2c       	mov	r7, r5
     3ca:	65 2c       	mov	r6, r5
		}
		if(y > 60000){
     3cc:	01 36       	cpi	r16, 0x61	; 97
     3ce:	8a ee       	ldi	r24, 0xEA	; 234
     3d0:	18 07       	cpc	r17, r24
     3d2:	08 f0       	brcs	.+2      	; 0x3d6 <main+0xf0>
			motor_encoder_reset();
     3d4:	a4 d1       	rcall	.+840    	; 0x71e <motor_encoder_reset>
		}
		
		//motor_speed_direction_cap(output, 150);
		motor_speed_direction(output);
     3d6:	69 2d       	mov	r22, r9
     3d8:	78 2d       	mov	r23, r8
     3da:	87 2d       	mov	r24, r7
     3dc:	96 2d       	mov	r25, r6
     3de:	d0 d4       	rcall	.+2464   	; 0xd80 <__fixsfsi>
     3e0:	cb 01       	movw	r24, r22
     3e2:	86 d1       	rcall	.+780    	; 0x6f0 <motor_speed_direction>
		/*x = canjoy_slider_right();
		y = canjoy_slider_left();
		output = PI_controller_set_output(sliders, x, y);*/
		
		
		printf("Pos: %u\tRef: %u\toutput: %f\n", y, x, output);
     3e4:	6f 92       	push	r6
     3e6:	7f 92       	push	r7
     3e8:	8f 92       	push	r8
     3ea:	9f 92       	push	r9
     3ec:	af 92       	push	r10
     3ee:	bf 92       	push	r11
     3f0:	1f 93       	push	r17
     3f2:	0f 93       	push	r16
     3f4:	ff 92       	push	r15
     3f6:	ef 92       	push	r14
     3f8:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <printf>
			high = adc;
		if(adc < low)
			low = adc;
		printf("\nIR VALUE: %d\tHighest: %d\tLowest: %d\tUnblocked: %d\talt_blocked: %d\n", adc, high, low, ir_unblocked(), ir_alt_unblocked());*/
		
	}
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	f8 94       	cli
     400:	de bf       	out	0x3e, r29	; 62
     402:	0f be       	out	0x3f, r0	; 63
     404:	cd bf       	out	0x3d, r28	; 61
     406:	9a cf       	rjmp	.-204    	; 0x33c <main+0x56>

00000408 <can_init>:
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	ec 01       	movw	r28, r24
     40e:	2d d1       	rcall	.+602    	; 0x66a <mcp2515_init>
     410:	4f ef       	ldi	r20, 0xFF	; 255
     412:	50 e0       	ldi	r21, 0x00	; 0
     414:	60 e6       	ldi	r22, 0x60	; 96
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	80 e6       	ldi	r24, 0x60	; 96
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0d d1       	rcall	.+538    	; 0x638 <mcp2515_bit_modify>
     41e:	4f ef       	ldi	r20, 0xFF	; 255
     420:	50 e0       	ldi	r21, 0x00	; 0
     422:	60 e6       	ldi	r22, 0x60	; 96
     424:	70 e0       	ldi	r23, 0x00	; 0
     426:	80 e7       	ldi	r24, 0x70	; 112
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	06 d1       	rcall	.+524    	; 0x638 <mcp2515_bit_modify>
     42c:	ae 01       	movw	r20, r28
     42e:	60 ee       	ldi	r22, 0xE0	; 224
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	8f e0       	ldi	r24, 0x0F	; 15
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	00 d1       	rcall	.+512    	; 0x638 <mcp2515_bit_modify>
     438:	69 98       	cbi	0x0d, 1	; 13
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	08 95       	ret

00000440 <can_poll_interrupt>:
}


uint8_t can_poll_interrupt(){
	
	while(!(PINE & (1 << PE1))){}
     440:	61 9b       	sbis	0x0c, 1	; 12
     442:	fe cf       	rjmp	.-4      	; 0x440 <can_poll_interrupt>
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     444:	8c e2       	ldi	r24, 0x2C	; 44
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	eb d0       	rcall	.+470    	; 0x620 <mcp2515_read>
     44a:	80 fd       	sbrc	r24, 0
     44c:	07 c0       	rjmp	.+14     	; 0x45c <can_poll_interrupt+0x1c>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
	}
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     44e:	8c e2       	ldi	r24, 0x2C	; 44
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	e6 d0       	rcall	.+460    	; 0x620 <mcp2515_read>
     454:	81 ff       	sbrs	r24, 1
     456:	04 c0       	rjmp	.+8      	; 0x460 <can_poll_interrupt+0x20>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
     458:	80 e7       	ldi	r24, 0x70	; 112
     45a:	08 95       	ret
	
	while(!(PINE & (1 << PE1))){}
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
     45c:	80 e6       	ldi	r24, 0x60	; 96
     45e:	08 95       	ret
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
	}
	return -1;
     460:	8f ef       	ldi	r24, 0xFF	; 255
}
     462:	08 95       	ret

00000464 <can_recieve>:
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}

can_message can_recieve(can_message* msg){
     464:	7f 92       	push	r7
     466:	8f 92       	push	r8
     468:	9f 92       	push	r9
     46a:	af 92       	push	r10
     46c:	bf 92       	push	r11
     46e:	cf 92       	push	r12
     470:	df 92       	push	r13
     472:	ef 92       	push	r14
     474:	ff 92       	push	r15
     476:	0f 93       	push	r16
     478:	1f 93       	push	r17
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	cd b7       	in	r28, 0x3d	; 61
     480:	de b7       	in	r29, 0x3e	; 62
     482:	2b 97       	sbiw	r28, 0x0b	; 11
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	f8 94       	cli
     488:	de bf       	out	0x3e, r29	; 62
     48a:	0f be       	out	0x3f, r0	; 63
     48c:	cd bf       	out	0x3d, r28	; 61
     48e:	6c 01       	movw	r12, r24
	can_message m;
	
	uint8_t buffer_select = can_poll_interrupt();
     490:	d7 df       	rcall	.-82     	; 0x440 <can_poll_interrupt>
     492:	98 2e       	mov	r9, r24
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
     494:	08 2f       	mov	r16, r24
     496:	10 e0       	ldi	r17, 0x00	; 0
     498:	c8 01       	movw	r24, r16
     49a:	01 96       	adiw	r24, 0x01	; 1
     49c:	c1 d0       	rcall	.+386    	; 0x620 <mcp2515_read>
     49e:	7c 01       	movw	r14, r24
     4a0:	c8 01       	movw	r24, r16
     4a2:	02 96       	adiw	r24, 0x02	; 2
     4a4:	bd d0       	rcall	.+378    	; 0x620 <mcp2515_read>
     4a6:	95 95       	asr	r25
     4a8:	87 95       	ror	r24
     4aa:	95 95       	asr	r25
     4ac:	87 95       	ror	r24
     4ae:	95 95       	asr	r25
     4b0:	87 95       	ror	r24
     4b2:	95 95       	asr	r25
     4b4:	87 95       	ror	r24
     4b6:	95 95       	asr	r25
     4b8:	87 95       	ror	r24
     4ba:	ee 0c       	add	r14, r14
     4bc:	ff 1c       	adc	r15, r15
     4be:	ee 0c       	add	r14, r14
     4c0:	ff 1c       	adc	r15, r15
     4c2:	ee 0c       	add	r14, r14
     4c4:	ff 1c       	adc	r15, r15
     4c6:	5c 01       	movw	r10, r24
     4c8:	ae 28       	or	r10, r14
     4ca:	bf 28       	or	r11, r15
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
     4cc:	c8 01       	movw	r24, r16
     4ce:	05 96       	adiw	r24, 0x05	; 5
     4d0:	a7 d0       	rcall	.+334    	; 0x620 <mcp2515_read>
     4d2:	8f 70       	andi	r24, 0x0F	; 15
     4d4:	78 2e       	mov	r7, r24
	
	for(uint8_t i = 0; i < m.length; i++){
     4d6:	a9 f0       	breq	.+42     	; 0x502 <can_recieve+0x9e>
     4d8:	8e 01       	movw	r16, r28
     4da:	0c 5f       	subi	r16, 0xFC	; 252
     4dc:	1f 4f       	sbci	r17, 0xFF	; 255
     4de:	81 2c       	mov	r8, r1
     4e0:	ce 01       	movw	r24, r28
     4e2:	80 95       	com	r24
     4e4:	90 95       	com	r25
     4e6:	03 96       	adiw	r24, 0x03	; 3
     4e8:	7c 01       	movw	r14, r24
     4ea:	e9 0c       	add	r14, r9
     4ec:	f1 1c       	adc	r15, r1
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
     4ee:	c7 01       	movw	r24, r14
     4f0:	80 0f       	add	r24, r16
     4f2:	91 1f       	adc	r25, r17
     4f4:	95 d0       	rcall	.+298    	; 0x620 <mcp2515_read>
     4f6:	f8 01       	movw	r30, r16
     4f8:	81 93       	st	Z+, r24
     4fa:	8f 01       	movw	r16, r30
	uint8_t buffer_select = can_poll_interrupt();
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
	
	for(uint8_t i = 0; i < m.length; i++){
     4fc:	83 94       	inc	r8
     4fe:	87 10       	cpse	r8, r7
     500:	f6 cf       	rjmp	.-20     	; 0x4ee <can_recieve+0x8a>
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	
	switch(buffer_select){
     502:	f0 e6       	ldi	r31, 0x60	; 96
     504:	9f 16       	cp	r9, r31
     506:	21 f0       	breq	.+8      	; 0x510 <can_recieve+0xac>
     508:	80 e7       	ldi	r24, 0x70	; 112
     50a:	98 16       	cp	r9, r24
     50c:	49 f0       	breq	.+18     	; 0x520 <can_recieve+0xbc>
     50e:	0f c0       	rjmp	.+30     	; 0x52e <can_recieve+0xca>
		case MCP_RXB0CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
     510:	40 e0       	ldi	r20, 0x00	; 0
     512:	50 e0       	ldi	r21, 0x00	; 0
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	8c e2       	ldi	r24, 0x2C	; 44
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	8d d0       	rcall	.+282    	; 0x638 <mcp2515_bit_modify>
		break;
     51e:	07 c0       	rjmp	.+14     	; 0x52e <can_recieve+0xca>
		case MCP_RXB1CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
     520:	40 e0       	ldi	r20, 0x00	; 0
     522:	50 e0       	ldi	r21, 0x00	; 0
     524:	62 e0       	ldi	r22, 0x02	; 2
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	8c e2       	ldi	r24, 0x2C	; 44
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	85 d0       	rcall	.+266    	; 0x638 <mcp2515_bit_modify>
		break;
	}
	
	return m;
     52e:	ba 82       	std	Y+2, r11	; 0x02
     530:	a9 82       	std	Y+1, r10	; 0x01
     532:	7b 82       	std	Y+3, r7	; 0x03
     534:	8b e0       	ldi	r24, 0x0B	; 11
     536:	fe 01       	movw	r30, r28
     538:	31 96       	adiw	r30, 0x01	; 1
     53a:	d6 01       	movw	r26, r12
     53c:	01 90       	ld	r0, Z+
     53e:	0d 92       	st	X+, r0
     540:	8a 95       	dec	r24
     542:	e1 f7       	brne	.-8      	; 0x53c <can_recieve+0xd8>
}
     544:	c6 01       	movw	r24, r12
     546:	2b 96       	adiw	r28, 0x0b	; 11
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	f8 94       	cli
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	0f be       	out	0x3f, r0	; 63
     550:	cd bf       	out	0x3d, r28	; 61
     552:	df 91       	pop	r29
     554:	cf 91       	pop	r28
     556:	1f 91       	pop	r17
     558:	0f 91       	pop	r16
     55a:	ff 90       	pop	r15
     55c:	ef 90       	pop	r14
     55e:	df 90       	pop	r13
     560:	cf 90       	pop	r12
     562:	bf 90       	pop	r11
     564:	af 90       	pop	r10
     566:	9f 90       	pop	r9
     568:	8f 90       	pop	r8
     56a:	7f 90       	pop	r7
     56c:	08 95       	ret

0000056e <canjoy_recieve>:
int canjoy_joystick_button(){
	return canjoy_msg.data[2];
}
int canjoy_slider_left(){
	return canjoy_msg.data[3];
}
     56e:	ef 92       	push	r14
     570:	ff 92       	push	r15
     572:	0f 93       	push	r16
     574:	1f 93       	push	r17
     576:	cf 93       	push	r28
     578:	df 93       	push	r29
     57a:	ec 01       	movw	r28, r24
     57c:	73 df       	rcall	.-282    	; 0x464 <can_recieve>
     57e:	ea 80       	ldd	r14, Y+2	; 0x02
     580:	fb 80       	ldd	r15, Y+3	; 0x03
     582:	0c 81       	ldd	r16, Y+4	; 0x04
     584:	1d 81       	ldd	r17, Y+5	; 0x05
     586:	7e 81       	ldd	r23, Y+6	; 0x06
     588:	6f 81       	ldd	r22, Y+7	; 0x07
     58a:	58 85       	ldd	r21, Y+8	; 0x08
     58c:	49 85       	ldd	r20, Y+9	; 0x09
     58e:	28 81       	ld	r18, Y
     590:	39 81       	ldd	r19, Y+1	; 0x01
     592:	80 91 06 02 	lds	r24, 0x0206
     596:	90 91 07 02 	lds	r25, 0x0207
     59a:	28 17       	cp	r18, r24
     59c:	39 07       	cpc	r19, r25
     59e:	89 f4       	brne	.+34     	; 0x5c2 <canjoy_recieve+0x54>
     5a0:	8b e0       	ldi	r24, 0x0B	; 11
     5a2:	fe 01       	movw	r30, r28
     5a4:	a1 ed       	ldi	r26, 0xD1	; 209
     5a6:	b2 e0       	ldi	r27, 0x02	; 2
     5a8:	01 90       	ld	r0, Z+
     5aa:	0d 92       	st	X+, r0
     5ac:	8a 95       	dec	r24
     5ae:	e1 f7       	brne	.-8      	; 0x5a8 <canjoy_recieve+0x3a>
     5b0:	ea 82       	std	Y+2, r14	; 0x02
     5b2:	fb 82       	std	Y+3, r15	; 0x03
     5b4:	0c 83       	std	Y+4, r16	; 0x04
     5b6:	1d 83       	std	Y+5, r17	; 0x05
     5b8:	7e 83       	std	Y+6, r23	; 0x06
     5ba:	6f 83       	std	Y+7, r22	; 0x07
     5bc:	58 87       	std	Y+8, r21	; 0x08
     5be:	49 87       	std	Y+9, r20	; 0x09
     5c0:	0d c0       	rjmp	.+26     	; 0x5dc <canjoy_recieve+0x6e>
     5c2:	8d e2       	ldi	r24, 0x2D	; 45
     5c4:	92 e0       	ldi	r25, 0x02	; 2
     5c6:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <puts>
     5ca:	87 e0       	ldi	r24, 0x07	; 7
     5cc:	8a 83       	std	Y+2, r24	; 0x02
     5ce:	8b 83       	std	Y+3, r24	; 0x03
     5d0:	1c 82       	std	Y+4, r1	; 0x04
     5d2:	1d 82       	std	Y+5, r1	; 0x05
     5d4:	1e 82       	std	Y+6, r1	; 0x06
     5d6:	1f 82       	std	Y+7, r1	; 0x07
     5d8:	18 86       	std	Y+8, r1	; 0x08
     5da:	19 86       	std	Y+9, r1	; 0x09
     5dc:	ce 01       	movw	r24, r28
     5de:	df 91       	pop	r29
     5e0:	cf 91       	pop	r28
     5e2:	1f 91       	pop	r17
     5e4:	0f 91       	pop	r16
     5e6:	ff 90       	pop	r15
     5e8:	ef 90       	pop	r14
     5ea:	08 95       	ret

000005ec <canjoy_slider_right>:
int canjoy_slider_right(){
	return canjoy_msg.data[4];
     5ec:	80 91 d8 02 	lds	r24, 0x02D8
}
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	08 95       	ret

000005f4 <max520_init>:
#define MAX520_TWI_ADDR 0b01011110



void max520_init(){
	TWI_Master_Initialise();
     5f4:	29 d2       	rcall	.+1106   	; 0xa48 <TWI_Master_Initialise>
	sei();//interrupts on
     5f6:	78 94       	sei
     5f8:	08 95       	ret

000005fa <max520_send>:
}


void max520_send(uint8_t val)
{
     5fa:	cf 93       	push	r28
     5fc:	df 93       	push	r29
     5fe:	00 d0       	rcall	.+0      	; 0x600 <max520_send+0x6>
     600:	cd b7       	in	r28, 0x3d	; 61
     602:	de b7       	in	r29, 0x3e	; 62
	//printf("In max520_send\n");
	uint8_t message[3] = {MAX520_TWI_ADDR, 0, val};
     604:	9e e5       	ldi	r25, 0x5E	; 94
     606:	99 83       	std	Y+1, r25	; 0x01
     608:	1a 82       	std	Y+2, r1	; 0x02
     60a:	8b 83       	std	Y+3, r24	; 0x03
	
	TWI_Start_Transceiver_With_Data(message, 3);
     60c:	63 e0       	ldi	r22, 0x03	; 3
     60e:	ce 01       	movw	r24, r28
     610:	01 96       	adiw	r24, 0x01	; 1
     612:	24 d2       	rcall	.+1096   	; 0xa5c <TWI_Start_Transceiver_With_Data>
	
}
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	df 91       	pop	r29
     61c:	cf 91       	pop	r28
     61e:	08 95       	ret

00000620 <mcp2515_read>:
}

void mcp2515_request_to_send(int buffer_select){
	PORTB &= ~(1 << MCP2515_CS);
	spi_write(buffer_select);
	PORTB |= (1 << MCP2515_CS);
     620:	cf 93       	push	r28
     622:	c8 2f       	mov	r28, r24
     624:	28 98       	cbi	0x05, 0	; 5
     626:	83 e0       	ldi	r24, 0x03	; 3
     628:	f2 d1       	rcall	.+996    	; 0xa0e <spi_write>
     62a:	8c 2f       	mov	r24, r28
     62c:	f0 d1       	rcall	.+992    	; 0xa0e <spi_write>
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	ee d1       	rcall	.+988    	; 0xa0e <spi_write>
     632:	28 9a       	sbi	0x05, 0	; 5
     634:	cf 91       	pop	r28
     636:	08 95       	ret

00000638 <mcp2515_bit_modify>:
}

void mcp2515_bit_modify(int address, int mask, int data){
     638:	1f 93       	push	r17
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	18 2f       	mov	r17, r24
     640:	d6 2f       	mov	r29, r22
     642:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << MCP2515_CS);
     644:	28 98       	cbi	0x05, 0	; 5
	
	spi_write(MCP_BITMOD);
     646:	85 e0       	ldi	r24, 0x05	; 5
     648:	e2 d1       	rcall	.+964    	; 0xa0e <spi_write>
	spi_write(address);
     64a:	81 2f       	mov	r24, r17
     64c:	e0 d1       	rcall	.+960    	; 0xa0e <spi_write>
	spi_write(mask);
     64e:	8d 2f       	mov	r24, r29
     650:	de d1       	rcall	.+956    	; 0xa0e <spi_write>
	spi_write(data);
     652:	8c 2f       	mov	r24, r28
     654:	dc d1       	rcall	.+952    	; 0xa0e <spi_write>

	PORTB |= (1 << MCP2515_CS);
     656:	28 9a       	sbi	0x05, 0	; 5
	
}
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	1f 91       	pop	r17
     65e:	08 95       	ret

00000660 <mcp2515_reset>:

void mcp2515_reset(){
	PORTB &= ~(1 << MCP2515_CS);
     660:	28 98       	cbi	0x05, 0	; 5
	spi_write(MCP_RESET);
     662:	80 ec       	ldi	r24, 0xC0	; 192
     664:	d4 d1       	rcall	.+936    	; 0xa0e <spi_write>
	PORTB |= (1 << MCP2515_CS);
     666:	28 9a       	sbi	0x05, 0	; 5
     668:	08 95       	ret

0000066a <mcp2515_init>:
#include "SPI.h"
#include "mcp2515_define.h"


int mcp2515_init(){
	spi_init();
     66a:	ca d1       	rcall	.+916    	; 0xa00 <spi_init>
	mcp2515_reset();
     66c:	f9 df       	rcall	.-14     	; 0x660 <mcp2515_reset>
	
	uint8_t val = mcp2515_read(MCP_CANSTAT);
     66e:	8e e0       	ldi	r24, 0x0E	; 14
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	d6 df       	rcall	.-84     	; 0x620 <mcp2515_read>
	if((val & MODE_MASK) != MODE_CONFIG){
     674:	80 7e       	andi	r24, 0xE0	; 224
     676:	99 27       	eor	r25, r25
     678:	80 38       	cpi	r24, 0x80	; 128
     67a:	91 05       	cpc	r25, r1
     67c:	39 f0       	breq	.+14     	; 0x68c <mcp2515_init+0x22>
		printf("ERROR: MCP2515 is NOT in config mode after reset!\n");
     67e:	86 e3       	ldi	r24, 0x36	; 54
     680:	92 e0       	ldi	r25, 0x02	; 2
     682:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <puts>
		return 1;
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	90 e0       	ldi	r25, 0x00	; 0
     68a:	08 95       	ret
	}
	return 0;
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
}
     690:	08 95       	ret

00000692 <reverse_bits>:
		ir = ir_alt_blocked();
		
		printf("Ir blocked: %d\t\tEncoder: %d\n", ir, motor_encoder_read());
		
		
	}
     692:	28 2f       	mov	r18, r24
     694:	2a 7a       	andi	r18, 0xAA	; 170
     696:	26 95       	lsr	r18
     698:	98 2f       	mov	r25, r24
     69a:	95 75       	andi	r25, 0x55	; 85
     69c:	99 0f       	add	r25, r25
     69e:	92 2b       	or	r25, r18
     6a0:	29 2f       	mov	r18, r25
     6a2:	2c 7c       	andi	r18, 0xCC	; 204
     6a4:	26 95       	lsr	r18
     6a6:	26 95       	lsr	r18
     6a8:	89 2f       	mov	r24, r25
     6aa:	83 73       	andi	r24, 0x33	; 51
     6ac:	88 0f       	add	r24, r24
     6ae:	88 0f       	add	r24, r24
     6b0:	82 2b       	or	r24, r18
     6b2:	82 95       	swap	r24
     6b4:	08 95       	ret

000006b6 <motor_encoder_select_byte>:
     6b6:	88 23       	and	r24, r24
     6b8:	11 f0       	breq	.+4      	; 0x6be <motor_encoder_select_byte+0x8>
     6ba:	8d 9a       	sbi	0x11, 5	; 17
     6bc:	08 95       	ret
     6be:	8d 98       	cbi	0x11, 5	; 17
     6c0:	08 95       	ret

000006c2 <motor_encoder_output_enable>:
     6c2:	88 23       	and	r24, r24
     6c4:	11 f0       	breq	.+4      	; 0x6ca <motor_encoder_output_enable+0x8>
     6c6:	8c 98       	cbi	0x11, 4	; 17
     6c8:	08 95       	ret
     6ca:	8c 9a       	sbi	0x11, 4	; 17
     6cc:	08 95       	ret

000006ce <motor_direction>:
     6ce:	00 97       	sbiw	r24, 0x00	; 0
     6d0:	11 f4       	brne	.+4      	; 0x6d6 <motor_direction+0x8>
     6d2:	8b 9a       	sbi	0x11, 3	; 17
     6d4:	08 95       	ret
     6d6:	01 97       	sbiw	r24, 0x01	; 1
     6d8:	09 f4       	brne	.+2      	; 0x6dc <motor_direction+0xe>
     6da:	8b 98       	cbi	0x11, 3	; 17
     6dc:	08 95       	ret

000006de <motor_speed>:
     6de:	8f 3f       	cpi	r24, 0xFF	; 255
     6e0:	91 05       	cpc	r25, r1
     6e2:	21 f0       	breq	.+8      	; 0x6ec <motor_speed+0xe>
     6e4:	18 f0       	brcs	.+6      	; 0x6ec <motor_speed+0xe>
     6e6:	8f ef       	ldi	r24, 0xFF	; 255
     6e8:	88 cf       	rjmp	.-240    	; 0x5fa <max520_send>
     6ea:	08 95       	ret
     6ec:	86 cf       	rjmp	.-244    	; 0x5fa <max520_send>
     6ee:	08 95       	ret

000006f0 <motor_speed_direction>:
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	ec 01       	movw	r28, r24
     6f6:	99 23       	and	r25, r25
     6f8:	24 f4       	brge	.+8      	; 0x702 <motor_speed_direction+0x12>
     6fa:	80 e0       	ldi	r24, 0x00	; 0
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	e7 df       	rcall	.-50     	; 0x6ce <motor_direction>
     700:	03 c0       	rjmp	.+6      	; 0x708 <motor_speed_direction+0x18>
     702:	81 e0       	ldi	r24, 0x01	; 1
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	e3 df       	rcall	.-58     	; 0x6ce <motor_direction>
     708:	ce 01       	movw	r24, r28
     70a:	dd 23       	and	r29, r29
     70c:	24 f4       	brge	.+8      	; 0x716 <motor_speed_direction+0x26>
     70e:	88 27       	eor	r24, r24
     710:	99 27       	eor	r25, r25
     712:	8c 1b       	sub	r24, r28
     714:	9d 0b       	sbc	r25, r29
     716:	e3 df       	rcall	.-58     	; 0x6de <motor_speed>
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	08 95       	ret

0000071e <motor_encoder_reset>:
     71e:	8e 98       	cbi	0x11, 6	; 17
     720:	8a e6       	ldi	r24, 0x6A	; 106
     722:	8a 95       	dec	r24
     724:	f1 f7       	brne	.-4      	; 0x722 <motor_encoder_reset+0x4>
     726:	00 c0       	rjmp	.+0      	; 0x728 <motor_encoder_reset+0xa>
     728:	8e 9a       	sbi	0x11, 6	; 17
     72a:	08 95       	ret

0000072c <motor_init>:
     72c:	63 df       	rcall	.-314    	; 0x5f4 <max520_init>
     72e:	80 b3       	in	r24, 0x10	; 16
     730:	88 6f       	ori	r24, 0xF8	; 248
     732:	80 bb       	out	0x10, r24	; 16
     734:	81 b3       	in	r24, 0x11	; 17
     736:	88 63       	ori	r24, 0x38	; 56
     738:	81 bb       	out	0x11, r24	; 17
     73a:	8f 98       	cbi	0x11, 7	; 17
     73c:	10 92 07 01 	sts	0x0107, r1
     740:	ee cf       	rjmp	.-36     	; 0x71e <motor_encoder_reset>
     742:	08 95       	ret

00000744 <motor_encoder_read>:
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	bb df       	rcall	.-138    	; 0x6c2 <motor_encoder_output_enable>
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	b3 df       	rcall	.-154    	; 0x6b6 <motor_encoder_select_byte>
     750:	8a e6       	ldi	r24, 0x6A	; 106
     752:	8a 95       	dec	r24
     754:	f1 f7       	brne	.-4      	; 0x752 <motor_encoder_read+0xe>
     756:	00 c0       	rjmp	.+0      	; 0x758 <motor_encoder_read+0x14>
     758:	80 91 06 01 	lds	r24, 0x0106
     75c:	9a df       	rcall	.-204    	; 0x692 <reverse_bits>
     75e:	d8 2f       	mov	r29, r24
     760:	81 e0       	ldi	r24, 0x01	; 1
     762:	a9 df       	rcall	.-174    	; 0x6b6 <motor_encoder_select_byte>
     764:	8a e6       	ldi	r24, 0x6A	; 106
     766:	8a 95       	dec	r24
     768:	f1 f7       	brne	.-4      	; 0x766 <motor_encoder_read+0x22>
     76a:	00 c0       	rjmp	.+0      	; 0x76c <motor_encoder_read+0x28>
     76c:	80 91 06 01 	lds	r24, 0x0106
     770:	90 df       	rcall	.-224    	; 0x692 <reverse_bits>
     772:	c8 2f       	mov	r28, r24
     774:	80 e0       	ldi	r24, 0x00	; 0
     776:	a5 df       	rcall	.-182    	; 0x6c2 <motor_encoder_output_enable>
     778:	2d 2f       	mov	r18, r29
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	92 2f       	mov	r25, r18
     77e:	88 27       	eor	r24, r24
     780:	8c 0f       	add	r24, r28
     782:	91 1d       	adc	r25, r1
     784:	df 91       	pop	r29
     786:	cf 91       	pop	r28
     788:	08 95       	ret

0000078a <motor_controller_calibrate_by_reset>:
	
}



void motor_controller_calibrate_by_reset(){
     78a:	ef 92       	push	r14
     78c:	ff 92       	push	r15
     78e:	0f 93       	push	r16
     790:	1f 93       	push	r17
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
	printf("start calibration\n");
     796:	88 e9       	ldi	r24, 0x98	; 152
     798:	92 e0       	ldi	r25, 0x02	; 2
     79a:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <puts>
	
	motor_init();
     79e:	c6 df       	rcall	.-116    	; 0x72c <motor_init>
	
	
	uint16_t position;
	uint16_t prev_position;
	
	motor_speed(100);
     7a0:	84 e6       	ldi	r24, 0x64	; 100
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	9c df       	rcall	.-200    	; 0x6de <motor_speed>
	motor_direction(right);
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	91 df       	rcall	.-222    	; 0x6ce <motor_direction>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7ac:	2f ef       	ldi	r18, 0xFF	; 255
     7ae:	82 e5       	ldi	r24, 0x52	; 82
     7b0:	97 e0       	ldi	r25, 0x07	; 7
     7b2:	21 50       	subi	r18, 0x01	; 1
     7b4:	80 40       	sbci	r24, 0x00	; 0
     7b6:	90 40       	sbci	r25, 0x00	; 0
     7b8:	e1 f7       	brne	.-8      	; 0x7b2 <motor_controller_calibrate_by_reset+0x28>
     7ba:	00 c0       	rjmp	.+0      	; 0x7bc <motor_controller_calibrate_by_reset+0x32>
     7bc:	00 00       	nop
	_delay_ms(150);
	position =  motor_encoder_read();
     7be:	c2 df       	rcall	.-124    	; 0x744 <motor_encoder_read>
	
	//go right until stopped, then set encoder to zero
	while(position != prev_position){
     7c0:	89 2b       	or	r24, r25
     7c2:	e1 f0       	breq	.+56     	; 0x7fc <motor_controller_calibrate_by_reset+0x72>
		
		position =  motor_encoder_read();
		_delay_ms(100);
		prev_position = position;
		position = motor_encoder_read();
		printf("position: %d\n", position);
     7c4:	0a ea       	ldi	r16, 0xAA	; 170
     7c6:	12 e0       	ldi	r17, 0x02	; 2
	
	//go right until stopped, then set encoder to zero
	while(position != prev_position){
		
		
		position =  motor_encoder_read();
     7c8:	bd df       	rcall	.-134    	; 0x744 <motor_encoder_read>
     7ca:	7c 01       	movw	r14, r24
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	81 ee       	ldi	r24, 0xE1	; 225
     7d0:	94 e0       	ldi	r25, 0x04	; 4
     7d2:	21 50       	subi	r18, 0x01	; 1
     7d4:	80 40       	sbci	r24, 0x00	; 0
     7d6:	90 40       	sbci	r25, 0x00	; 0
     7d8:	e1 f7       	brne	.-8      	; 0x7d2 <motor_controller_calibrate_by_reset+0x48>
     7da:	00 c0       	rjmp	.+0      	; 0x7dc <motor_controller_calibrate_by_reset+0x52>
     7dc:	00 00       	nop
		_delay_ms(100);
		prev_position = position;
		position = motor_encoder_read();
     7de:	b2 df       	rcall	.-156    	; 0x744 <motor_encoder_read>
     7e0:	ec 01       	movw	r28, r24
		printf("position: %d\n", position);
     7e2:	df 93       	push	r29
     7e4:	8f 93       	push	r24
     7e6:	1f 93       	push	r17
     7e8:	0f 93       	push	r16
     7ea:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <printf>
	motor_direction(right);
	_delay_ms(150);
	position =  motor_encoder_read();
	
	//go right until stopped, then set encoder to zero
	while(position != prev_position){
     7ee:	0f 90       	pop	r0
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
     7f4:	0f 90       	pop	r0
     7f6:	ec 16       	cp	r14, r28
     7f8:	fd 06       	cpc	r15, r29
     7fa:	31 f7       	brne	.-52     	; 0x7c8 <motor_controller_calibrate_by_reset+0x3e>
		position = motor_encoder_read();
		printf("position: %d\n", position);

		
	}
	motor_encoder_reset();
     7fc:	90 df       	rcall	.-224    	; 0x71e <motor_encoder_reset>
	
	motor_speed(100);
     7fe:	84 e6       	ldi	r24, 0x64	; 100
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	6d df       	rcall	.-294    	; 0x6de <motor_speed>
	motor_direction(left);
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	62 df       	rcall	.-316    	; 0x6ce <motor_direction>
     80a:	9f ef       	ldi	r25, 0xFF	; 255
     80c:	22 e5       	ldi	r18, 0x52	; 82
     80e:	87 e0       	ldi	r24, 0x07	; 7
     810:	91 50       	subi	r25, 0x01	; 1
     812:	20 40       	sbci	r18, 0x00	; 0
     814:	80 40       	sbci	r24, 0x00	; 0
     816:	e1 f7       	brne	.-8      	; 0x810 <motor_controller_calibrate_by_reset+0x86>
     818:	00 c0       	rjmp	.+0      	; 0x81a <motor_controller_calibrate_by_reset+0x90>
     81a:	00 00       	nop
		
		position =  motor_encoder_read();
		_delay_ms(100);
		prev_position = position;
		position = motor_encoder_read();
		printf("position: %d\n", position);
     81c:	0f 2e       	mov	r0, r31
     81e:	fa ea       	ldi	r31, 0xAA	; 170
     820:	ef 2e       	mov	r14, r31
     822:	f2 e0       	ldi	r31, 0x02	; 2
     824:	ff 2e       	mov	r15, r31
     826:	f0 2d       	mov	r31, r0
	
	//go left until stopped, set max left to current position
	do{
		
		
		position =  motor_encoder_read();
     828:	8d df       	rcall	.-230    	; 0x744 <motor_encoder_read>
     82a:	8c 01       	movw	r16, r24
     82c:	9f ef       	ldi	r25, 0xFF	; 255
     82e:	21 ee       	ldi	r18, 0xE1	; 225
     830:	84 e0       	ldi	r24, 0x04	; 4
     832:	91 50       	subi	r25, 0x01	; 1
     834:	20 40       	sbci	r18, 0x00	; 0
     836:	80 40       	sbci	r24, 0x00	; 0
     838:	e1 f7       	brne	.-8      	; 0x832 <motor_controller_calibrate_by_reset+0xa8>
     83a:	00 c0       	rjmp	.+0      	; 0x83c <motor_controller_calibrate_by_reset+0xb2>
     83c:	00 00       	nop
		_delay_ms(100);
		prev_position = position;
		position = motor_encoder_read();
     83e:	82 df       	rcall	.-252    	; 0x744 <motor_encoder_read>
     840:	ec 01       	movw	r28, r24
		printf("position: %d\n", position);
     842:	df 93       	push	r29
     844:	cf 93       	push	r28
     846:	ff 92       	push	r15
     848:	ef 92       	push	r14
     84a:	0e 94 00 0e 	call	0x1c00	; 0x1c00 <printf>
		
		
	} while(position != prev_position);
     84e:	0f 90       	pop	r0
     850:	0f 90       	pop	r0
     852:	0f 90       	pop	r0
     854:	0f 90       	pop	r0
     856:	0c 17       	cp	r16, r28
     858:	1d 07       	cpc	r17, r29
     85a:	31 f7       	brne	.-52     	; 0x828 <motor_controller_calibrate_by_reset+0x9e>
	max_left = position;
     85c:	10 93 d0 02 	sts	0x02D0, r17
     860:	00 93 cf 02 	sts	0x02CF, r16
	motor_speed(0);
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	3a df       	rcall	.-396    	; 0x6de <motor_speed>


	printf("end calibration\n");
     86a:	88 eb       	ldi	r24, 0xB8	; 184
     86c:	92 e0       	ldi	r25, 0x02	; 2
     86e:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <puts>
	
}
     872:	df 91       	pop	r29
     874:	cf 91       	pop	r28
     876:	1f 91       	pop	r17
     878:	0f 91       	pop	r16
     87a:	ff 90       	pop	r15
     87c:	ef 90       	pop	r14
     87e:	08 95       	ret

00000880 <PI_controller_new>:
	float error;
	float integral;
};


PI_controller* PI_controller_new(float kp, float ki){
     880:	8f 92       	push	r8
     882:	9f 92       	push	r9
     884:	af 92       	push	r10
     886:	bf 92       	push	r11
     888:	cf 92       	push	r12
     88a:	df 92       	push	r13
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	4b 01       	movw	r8, r22
     892:	5c 01       	movw	r10, r24
     894:	69 01       	movw	r12, r18
     896:	7a 01       	movw	r14, r20
	PI_controller* this = malloc(sizeof(PI_controller));
     898:	82 e1       	ldi	r24, 0x12	; 18
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	20 d7       	rcall	.+3648   	; 0x16de <malloc>
	
	//initialized variables of controller type to 0
	memset(this, 0, sizeof(PI_controller));
     89e:	22 e1       	ldi	r18, 0x12	; 18
     8a0:	fc 01       	movw	r30, r24
     8a2:	11 92       	st	Z+, r1
     8a4:	2a 95       	dec	r18
     8a6:	e9 f7       	brne	.-6      	; 0x8a2 <PI_controller_new+0x22>
	
	this->Ki = ki;
     8a8:	fc 01       	movw	r30, r24
     8aa:	c4 82       	std	Z+4, r12	; 0x04
     8ac:	d5 82       	std	Z+5, r13	; 0x05
     8ae:	e6 82       	std	Z+6, r14	; 0x06
     8b0:	f7 82       	std	Z+7, r15	; 0x07
	this->Kp = kp;
     8b2:	80 82       	st	Z, r8
     8b4:	91 82       	std	Z+1, r9	; 0x01
     8b6:	a2 82       	std	Z+2, r10	; 0x02
     8b8:	b3 82       	std	Z+3, r11	; 0x03
	
	return this;
}
     8ba:	ff 90       	pop	r15
     8bc:	ef 90       	pop	r14
     8be:	df 90       	pop	r13
     8c0:	cf 90       	pop	r12
     8c2:	bf 90       	pop	r11
     8c4:	af 90       	pop	r10
     8c6:	9f 90       	pop	r9
     8c8:	8f 90       	pop	r8
     8ca:	08 95       	ret

000008cc <PI_controller_set_output>:

int16_t PI_controller_set_output(PI_controller* ctrl, uint16_t position, uint16_t reference){
     8cc:	8f 92       	push	r8
     8ce:	9f 92       	push	r9
     8d0:	af 92       	push	r10
     8d2:	bf 92       	push	r11
     8d4:	cf 92       	push	r12
     8d6:	df 92       	push	r13
     8d8:	ef 92       	push	r14
     8da:	ff 92       	push	r15
     8dc:	cf 93       	push	r28
     8de:	df 93       	push	r29
     8e0:	ec 01       	movw	r28, r24
     8e2:	5b 01       	movw	r10, r22
     8e4:	4a 01       	movw	r8, r20
	//copy pasta ish
	float dt = (float)(timer_read() * prescaler / fcpu);	
     8e6:	a6 d0       	rcall	.+332    	; 0xa34 <timer_read>
     8e8:	bc 01       	movw	r22, r24
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	79 d2       	rcall	.+1266   	; 0xde2 <__floatunsisf>
     8f0:	20 91 08 02 	lds	r18, 0x0208
     8f4:	30 91 09 02 	lds	r19, 0x0209
     8f8:	40 91 0a 02 	lds	r20, 0x020A
     8fc:	50 91 0b 02 	lds	r21, 0x020B
     900:	fe d2       	rcall	.+1532   	; 0xefe <__mulsf3>
     902:	20 91 0c 02 	lds	r18, 0x020C
     906:	30 91 0d 02 	lds	r19, 0x020D
     90a:	40 91 0e 02 	lds	r20, 0x020E
     90e:	50 91 0f 02 	lds	r21, 0x020F
     912:	ce d1       	rcall	.+924    	; 0xcb0 <__divsf3>
     914:	6b 01       	movw	r12, r22
     916:	7c 01       	movw	r14, r24
	timer_reset();
     918:	92 d0       	rcall	.+292    	; 0xa3e <timer_reset>
	
	int16_t error			= reference - position;
     91a:	b4 01       	movw	r22, r8
     91c:	6a 19       	sub	r22, r10
     91e:	7b 09       	sbc	r23, r11
	ctrl->integral		+= error * dt;
     920:	88 27       	eor	r24, r24
     922:	77 fd       	sbrc	r23, 7
     924:	80 95       	com	r24
     926:	98 2f       	mov	r25, r24
     928:	5e d2       	rcall	.+1212   	; 0xde6 <__floatsisf>
     92a:	4b 01       	movw	r8, r22
     92c:	5c 01       	movw	r10, r24
     92e:	a7 01       	movw	r20, r14
     930:	96 01       	movw	r18, r12
     932:	e5 d2       	rcall	.+1482   	; 0xefe <__mulsf3>
     934:	2e 85       	ldd	r18, Y+14	; 0x0e
     936:	3f 85       	ldd	r19, Y+15	; 0x0f
     938:	48 89       	ldd	r20, Y+16	; 0x10
     93a:	59 89       	ldd	r21, Y+17	; 0x11
     93c:	55 d1       	rcall	.+682    	; 0xbe8 <__addsf3>
     93e:	6b 01       	movw	r12, r22
     940:	7c 01       	movw	r14, r24
     942:	6e 87       	std	Y+14, r22	; 0x0e
     944:	7f 87       	std	Y+15, r23	; 0x0f
     946:	88 8b       	std	Y+16, r24	; 0x10
     948:	99 8b       	std	Y+17, r25	; 0x11
	
	return		ctrl->Kp * error +
     94a:	28 81       	ld	r18, Y
     94c:	39 81       	ldd	r19, Y+1	; 0x01
     94e:	4a 81       	ldd	r20, Y+2	; 0x02
     950:	5b 81       	ldd	r21, Y+3	; 0x03
     952:	c5 01       	movw	r24, r10
     954:	b4 01       	movw	r22, r8
     956:	d3 d2       	rcall	.+1446   	; 0xefe <__mulsf3>
     958:	4b 01       	movw	r8, r22
     95a:	5c 01       	movw	r10, r24
				ctrl->Ki * ctrl->integral;
     95c:	2c 81       	ldd	r18, Y+4	; 0x04
     95e:	3d 81       	ldd	r19, Y+5	; 0x05
     960:	4e 81       	ldd	r20, Y+6	; 0x06
     962:	5f 81       	ldd	r21, Y+7	; 0x07
     964:	c7 01       	movw	r24, r14
     966:	b6 01       	movw	r22, r12
     968:	ca d2       	rcall	.+1428   	; 0xefe <__mulsf3>
     96a:	9b 01       	movw	r18, r22
     96c:	ac 01       	movw	r20, r24
	timer_reset();
	
	int16_t error			= reference - position;
	ctrl->integral		+= error * dt;
	
	return		ctrl->Kp * error +
     96e:	c5 01       	movw	r24, r10
     970:	b4 01       	movw	r22, r8
     972:	3a d1       	rcall	.+628    	; 0xbe8 <__addsf3>
     974:	05 d2       	rcall	.+1034   	; 0xd80 <__fixsfsi>
	//printf("dt: %f\terror: %f\toutput: %f\n", dt, ctrl->error, output);
	
	return output;
	*/
	
}
     976:	cb 01       	movw	r24, r22
     978:	df 91       	pop	r29
     97a:	cf 91       	pop	r28
     97c:	ff 90       	pop	r15
     97e:	ef 90       	pop	r14
     980:	df 90       	pop	r13
     982:	cf 90       	pop	r12
     984:	bf 90       	pop	r11
     986:	af 90       	pop	r10
     988:	9f 90       	pop	r9
     98a:	8f 90       	pop	r8
     98c:	08 95       	ret

0000098e <pwm_init>:
#define P_RESOLUTION P_MAX - P_MIN // = 300



void pwm_init(){
	DDRE |= (1<<PE3);
     98e:	6b 9a       	sbi	0x0d, 3	; 13
	PORTE |= (1<<PE3);
     990:	73 9a       	sbi	0x0e, 3	; 14
	
	TCCR3A = 0;
     992:	a0 e9       	ldi	r26, 0x90	; 144
     994:	b0 e0       	ldi	r27, 0x00	; 0
     996:	1c 92       	st	X, r1
	TCCR3B = 0;
     998:	e1 e9       	ldi	r30, 0x91	; 145
     99a:	f0 e0       	ldi	r31, 0x00	; 0
     99c:	10 82       	st	Z, r1
	TCCR3C = 0;
     99e:	10 92 92 00 	sts	0x0092, r1
	
	//16 bit, fast pwm, top: ICR, update OCRnx at bottom, TOVn Flag set on TOP
	TCCR3A &= ~(1<< WGM30);
     9a2:	8c 91       	ld	r24, X
     9a4:	8e 7f       	andi	r24, 0xFE	; 254
     9a6:	8c 93       	st	X, r24
	TCCR3A |= (1<<WGM31);
     9a8:	8c 91       	ld	r24, X
     9aa:	82 60       	ori	r24, 0x02	; 2
     9ac:	8c 93       	st	X, r24
	TCCR3B |= (1<<WGM32);
     9ae:	80 81       	ld	r24, Z
     9b0:	88 60       	ori	r24, 0x08	; 8
     9b2:	80 83       	st	Z, r24
	TCCR3B |= (1<<WGM33);
     9b4:	80 81       	ld	r24, Z
     9b6:	80 61       	ori	r24, 0x10	; 16
     9b8:	80 83       	st	Z, r24
	
	//inverting		
	TCCR3A |= (0<<COM3A0);
     9ba:	8c 91       	ld	r24, X
     9bc:	8c 93       	st	X, r24
	TCCR3A |= (1<<COM3A1);
     9be:	8c 91       	ld	r24, X
     9c0:	80 68       	ori	r24, 0x80	; 128
     9c2:	8c 93       	st	X, r24
	
	//prescaler,	CLK / 64
	TCCR3B |= (1<<CS30) | (1<<CS31);
     9c4:	80 81       	ld	r24, Z
     9c6:	83 60       	ori	r24, 0x03	; 3
     9c8:	80 83       	st	Z, r24
	TCCR3B &= ~(1<<CS32);
     9ca:	80 81       	ld	r24, Z
     9cc:	8b 7f       	andi	r24, 0xFB	; 251
     9ce:	80 83       	st	Z, r24
	
	//20 ms
	ICR3 = 5000;
     9d0:	88 e8       	ldi	r24, 0x88	; 136
     9d2:	93 e1       	ldi	r25, 0x13	; 19
     9d4:	90 93 97 00 	sts	0x0097, r25
     9d8:	80 93 96 00 	sts	0x0096, r24
	
	OCR3A = 375;
     9dc:	87 e7       	ldi	r24, 0x77	; 119
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	90 93 99 00 	sts	0x0099, r25
     9e4:	80 93 98 00 	sts	0x0098, r24
     9e8:	08 95       	ret

000009ea <solenoid_init>:
#include <avr/io.h>
#include <util/delay.h>

void solenoid_init(){
	DDRH |= (1<<PH3);
     9ea:	e1 e0       	ldi	r30, 0x01	; 1
     9ec:	f1 e0       	ldi	r31, 0x01	; 1
     9ee:	80 81       	ld	r24, Z
     9f0:	88 60       	ori	r24, 0x08	; 8
     9f2:	80 83       	st	Z, r24
	PORTH |= (1<<PH3);
     9f4:	e2 e0       	ldi	r30, 0x02	; 2
     9f6:	f1 e0       	ldi	r31, 0x01	; 1
     9f8:	80 81       	ld	r24, Z
     9fa:	88 60       	ori	r24, 0x08	; 8
     9fc:	80 83       	st	Z, r24
     9fe:	08 95       	ret

00000a00 <spi_init>:
#include "SPI.h"
#include <avr/io.h>

void spi_init(){
			//SI out		SS out		SCK out
	DDRB |= ( 1 << PB2) | (1 << PB0) | (1 << PB1);
     a00:	84 b1       	in	r24, 0x04	; 4
     a02:	87 60       	ori	r24, 0x07	; 7
     a04:	84 b9       	out	0x04, r24	; 4
	//SO in
	DDRB &= ~(1 << PB3);
     a06:	23 98       	cbi	0x04, 3	; 4
	
	//								 frequency / 16
	SPCR= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     a08:	81 e5       	ldi	r24, 0x51	; 81
     a0a:	8c bd       	out	0x2c, r24	; 44
     a0c:	08 95       	ret

00000a0e <spi_write>:

//both read and write
int spi_write(char data){
	//SPDR = data;
	//while(!(SPSR & (1<<SPIF)));
	SPDR = data;
     a0e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     a10:	0d b4       	in	r0, 0x2d	; 45
     a12:	07 fe       	sbrs	r0, 7
     a14:	fd cf       	rjmp	.-6      	; 0xa10 <spi_write+0x2>
	return SPDR;
     a16:	8e b5       	in	r24, 0x2e	; 46
}
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	08 95       	ret

00000a1c <timer_init>:
int time_tick = 0;
int time_tick_max = 0;
void timer_init() {
	
	//Normal mode, zero prescaler
	TCCR4A = 0;
     a1c:	10 92 a0 00 	sts	0x00A0, r1
	TCCR4B = 0;
     a20:	e1 ea       	ldi	r30, 0xA1	; 161
     a22:	f0 e0       	ldi	r31, 0x00	; 0
     a24:	10 82       	st	Z, r1
	
	//CS4{2:0}   = 101  prescaler set to 1024
	TCCR4B |=  (1<<CS42) | (1<<CS40);
     a26:	80 81       	ld	r24, Z
     a28:	85 60       	ori	r24, 0x05	; 5
     a2a:	80 83       	st	Z, r24
	TCCR4B &= ~(1<<CS41);
     a2c:	80 81       	ld	r24, Z
     a2e:	8d 7f       	andi	r24, 0xFD	; 253
     a30:	80 83       	st	Z, r24
     a32:	08 95       	ret

00000a34 <timer_read>:
	OCR4A = 0x7FFF;*/

}

uint16_t timer_read(){
	return TCNT4;
     a34:	80 91 a4 00 	lds	r24, 0x00A4
     a38:	90 91 a5 00 	lds	r25, 0x00A5
}
     a3c:	08 95       	ret

00000a3e <timer_reset>:

void timer_reset(){
	TCNT4 = 0;
     a3e:	10 92 a5 00 	sts	0x00A5, r1
     a42:	10 92 a4 00 	sts	0x00A4, r1
     a46:	08 95       	ret

00000a48 <TWI_Master_Initialise>:
		{
			msg[ i ] = TWI_buf[ i ];
		}
	}
	return( TWI_statusReg.lastTransOK );
}
     a48:	8c e0       	ldi	r24, 0x0C	; 12
     a4a:	80 93 b8 00 	sts	0x00B8, r24
     a4e:	8f ef       	ldi	r24, 0xFF	; 255
     a50:	80 93 bb 00 	sts	0x00BB, r24
     a54:	84 e0       	ldi	r24, 0x04	; 4
     a56:	80 93 bc 00 	sts	0x00BC, r24
     a5a:	08 95       	ret

00000a5c <TWI_Start_Transceiver_With_Data>:
     a5c:	ec eb       	ldi	r30, 0xBC	; 188
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	20 81       	ld	r18, Z
     a62:	20 fd       	sbrc	r18, 0
     a64:	fd cf       	rjmp	.-6      	; 0xa60 <TWI_Start_Transceiver_With_Data+0x4>
     a66:	60 93 ca 02 	sts	0x02CA, r22
     a6a:	fc 01       	movw	r30, r24
     a6c:	20 81       	ld	r18, Z
     a6e:	20 93 cb 02 	sts	0x02CB, r18
     a72:	20 fd       	sbrc	r18, 0
     a74:	0c c0       	rjmp	.+24     	; 0xa8e <TWI_Start_Transceiver_With_Data+0x32>
     a76:	62 30       	cpi	r22, 0x02	; 2
     a78:	50 f0       	brcs	.+20     	; 0xa8e <TWI_Start_Transceiver_With_Data+0x32>
     a7a:	dc 01       	movw	r26, r24
     a7c:	11 96       	adiw	r26, 0x01	; 1
     a7e:	ec ec       	ldi	r30, 0xCC	; 204
     a80:	f2 e0       	ldi	r31, 0x02	; 2
     a82:	81 e0       	ldi	r24, 0x01	; 1
     a84:	9d 91       	ld	r25, X+
     a86:	91 93       	st	Z+, r25
     a88:	8f 5f       	subi	r24, 0xFF	; 255
     a8a:	86 13       	cpse	r24, r22
     a8c:	fb cf       	rjmp	.-10     	; 0xa84 <TWI_Start_Transceiver_With_Data+0x28>
     a8e:	10 92 c9 02 	sts	0x02C9, r1
     a92:	88 ef       	ldi	r24, 0xF8	; 248
     a94:	80 93 10 02 	sts	0x0210, r24
     a98:	85 ea       	ldi	r24, 0xA5	; 165
     a9a:	80 93 bc 00 	sts	0x00BC, r24
     a9e:	08 95       	ret

00000aa0 <__vector_39>:
This function is the Interrupt Service Routine (ISR), and called when the TWI interrupt is triggered;
that is whenever a TWI event has occurred. This function should not be called directly from the main
application.
****************************************************************************/
ISR(TWI_vect)
{
     aa0:	1f 92       	push	r1
     aa2:	0f 92       	push	r0
     aa4:	0f b6       	in	r0, 0x3f	; 63
     aa6:	0f 92       	push	r0
     aa8:	11 24       	eor	r1, r1
     aaa:	0b b6       	in	r0, 0x3b	; 59
     aac:	0f 92       	push	r0
     aae:	2f 93       	push	r18
     ab0:	3f 93       	push	r19
     ab2:	8f 93       	push	r24
     ab4:	9f 93       	push	r25
     ab6:	af 93       	push	r26
     ab8:	bf 93       	push	r27
     aba:	ef 93       	push	r30
     abc:	ff 93       	push	r31
	static unsigned char TWI_bufPtr;
	
	switch (TWSR)
     abe:	80 91 b9 00 	lds	r24, 0x00B9
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	fc 01       	movw	r30, r24
     ac6:	38 97       	sbiw	r30, 0x08	; 8
     ac8:	e1 35       	cpi	r30, 0x51	; 81
     aca:	f1 05       	cpc	r31, r1
     acc:	08 f0       	brcs	.+2      	; 0xad0 <__vector_39+0x30>
     ace:	55 c0       	rjmp	.+170    	; 0xb7a <__vector_39+0xda>
     ad0:	ee 58       	subi	r30, 0x8E	; 142
     ad2:	ff 4f       	sbci	r31, 0xFF	; 255
     ad4:	fe c5       	rjmp	.+3068   	; 0x16d2 <__tablejump2__>
	{
		case TWI_START:             // START has been transmitted
		case TWI_REP_START:         // Repeated START has been transmitted
		TWI_bufPtr = 0;                                     // Set buffer pointer to the TWI Address location
     ad6:	10 92 c8 02 	sts	0x02C8, r1
		case TWI_MTX_ADR_ACK:       // SLA+W has been tramsmitted and ACK received
		case TWI_MTX_DATA_ACK:      // Data byte has been tramsmitted and ACK received
		if (TWI_bufPtr < TWI_msgSize)
     ada:	e0 91 c8 02 	lds	r30, 0x02C8
     ade:	80 91 ca 02 	lds	r24, 0x02CA
     ae2:	e8 17       	cp	r30, r24
     ae4:	70 f4       	brcc	.+28     	; 0xb02 <__vector_39+0x62>
		{
			TWDR = TWI_buf[TWI_bufPtr++];
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	8e 0f       	add	r24, r30
     aea:	80 93 c8 02 	sts	0x02C8, r24
     aee:	f0 e0       	ldi	r31, 0x00	; 0
     af0:	e5 53       	subi	r30, 0x35	; 53
     af2:	fd 4f       	sbci	r31, 0xFD	; 253
     af4:	80 81       	ld	r24, Z
     af6:	80 93 bb 00 	sts	0x00BB, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     afa:	85 e8       	ldi	r24, 0x85	; 133
     afc:	80 93 bc 00 	sts	0x00BC, r24
     b00:	43 c0       	rjmp	.+134    	; 0xb88 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to send byte
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           //
			(0<<TWWC);                                 //
		}else                    // Send STOP after last byte
		{
			TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     b02:	80 91 c9 02 	lds	r24, 0x02C9
     b06:	81 60       	ori	r24, 0x01	; 1
     b08:	80 93 c9 02 	sts	0x02C9, r24
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b0c:	84 e9       	ldi	r24, 0x94	; 148
     b0e:	80 93 bc 00 	sts	0x00BC, r24
     b12:	3a c0       	rjmp	.+116    	; 0xb88 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_ACK:      // Data byte has been received and ACK tramsmitted
		TWI_buf[TWI_bufPtr++] = TWDR;
     b14:	e0 91 c8 02 	lds	r30, 0x02C8
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	8e 0f       	add	r24, r30
     b1c:	80 93 c8 02 	sts	0x02C8, r24
     b20:	80 91 bb 00 	lds	r24, 0x00BB
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	e5 53       	subi	r30, 0x35	; 53
     b28:	fd 4f       	sbci	r31, 0xFD	; 253
     b2a:	80 83       	st	Z, r24
		case TWI_MRX_ADR_ACK:       // SLA+R has been tramsmitted and ACK received
		if (TWI_bufPtr < (TWI_msgSize-1) )                  // Detect the last byte to NACK it.
     b2c:	20 91 c8 02 	lds	r18, 0x02C8
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	80 91 ca 02 	lds	r24, 0x02CA
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	01 97       	sbiw	r24, 0x01	; 1
     b3a:	28 17       	cp	r18, r24
     b3c:	39 07       	cpc	r19, r25
     b3e:	24 f4       	brge	.+8      	; 0xb48 <__vector_39+0xa8>
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b40:	85 ec       	ldi	r24, 0xC5	; 197
     b42:	80 93 bc 00 	sts	0x00BC, r24
     b46:	20 c0       	rjmp	.+64     	; 0xb88 <__vector_39+0xe8>
			(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag to read next byte
			(1<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send ACK after reception
			(0<<TWWC);                                 //
		}else                    // Send NACK after next reception
		{
			TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b48:	85 e8       	ldi	r24, 0x85	; 133
     b4a:	80 93 bc 00 	sts	0x00BC, r24
     b4e:	1c c0       	rjmp	.+56     	; 0xb88 <__vector_39+0xe8>
			(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // Send NACK after reception
			(0<<TWWC);                                 //
		}
		break;
		case TWI_MRX_DATA_NACK:     // Data byte has been received and NACK tramsmitted
		TWI_buf[TWI_bufPtr] = TWDR;
     b50:	80 91 bb 00 	lds	r24, 0x00BB
     b54:	e0 91 c8 02 	lds	r30, 0x02C8
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	e5 53       	subi	r30, 0x35	; 53
     b5c:	fd 4f       	sbci	r31, 0xFD	; 253
     b5e:	80 83       	st	Z, r24
		TWI_statusReg.lastTransOK = TRUE;                 // Set status bits to completed successfully.
     b60:	80 91 c9 02 	lds	r24, 0x02C9
     b64:	81 60       	ori	r24, 0x01	; 1
     b66:	80 93 c9 02 	sts	0x02C9, r24
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b6a:	84 e9       	ldi	r24, 0x94	; 148
     b6c:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(1<<TWINT)|                      // Disable TWI Interrupt and clear the flag
		(0<<TWEA)|(0<<TWSTA)|(1<<TWSTO)|           // Initiate a STOP condition.
		(0<<TWWC);                                 //
		break;
     b70:	0b c0       	rjmp	.+22     	; 0xb88 <__vector_39+0xe8>
		case TWI_ARB_LOST:          // Arbitration lost
		TWCR = (1<<TWEN)|                                 // TWI Interface enabled
     b72:	85 ea       	ldi	r24, 0xA5	; 165
     b74:	80 93 bc 00 	sts	0x00BC, r24
		(1<<TWIE)|(1<<TWINT)|                      // Enable TWI Interupt and clear the flag
		(0<<TWEA)|(1<<TWSTA)|(0<<TWSTO)|           // Initiate a (RE)START condition.
		(0<<TWWC);                                 //
		break;
     b78:	07 c0       	rjmp	.+14     	; 0xb88 <__vector_39+0xe8>
		case TWI_MRX_ADR_NACK:      // SLA+R has been tramsmitted and NACK received
		case TWI_MTX_DATA_NACK:     // Data byte has been tramsmitted and NACK received
		//    case TWI_NO_STATE              // No relevant state information available; TWINT = ?0?
		case TWI_BUS_ERROR:         // Bus error due to an illegal START or STOP condition
		default:
		TWI_state = TWSR;                                 // Store TWSR and automatically sets clears noErrors bit.
     b7a:	80 91 b9 00 	lds	r24, 0x00B9
     b7e:	80 93 10 02 	sts	0x0210, r24
		// Reset TWI Interface
		TWCR = (1<<TWEN)|                                 // Enable TWI-interface and release TWI pins
     b82:	84 e0       	ldi	r24, 0x04	; 4
     b84:	80 93 bc 00 	sts	0x00BC, r24
		(0<<TWIE)|(0<<TWINT)|                      // Disable Interupt
		(0<<TWEA)|(0<<TWSTA)|(0<<TWSTO)|           // No Signal requests
		(0<<TWWC);                                 //
	}
     b88:	ff 91       	pop	r31
     b8a:	ef 91       	pop	r30
     b8c:	bf 91       	pop	r27
     b8e:	af 91       	pop	r26
     b90:	9f 91       	pop	r25
     b92:	8f 91       	pop	r24
     b94:	3f 91       	pop	r19
     b96:	2f 91       	pop	r18
     b98:	0f 90       	pop	r0
     b9a:	0b be       	out	0x3b, r0	; 59
     b9c:	0f 90       	pop	r0
     b9e:	0f be       	out	0x3f, r0	; 63
     ba0:	0f 90       	pop	r0
     ba2:	1f 90       	pop	r1
     ba4:	18 95       	reti

00000ba6 <uart_Transmit>:
}

void uart_Transmit( unsigned char data ){
	
	//Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
     ba6:	e0 ec       	ldi	r30, 0xC0	; 192
     ba8:	f0 e0       	ldi	r31, 0x00	; 0
     baa:	90 81       	ld	r25, Z
     bac:	95 ff       	sbrs	r25, 5
     bae:	fd cf       	rjmp	.-6      	; 0xbaa <uart_Transmit+0x4>
	
	//Put data into buffer, sends the data
	UDR0 = data;
     bb0:	80 93 c6 00 	sts	0x00C6, r24
     bb4:	08 95       	ret

00000bb6 <uart_Receive>:

unsigned char uart_Receive(void){
	
	//Wait for data to be received
	
	while( !(UCSR0A & (1<<RXC0)) );
     bb6:	e0 ec       	ldi	r30, 0xC0	; 192
     bb8:	f0 e0       	ldi	r31, 0x00	; 0
     bba:	80 81       	ld	r24, Z
     bbc:	88 23       	and	r24, r24
     bbe:	ec f7       	brge	.-6      	; 0xbba <uart_Receive+0x4>
	
	//Get and return received data from buffer
	
	return UDR0;
     bc0:	80 91 c6 00 	lds	r24, 0x00C6
}
     bc4:	08 95       	ret

00000bc6 <uart_Init>:
#include "uart.h"

void uart_Init(unsigned int ubrr){
	
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     bc6:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     bca:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     bce:	88 e1       	ldi	r24, 0x18	; 24
     bd0:	80 93 c1 00 	sts	0x00C1, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C = (1 << 7)|(3<<UCSZ00);//here, 7 replaces URSEL0 from ATmega162 project
     bd4:	86 e8       	ldi	r24, 0x86	; 134
     bd6:	80 93 c2 00 	sts	0x00C2, r24
	
	fdevopen(uart_Transmit, uart_Receive);
     bda:	6b ed       	ldi	r22, 0xDB	; 219
     bdc:	75 e0       	ldi	r23, 0x05	; 5
     bde:	83 ed       	ldi	r24, 0xD3	; 211
     be0:	95 e0       	ldi	r25, 0x05	; 5
     be2:	92 c7       	rjmp	.+3876   	; 0x1b08 <fdevopen>
     be4:	08 95       	ret

00000be6 <__subsf3>:
     be6:	50 58       	subi	r21, 0x80	; 128

00000be8 <__addsf3>:
     be8:	bb 27       	eor	r27, r27
     bea:	aa 27       	eor	r26, r26
     bec:	0e d0       	rcall	.+28     	; 0xc0a <__addsf3x>
     bee:	4d c1       	rjmp	.+666    	; 0xe8a <__fp_round>
     bf0:	3e d1       	rcall	.+636    	; 0xe6e <__fp_pscA>
     bf2:	30 f0       	brcs	.+12     	; 0xc00 <__addsf3+0x18>
     bf4:	43 d1       	rcall	.+646    	; 0xe7c <__fp_pscB>
     bf6:	20 f0       	brcs	.+8      	; 0xc00 <__addsf3+0x18>
     bf8:	31 f4       	brne	.+12     	; 0xc06 <__addsf3+0x1e>
     bfa:	9f 3f       	cpi	r25, 0xFF	; 255
     bfc:	11 f4       	brne	.+4      	; 0xc02 <__addsf3+0x1a>
     bfe:	1e f4       	brtc	.+6      	; 0xc06 <__addsf3+0x1e>
     c00:	33 c1       	rjmp	.+614    	; 0xe68 <__fp_nan>
     c02:	0e f4       	brtc	.+2      	; 0xc06 <__addsf3+0x1e>
     c04:	e0 95       	com	r30
     c06:	e7 fb       	bst	r30, 7
     c08:	29 c1       	rjmp	.+594    	; 0xe5c <__fp_inf>

00000c0a <__addsf3x>:
     c0a:	e9 2f       	mov	r30, r25
     c0c:	4f d1       	rcall	.+670    	; 0xeac <__fp_split3>
     c0e:	80 f3       	brcs	.-32     	; 0xbf0 <__addsf3+0x8>
     c10:	ba 17       	cp	r27, r26
     c12:	62 07       	cpc	r22, r18
     c14:	73 07       	cpc	r23, r19
     c16:	84 07       	cpc	r24, r20
     c18:	95 07       	cpc	r25, r21
     c1a:	18 f0       	brcs	.+6      	; 0xc22 <__addsf3x+0x18>
     c1c:	71 f4       	brne	.+28     	; 0xc3a <__addsf3x+0x30>
     c1e:	9e f5       	brtc	.+102    	; 0xc86 <__addsf3x+0x7c>
     c20:	67 c1       	rjmp	.+718    	; 0xef0 <__fp_zero>
     c22:	0e f4       	brtc	.+2      	; 0xc26 <__addsf3x+0x1c>
     c24:	e0 95       	com	r30
     c26:	0b 2e       	mov	r0, r27
     c28:	ba 2f       	mov	r27, r26
     c2a:	a0 2d       	mov	r26, r0
     c2c:	0b 01       	movw	r0, r22
     c2e:	b9 01       	movw	r22, r18
     c30:	90 01       	movw	r18, r0
     c32:	0c 01       	movw	r0, r24
     c34:	ca 01       	movw	r24, r20
     c36:	a0 01       	movw	r20, r0
     c38:	11 24       	eor	r1, r1
     c3a:	ff 27       	eor	r31, r31
     c3c:	59 1b       	sub	r21, r25
     c3e:	99 f0       	breq	.+38     	; 0xc66 <__addsf3x+0x5c>
     c40:	59 3f       	cpi	r21, 0xF9	; 249
     c42:	50 f4       	brcc	.+20     	; 0xc58 <__addsf3x+0x4e>
     c44:	50 3e       	cpi	r21, 0xE0	; 224
     c46:	68 f1       	brcs	.+90     	; 0xca2 <__addsf3x+0x98>
     c48:	1a 16       	cp	r1, r26
     c4a:	f0 40       	sbci	r31, 0x00	; 0
     c4c:	a2 2f       	mov	r26, r18
     c4e:	23 2f       	mov	r18, r19
     c50:	34 2f       	mov	r19, r20
     c52:	44 27       	eor	r20, r20
     c54:	58 5f       	subi	r21, 0xF8	; 248
     c56:	f3 cf       	rjmp	.-26     	; 0xc3e <__addsf3x+0x34>
     c58:	46 95       	lsr	r20
     c5a:	37 95       	ror	r19
     c5c:	27 95       	ror	r18
     c5e:	a7 95       	ror	r26
     c60:	f0 40       	sbci	r31, 0x00	; 0
     c62:	53 95       	inc	r21
     c64:	c9 f7       	brne	.-14     	; 0xc58 <__addsf3x+0x4e>
     c66:	7e f4       	brtc	.+30     	; 0xc86 <__addsf3x+0x7c>
     c68:	1f 16       	cp	r1, r31
     c6a:	ba 0b       	sbc	r27, r26
     c6c:	62 0b       	sbc	r22, r18
     c6e:	73 0b       	sbc	r23, r19
     c70:	84 0b       	sbc	r24, r20
     c72:	ba f0       	brmi	.+46     	; 0xca2 <__addsf3x+0x98>
     c74:	91 50       	subi	r25, 0x01	; 1
     c76:	a1 f0       	breq	.+40     	; 0xca0 <__addsf3x+0x96>
     c78:	ff 0f       	add	r31, r31
     c7a:	bb 1f       	adc	r27, r27
     c7c:	66 1f       	adc	r22, r22
     c7e:	77 1f       	adc	r23, r23
     c80:	88 1f       	adc	r24, r24
     c82:	c2 f7       	brpl	.-16     	; 0xc74 <__addsf3x+0x6a>
     c84:	0e c0       	rjmp	.+28     	; 0xca2 <__addsf3x+0x98>
     c86:	ba 0f       	add	r27, r26
     c88:	62 1f       	adc	r22, r18
     c8a:	73 1f       	adc	r23, r19
     c8c:	84 1f       	adc	r24, r20
     c8e:	48 f4       	brcc	.+18     	; 0xca2 <__addsf3x+0x98>
     c90:	87 95       	ror	r24
     c92:	77 95       	ror	r23
     c94:	67 95       	ror	r22
     c96:	b7 95       	ror	r27
     c98:	f7 95       	ror	r31
     c9a:	9e 3f       	cpi	r25, 0xFE	; 254
     c9c:	08 f0       	brcs	.+2      	; 0xca0 <__addsf3x+0x96>
     c9e:	b3 cf       	rjmp	.-154    	; 0xc06 <__addsf3+0x1e>
     ca0:	93 95       	inc	r25
     ca2:	88 0f       	add	r24, r24
     ca4:	08 f0       	brcs	.+2      	; 0xca8 <__addsf3x+0x9e>
     ca6:	99 27       	eor	r25, r25
     ca8:	ee 0f       	add	r30, r30
     caa:	97 95       	ror	r25
     cac:	87 95       	ror	r24
     cae:	08 95       	ret

00000cb0 <__divsf3>:
     cb0:	0c d0       	rcall	.+24     	; 0xcca <__divsf3x>
     cb2:	eb c0       	rjmp	.+470    	; 0xe8a <__fp_round>
     cb4:	e3 d0       	rcall	.+454    	; 0xe7c <__fp_pscB>
     cb6:	40 f0       	brcs	.+16     	; 0xcc8 <__divsf3+0x18>
     cb8:	da d0       	rcall	.+436    	; 0xe6e <__fp_pscA>
     cba:	30 f0       	brcs	.+12     	; 0xcc8 <__divsf3+0x18>
     cbc:	21 f4       	brne	.+8      	; 0xcc6 <__divsf3+0x16>
     cbe:	5f 3f       	cpi	r21, 0xFF	; 255
     cc0:	19 f0       	breq	.+6      	; 0xcc8 <__divsf3+0x18>
     cc2:	cc c0       	rjmp	.+408    	; 0xe5c <__fp_inf>
     cc4:	51 11       	cpse	r21, r1
     cc6:	15 c1       	rjmp	.+554    	; 0xef2 <__fp_szero>
     cc8:	cf c0       	rjmp	.+414    	; 0xe68 <__fp_nan>

00000cca <__divsf3x>:
     cca:	f0 d0       	rcall	.+480    	; 0xeac <__fp_split3>
     ccc:	98 f3       	brcs	.-26     	; 0xcb4 <__divsf3+0x4>

00000cce <__divsf3_pse>:
     cce:	99 23       	and	r25, r25
     cd0:	c9 f3       	breq	.-14     	; 0xcc4 <__divsf3+0x14>
     cd2:	55 23       	and	r21, r21
     cd4:	b1 f3       	breq	.-20     	; 0xcc2 <__divsf3+0x12>
     cd6:	95 1b       	sub	r25, r21
     cd8:	55 0b       	sbc	r21, r21
     cda:	bb 27       	eor	r27, r27
     cdc:	aa 27       	eor	r26, r26
     cde:	62 17       	cp	r22, r18
     ce0:	73 07       	cpc	r23, r19
     ce2:	84 07       	cpc	r24, r20
     ce4:	38 f0       	brcs	.+14     	; 0xcf4 <__divsf3_pse+0x26>
     ce6:	9f 5f       	subi	r25, 0xFF	; 255
     ce8:	5f 4f       	sbci	r21, 0xFF	; 255
     cea:	22 0f       	add	r18, r18
     cec:	33 1f       	adc	r19, r19
     cee:	44 1f       	adc	r20, r20
     cf0:	aa 1f       	adc	r26, r26
     cf2:	a9 f3       	breq	.-22     	; 0xcde <__divsf3_pse+0x10>
     cf4:	33 d0       	rcall	.+102    	; 0xd5c <__divsf3_pse+0x8e>
     cf6:	0e 2e       	mov	r0, r30
     cf8:	3a f0       	brmi	.+14     	; 0xd08 <__divsf3_pse+0x3a>
     cfa:	e0 e8       	ldi	r30, 0x80	; 128
     cfc:	30 d0       	rcall	.+96     	; 0xd5e <__divsf3_pse+0x90>
     cfe:	91 50       	subi	r25, 0x01	; 1
     d00:	50 40       	sbci	r21, 0x00	; 0
     d02:	e6 95       	lsr	r30
     d04:	00 1c       	adc	r0, r0
     d06:	ca f7       	brpl	.-14     	; 0xcfa <__divsf3_pse+0x2c>
     d08:	29 d0       	rcall	.+82     	; 0xd5c <__divsf3_pse+0x8e>
     d0a:	fe 2f       	mov	r31, r30
     d0c:	27 d0       	rcall	.+78     	; 0xd5c <__divsf3_pse+0x8e>
     d0e:	66 0f       	add	r22, r22
     d10:	77 1f       	adc	r23, r23
     d12:	88 1f       	adc	r24, r24
     d14:	bb 1f       	adc	r27, r27
     d16:	26 17       	cp	r18, r22
     d18:	37 07       	cpc	r19, r23
     d1a:	48 07       	cpc	r20, r24
     d1c:	ab 07       	cpc	r26, r27
     d1e:	b0 e8       	ldi	r27, 0x80	; 128
     d20:	09 f0       	breq	.+2      	; 0xd24 <__divsf3_pse+0x56>
     d22:	bb 0b       	sbc	r27, r27
     d24:	80 2d       	mov	r24, r0
     d26:	bf 01       	movw	r22, r30
     d28:	ff 27       	eor	r31, r31
     d2a:	93 58       	subi	r25, 0x83	; 131
     d2c:	5f 4f       	sbci	r21, 0xFF	; 255
     d2e:	2a f0       	brmi	.+10     	; 0xd3a <__divsf3_pse+0x6c>
     d30:	9e 3f       	cpi	r25, 0xFE	; 254
     d32:	51 05       	cpc	r21, r1
     d34:	68 f0       	brcs	.+26     	; 0xd50 <__divsf3_pse+0x82>
     d36:	92 c0       	rjmp	.+292    	; 0xe5c <__fp_inf>
     d38:	dc c0       	rjmp	.+440    	; 0xef2 <__fp_szero>
     d3a:	5f 3f       	cpi	r21, 0xFF	; 255
     d3c:	ec f3       	brlt	.-6      	; 0xd38 <__divsf3_pse+0x6a>
     d3e:	98 3e       	cpi	r25, 0xE8	; 232
     d40:	dc f3       	brlt	.-10     	; 0xd38 <__divsf3_pse+0x6a>
     d42:	86 95       	lsr	r24
     d44:	77 95       	ror	r23
     d46:	67 95       	ror	r22
     d48:	b7 95       	ror	r27
     d4a:	f7 95       	ror	r31
     d4c:	9f 5f       	subi	r25, 0xFF	; 255
     d4e:	c9 f7       	brne	.-14     	; 0xd42 <__divsf3_pse+0x74>
     d50:	88 0f       	add	r24, r24
     d52:	91 1d       	adc	r25, r1
     d54:	96 95       	lsr	r25
     d56:	87 95       	ror	r24
     d58:	97 f9       	bld	r25, 7
     d5a:	08 95       	ret
     d5c:	e1 e0       	ldi	r30, 0x01	; 1
     d5e:	66 0f       	add	r22, r22
     d60:	77 1f       	adc	r23, r23
     d62:	88 1f       	adc	r24, r24
     d64:	bb 1f       	adc	r27, r27
     d66:	62 17       	cp	r22, r18
     d68:	73 07       	cpc	r23, r19
     d6a:	84 07       	cpc	r24, r20
     d6c:	ba 07       	cpc	r27, r26
     d6e:	20 f0       	brcs	.+8      	; 0xd78 <__divsf3_pse+0xaa>
     d70:	62 1b       	sub	r22, r18
     d72:	73 0b       	sbc	r23, r19
     d74:	84 0b       	sbc	r24, r20
     d76:	ba 0b       	sbc	r27, r26
     d78:	ee 1f       	adc	r30, r30
     d7a:	88 f7       	brcc	.-30     	; 0xd5e <__divsf3_pse+0x90>
     d7c:	e0 95       	com	r30
     d7e:	08 95       	ret

00000d80 <__fixsfsi>:
     d80:	04 d0       	rcall	.+8      	; 0xd8a <__fixunssfsi>
     d82:	68 94       	set
     d84:	b1 11       	cpse	r27, r1
     d86:	b5 c0       	rjmp	.+362    	; 0xef2 <__fp_szero>
     d88:	08 95       	ret

00000d8a <__fixunssfsi>:
     d8a:	98 d0       	rcall	.+304    	; 0xebc <__fp_splitA>
     d8c:	88 f0       	brcs	.+34     	; 0xdb0 <__fixunssfsi+0x26>
     d8e:	9f 57       	subi	r25, 0x7F	; 127
     d90:	90 f0       	brcs	.+36     	; 0xdb6 <__fixunssfsi+0x2c>
     d92:	b9 2f       	mov	r27, r25
     d94:	99 27       	eor	r25, r25
     d96:	b7 51       	subi	r27, 0x17	; 23
     d98:	a0 f0       	brcs	.+40     	; 0xdc2 <__fixunssfsi+0x38>
     d9a:	d1 f0       	breq	.+52     	; 0xdd0 <__fixunssfsi+0x46>
     d9c:	66 0f       	add	r22, r22
     d9e:	77 1f       	adc	r23, r23
     da0:	88 1f       	adc	r24, r24
     da2:	99 1f       	adc	r25, r25
     da4:	1a f0       	brmi	.+6      	; 0xdac <__fixunssfsi+0x22>
     da6:	ba 95       	dec	r27
     da8:	c9 f7       	brne	.-14     	; 0xd9c <__fixunssfsi+0x12>
     daa:	12 c0       	rjmp	.+36     	; 0xdd0 <__fixunssfsi+0x46>
     dac:	b1 30       	cpi	r27, 0x01	; 1
     dae:	81 f0       	breq	.+32     	; 0xdd0 <__fixunssfsi+0x46>
     db0:	9f d0       	rcall	.+318    	; 0xef0 <__fp_zero>
     db2:	b1 e0       	ldi	r27, 0x01	; 1
     db4:	08 95       	ret
     db6:	9c c0       	rjmp	.+312    	; 0xef0 <__fp_zero>
     db8:	67 2f       	mov	r22, r23
     dba:	78 2f       	mov	r23, r24
     dbc:	88 27       	eor	r24, r24
     dbe:	b8 5f       	subi	r27, 0xF8	; 248
     dc0:	39 f0       	breq	.+14     	; 0xdd0 <__fixunssfsi+0x46>
     dc2:	b9 3f       	cpi	r27, 0xF9	; 249
     dc4:	cc f3       	brlt	.-14     	; 0xdb8 <__fixunssfsi+0x2e>
     dc6:	86 95       	lsr	r24
     dc8:	77 95       	ror	r23
     dca:	67 95       	ror	r22
     dcc:	b3 95       	inc	r27
     dce:	d9 f7       	brne	.-10     	; 0xdc6 <__fixunssfsi+0x3c>
     dd0:	3e f4       	brtc	.+14     	; 0xde0 <__fixunssfsi+0x56>
     dd2:	90 95       	com	r25
     dd4:	80 95       	com	r24
     dd6:	70 95       	com	r23
     dd8:	61 95       	neg	r22
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	8f 4f       	sbci	r24, 0xFF	; 255
     dde:	9f 4f       	sbci	r25, 0xFF	; 255
     de0:	08 95       	ret

00000de2 <__floatunsisf>:
     de2:	e8 94       	clt
     de4:	09 c0       	rjmp	.+18     	; 0xdf8 <__floatsisf+0x12>

00000de6 <__floatsisf>:
     de6:	97 fb       	bst	r25, 7
     de8:	3e f4       	brtc	.+14     	; 0xdf8 <__floatsisf+0x12>
     dea:	90 95       	com	r25
     dec:	80 95       	com	r24
     dee:	70 95       	com	r23
     df0:	61 95       	neg	r22
     df2:	7f 4f       	sbci	r23, 0xFF	; 255
     df4:	8f 4f       	sbci	r24, 0xFF	; 255
     df6:	9f 4f       	sbci	r25, 0xFF	; 255
     df8:	99 23       	and	r25, r25
     dfa:	a9 f0       	breq	.+42     	; 0xe26 <__floatsisf+0x40>
     dfc:	f9 2f       	mov	r31, r25
     dfe:	96 e9       	ldi	r25, 0x96	; 150
     e00:	bb 27       	eor	r27, r27
     e02:	93 95       	inc	r25
     e04:	f6 95       	lsr	r31
     e06:	87 95       	ror	r24
     e08:	77 95       	ror	r23
     e0a:	67 95       	ror	r22
     e0c:	b7 95       	ror	r27
     e0e:	f1 11       	cpse	r31, r1
     e10:	f8 cf       	rjmp	.-16     	; 0xe02 <__floatsisf+0x1c>
     e12:	fa f4       	brpl	.+62     	; 0xe52 <__floatsisf+0x6c>
     e14:	bb 0f       	add	r27, r27
     e16:	11 f4       	brne	.+4      	; 0xe1c <__floatsisf+0x36>
     e18:	60 ff       	sbrs	r22, 0
     e1a:	1b c0       	rjmp	.+54     	; 0xe52 <__floatsisf+0x6c>
     e1c:	6f 5f       	subi	r22, 0xFF	; 255
     e1e:	7f 4f       	sbci	r23, 0xFF	; 255
     e20:	8f 4f       	sbci	r24, 0xFF	; 255
     e22:	9f 4f       	sbci	r25, 0xFF	; 255
     e24:	16 c0       	rjmp	.+44     	; 0xe52 <__floatsisf+0x6c>
     e26:	88 23       	and	r24, r24
     e28:	11 f0       	breq	.+4      	; 0xe2e <__floatsisf+0x48>
     e2a:	96 e9       	ldi	r25, 0x96	; 150
     e2c:	11 c0       	rjmp	.+34     	; 0xe50 <__floatsisf+0x6a>
     e2e:	77 23       	and	r23, r23
     e30:	21 f0       	breq	.+8      	; 0xe3a <__floatsisf+0x54>
     e32:	9e e8       	ldi	r25, 0x8E	; 142
     e34:	87 2f       	mov	r24, r23
     e36:	76 2f       	mov	r23, r22
     e38:	05 c0       	rjmp	.+10     	; 0xe44 <__floatsisf+0x5e>
     e3a:	66 23       	and	r22, r22
     e3c:	71 f0       	breq	.+28     	; 0xe5a <__floatsisf+0x74>
     e3e:	96 e8       	ldi	r25, 0x86	; 134
     e40:	86 2f       	mov	r24, r22
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	60 e0       	ldi	r22, 0x00	; 0
     e46:	2a f0       	brmi	.+10     	; 0xe52 <__floatsisf+0x6c>
     e48:	9a 95       	dec	r25
     e4a:	66 0f       	add	r22, r22
     e4c:	77 1f       	adc	r23, r23
     e4e:	88 1f       	adc	r24, r24
     e50:	da f7       	brpl	.-10     	; 0xe48 <__floatsisf+0x62>
     e52:	88 0f       	add	r24, r24
     e54:	96 95       	lsr	r25
     e56:	87 95       	ror	r24
     e58:	97 f9       	bld	r25, 7
     e5a:	08 95       	ret

00000e5c <__fp_inf>:
     e5c:	97 f9       	bld	r25, 7
     e5e:	9f 67       	ori	r25, 0x7F	; 127
     e60:	80 e8       	ldi	r24, 0x80	; 128
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	60 e0       	ldi	r22, 0x00	; 0
     e66:	08 95       	ret

00000e68 <__fp_nan>:
     e68:	9f ef       	ldi	r25, 0xFF	; 255
     e6a:	80 ec       	ldi	r24, 0xC0	; 192
     e6c:	08 95       	ret

00000e6e <__fp_pscA>:
     e6e:	00 24       	eor	r0, r0
     e70:	0a 94       	dec	r0
     e72:	16 16       	cp	r1, r22
     e74:	17 06       	cpc	r1, r23
     e76:	18 06       	cpc	r1, r24
     e78:	09 06       	cpc	r0, r25
     e7a:	08 95       	ret

00000e7c <__fp_pscB>:
     e7c:	00 24       	eor	r0, r0
     e7e:	0a 94       	dec	r0
     e80:	12 16       	cp	r1, r18
     e82:	13 06       	cpc	r1, r19
     e84:	14 06       	cpc	r1, r20
     e86:	05 06       	cpc	r0, r21
     e88:	08 95       	ret

00000e8a <__fp_round>:
     e8a:	09 2e       	mov	r0, r25
     e8c:	03 94       	inc	r0
     e8e:	00 0c       	add	r0, r0
     e90:	11 f4       	brne	.+4      	; 0xe96 <__fp_round+0xc>
     e92:	88 23       	and	r24, r24
     e94:	52 f0       	brmi	.+20     	; 0xeaa <__fp_round+0x20>
     e96:	bb 0f       	add	r27, r27
     e98:	40 f4       	brcc	.+16     	; 0xeaa <__fp_round+0x20>
     e9a:	bf 2b       	or	r27, r31
     e9c:	11 f4       	brne	.+4      	; 0xea2 <__fp_round+0x18>
     e9e:	60 ff       	sbrs	r22, 0
     ea0:	04 c0       	rjmp	.+8      	; 0xeaa <__fp_round+0x20>
     ea2:	6f 5f       	subi	r22, 0xFF	; 255
     ea4:	7f 4f       	sbci	r23, 0xFF	; 255
     ea6:	8f 4f       	sbci	r24, 0xFF	; 255
     ea8:	9f 4f       	sbci	r25, 0xFF	; 255
     eaa:	08 95       	ret

00000eac <__fp_split3>:
     eac:	57 fd       	sbrc	r21, 7
     eae:	90 58       	subi	r25, 0x80	; 128
     eb0:	44 0f       	add	r20, r20
     eb2:	55 1f       	adc	r21, r21
     eb4:	59 f0       	breq	.+22     	; 0xecc <__fp_splitA+0x10>
     eb6:	5f 3f       	cpi	r21, 0xFF	; 255
     eb8:	71 f0       	breq	.+28     	; 0xed6 <__fp_splitA+0x1a>
     eba:	47 95       	ror	r20

00000ebc <__fp_splitA>:
     ebc:	88 0f       	add	r24, r24
     ebe:	97 fb       	bst	r25, 7
     ec0:	99 1f       	adc	r25, r25
     ec2:	61 f0       	breq	.+24     	; 0xedc <__fp_splitA+0x20>
     ec4:	9f 3f       	cpi	r25, 0xFF	; 255
     ec6:	79 f0       	breq	.+30     	; 0xee6 <__fp_splitA+0x2a>
     ec8:	87 95       	ror	r24
     eca:	08 95       	ret
     ecc:	12 16       	cp	r1, r18
     ece:	13 06       	cpc	r1, r19
     ed0:	14 06       	cpc	r1, r20
     ed2:	55 1f       	adc	r21, r21
     ed4:	f2 cf       	rjmp	.-28     	; 0xeba <__fp_split3+0xe>
     ed6:	46 95       	lsr	r20
     ed8:	f1 df       	rcall	.-30     	; 0xebc <__fp_splitA>
     eda:	08 c0       	rjmp	.+16     	; 0xeec <__fp_splitA+0x30>
     edc:	16 16       	cp	r1, r22
     ede:	17 06       	cpc	r1, r23
     ee0:	18 06       	cpc	r1, r24
     ee2:	99 1f       	adc	r25, r25
     ee4:	f1 cf       	rjmp	.-30     	; 0xec8 <__fp_splitA+0xc>
     ee6:	86 95       	lsr	r24
     ee8:	71 05       	cpc	r23, r1
     eea:	61 05       	cpc	r22, r1
     eec:	08 94       	sec
     eee:	08 95       	ret

00000ef0 <__fp_zero>:
     ef0:	e8 94       	clt

00000ef2 <__fp_szero>:
     ef2:	bb 27       	eor	r27, r27
     ef4:	66 27       	eor	r22, r22
     ef6:	77 27       	eor	r23, r23
     ef8:	cb 01       	movw	r24, r22
     efa:	97 f9       	bld	r25, 7
     efc:	08 95       	ret

00000efe <__mulsf3>:
     efe:	0b d0       	rcall	.+22     	; 0xf16 <__mulsf3x>
     f00:	c4 cf       	rjmp	.-120    	; 0xe8a <__fp_round>
     f02:	b5 df       	rcall	.-150    	; 0xe6e <__fp_pscA>
     f04:	28 f0       	brcs	.+10     	; 0xf10 <__mulsf3+0x12>
     f06:	ba df       	rcall	.-140    	; 0xe7c <__fp_pscB>
     f08:	18 f0       	brcs	.+6      	; 0xf10 <__mulsf3+0x12>
     f0a:	95 23       	and	r25, r21
     f0c:	09 f0       	breq	.+2      	; 0xf10 <__mulsf3+0x12>
     f0e:	a6 cf       	rjmp	.-180    	; 0xe5c <__fp_inf>
     f10:	ab cf       	rjmp	.-170    	; 0xe68 <__fp_nan>
     f12:	11 24       	eor	r1, r1
     f14:	ee cf       	rjmp	.-36     	; 0xef2 <__fp_szero>

00000f16 <__mulsf3x>:
     f16:	ca df       	rcall	.-108    	; 0xeac <__fp_split3>
     f18:	a0 f3       	brcs	.-24     	; 0xf02 <__mulsf3+0x4>

00000f1a <__mulsf3_pse>:
     f1a:	95 9f       	mul	r25, r21
     f1c:	d1 f3       	breq	.-12     	; 0xf12 <__mulsf3+0x14>
     f1e:	95 0f       	add	r25, r21
     f20:	50 e0       	ldi	r21, 0x00	; 0
     f22:	55 1f       	adc	r21, r21
     f24:	62 9f       	mul	r22, r18
     f26:	f0 01       	movw	r30, r0
     f28:	72 9f       	mul	r23, r18
     f2a:	bb 27       	eor	r27, r27
     f2c:	f0 0d       	add	r31, r0
     f2e:	b1 1d       	adc	r27, r1
     f30:	63 9f       	mul	r22, r19
     f32:	aa 27       	eor	r26, r26
     f34:	f0 0d       	add	r31, r0
     f36:	b1 1d       	adc	r27, r1
     f38:	aa 1f       	adc	r26, r26
     f3a:	64 9f       	mul	r22, r20
     f3c:	66 27       	eor	r22, r22
     f3e:	b0 0d       	add	r27, r0
     f40:	a1 1d       	adc	r26, r1
     f42:	66 1f       	adc	r22, r22
     f44:	82 9f       	mul	r24, r18
     f46:	22 27       	eor	r18, r18
     f48:	b0 0d       	add	r27, r0
     f4a:	a1 1d       	adc	r26, r1
     f4c:	62 1f       	adc	r22, r18
     f4e:	73 9f       	mul	r23, r19
     f50:	b0 0d       	add	r27, r0
     f52:	a1 1d       	adc	r26, r1
     f54:	62 1f       	adc	r22, r18
     f56:	83 9f       	mul	r24, r19
     f58:	a0 0d       	add	r26, r0
     f5a:	61 1d       	adc	r22, r1
     f5c:	22 1f       	adc	r18, r18
     f5e:	74 9f       	mul	r23, r20
     f60:	33 27       	eor	r19, r19
     f62:	a0 0d       	add	r26, r0
     f64:	61 1d       	adc	r22, r1
     f66:	23 1f       	adc	r18, r19
     f68:	84 9f       	mul	r24, r20
     f6a:	60 0d       	add	r22, r0
     f6c:	21 1d       	adc	r18, r1
     f6e:	82 2f       	mov	r24, r18
     f70:	76 2f       	mov	r23, r22
     f72:	6a 2f       	mov	r22, r26
     f74:	11 24       	eor	r1, r1
     f76:	9f 57       	subi	r25, 0x7F	; 127
     f78:	50 40       	sbci	r21, 0x00	; 0
     f7a:	8a f0       	brmi	.+34     	; 0xf9e <__mulsf3_pse+0x84>
     f7c:	e1 f0       	breq	.+56     	; 0xfb6 <__mulsf3_pse+0x9c>
     f7e:	88 23       	and	r24, r24
     f80:	4a f0       	brmi	.+18     	; 0xf94 <__mulsf3_pse+0x7a>
     f82:	ee 0f       	add	r30, r30
     f84:	ff 1f       	adc	r31, r31
     f86:	bb 1f       	adc	r27, r27
     f88:	66 1f       	adc	r22, r22
     f8a:	77 1f       	adc	r23, r23
     f8c:	88 1f       	adc	r24, r24
     f8e:	91 50       	subi	r25, 0x01	; 1
     f90:	50 40       	sbci	r21, 0x00	; 0
     f92:	a9 f7       	brne	.-22     	; 0xf7e <__mulsf3_pse+0x64>
     f94:	9e 3f       	cpi	r25, 0xFE	; 254
     f96:	51 05       	cpc	r21, r1
     f98:	70 f0       	brcs	.+28     	; 0xfb6 <__mulsf3_pse+0x9c>
     f9a:	60 cf       	rjmp	.-320    	; 0xe5c <__fp_inf>
     f9c:	aa cf       	rjmp	.-172    	; 0xef2 <__fp_szero>
     f9e:	5f 3f       	cpi	r21, 0xFF	; 255
     fa0:	ec f3       	brlt	.-6      	; 0xf9c <__mulsf3_pse+0x82>
     fa2:	98 3e       	cpi	r25, 0xE8	; 232
     fa4:	dc f3       	brlt	.-10     	; 0xf9c <__mulsf3_pse+0x82>
     fa6:	86 95       	lsr	r24
     fa8:	77 95       	ror	r23
     faa:	67 95       	ror	r22
     fac:	b7 95       	ror	r27
     fae:	f7 95       	ror	r31
     fb0:	e7 95       	ror	r30
     fb2:	9f 5f       	subi	r25, 0xFF	; 255
     fb4:	c1 f7       	brne	.-16     	; 0xfa6 <__mulsf3_pse+0x8c>
     fb6:	fe 2b       	or	r31, r30
     fb8:	88 0f       	add	r24, r24
     fba:	91 1d       	adc	r25, r1
     fbc:	96 95       	lsr	r25
     fbe:	87 95       	ror	r24
     fc0:	97 f9       	bld	r25, 7
     fc2:	08 95       	ret

00000fc4 <vfprintf>:
     fc4:	2f 92       	push	r2
     fc6:	3f 92       	push	r3
     fc8:	4f 92       	push	r4
     fca:	5f 92       	push	r5
     fcc:	6f 92       	push	r6
     fce:	7f 92       	push	r7
     fd0:	8f 92       	push	r8
     fd2:	9f 92       	push	r9
     fd4:	af 92       	push	r10
     fd6:	bf 92       	push	r11
     fd8:	cf 92       	push	r12
     fda:	df 92       	push	r13
     fdc:	ef 92       	push	r14
     fde:	ff 92       	push	r15
     fe0:	0f 93       	push	r16
     fe2:	1f 93       	push	r17
     fe4:	cf 93       	push	r28
     fe6:	df 93       	push	r29
     fe8:	cd b7       	in	r28, 0x3d	; 61
     fea:	de b7       	in	r29, 0x3e	; 62
     fec:	63 97       	sbiw	r28, 0x13	; 19
     fee:	0f b6       	in	r0, 0x3f	; 63
     ff0:	f8 94       	cli
     ff2:	de bf       	out	0x3e, r29	; 62
     ff4:	0f be       	out	0x3f, r0	; 63
     ff6:	cd bf       	out	0x3d, r28	; 61
     ff8:	7c 01       	movw	r14, r24
     ffa:	1b 01       	movw	r2, r22
     ffc:	6a 01       	movw	r12, r20
     ffe:	fc 01       	movw	r30, r24
    1000:	17 82       	std	Z+7, r1	; 0x07
    1002:	16 82       	std	Z+6, r1	; 0x06
    1004:	83 81       	ldd	r24, Z+3	; 0x03
    1006:	81 ff       	sbrs	r24, 1
    1008:	49 c3       	rjmp	.+1682   	; 0x169c <vfprintf+0x6d8>
    100a:	be 01       	movw	r22, r28
    100c:	6f 5f       	subi	r22, 0xFF	; 255
    100e:	7f 4f       	sbci	r23, 0xFF	; 255
    1010:	4b 01       	movw	r8, r22
    1012:	f7 01       	movw	r30, r14
    1014:	93 81       	ldd	r25, Z+3	; 0x03
    1016:	f1 01       	movw	r30, r2
    1018:	93 fd       	sbrc	r25, 3
    101a:	85 91       	lpm	r24, Z+
    101c:	93 ff       	sbrs	r25, 3
    101e:	81 91       	ld	r24, Z+
    1020:	1f 01       	movw	r2, r30
    1022:	88 23       	and	r24, r24
    1024:	09 f4       	brne	.+2      	; 0x1028 <vfprintf+0x64>
    1026:	36 c3       	rjmp	.+1644   	; 0x1694 <vfprintf+0x6d0>
    1028:	85 32       	cpi	r24, 0x25	; 37
    102a:	39 f4       	brne	.+14     	; 0x103a <vfprintf+0x76>
    102c:	93 fd       	sbrc	r25, 3
    102e:	85 91       	lpm	r24, Z+
    1030:	93 ff       	sbrs	r25, 3
    1032:	81 91       	ld	r24, Z+
    1034:	1f 01       	movw	r2, r30
    1036:	85 32       	cpi	r24, 0x25	; 37
    1038:	31 f4       	brne	.+12     	; 0x1046 <vfprintf+0x82>
    103a:	b7 01       	movw	r22, r14
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	ae d5       	rcall	.+2908   	; 0x1b9c <fputc>
    1040:	56 01       	movw	r10, r12
    1042:	65 01       	movw	r12, r10
    1044:	e6 cf       	rjmp	.-52     	; 0x1012 <vfprintf+0x4e>
    1046:	10 e0       	ldi	r17, 0x00	; 0
    1048:	51 2c       	mov	r5, r1
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	20 32       	cpi	r18, 0x20	; 32
    104e:	a0 f4       	brcc	.+40     	; 0x1078 <vfprintf+0xb4>
    1050:	8b 32       	cpi	r24, 0x2B	; 43
    1052:	69 f0       	breq	.+26     	; 0x106e <vfprintf+0xaa>
    1054:	30 f4       	brcc	.+12     	; 0x1062 <vfprintf+0x9e>
    1056:	80 32       	cpi	r24, 0x20	; 32
    1058:	59 f0       	breq	.+22     	; 0x1070 <vfprintf+0xac>
    105a:	83 32       	cpi	r24, 0x23	; 35
    105c:	69 f4       	brne	.+26     	; 0x1078 <vfprintf+0xb4>
    105e:	20 61       	ori	r18, 0x10	; 16
    1060:	2c c0       	rjmp	.+88     	; 0x10ba <vfprintf+0xf6>
    1062:	8d 32       	cpi	r24, 0x2D	; 45
    1064:	39 f0       	breq	.+14     	; 0x1074 <vfprintf+0xb0>
    1066:	80 33       	cpi	r24, 0x30	; 48
    1068:	39 f4       	brne	.+14     	; 0x1078 <vfprintf+0xb4>
    106a:	21 60       	ori	r18, 0x01	; 1
    106c:	26 c0       	rjmp	.+76     	; 0x10ba <vfprintf+0xf6>
    106e:	22 60       	ori	r18, 0x02	; 2
    1070:	24 60       	ori	r18, 0x04	; 4
    1072:	23 c0       	rjmp	.+70     	; 0x10ba <vfprintf+0xf6>
    1074:	28 60       	ori	r18, 0x08	; 8
    1076:	21 c0       	rjmp	.+66     	; 0x10ba <vfprintf+0xf6>
    1078:	27 fd       	sbrc	r18, 7
    107a:	27 c0       	rjmp	.+78     	; 0x10ca <vfprintf+0x106>
    107c:	30 ed       	ldi	r19, 0xD0	; 208
    107e:	38 0f       	add	r19, r24
    1080:	3a 30       	cpi	r19, 0x0A	; 10
    1082:	78 f4       	brcc	.+30     	; 0x10a2 <vfprintf+0xde>
    1084:	26 ff       	sbrs	r18, 6
    1086:	06 c0       	rjmp	.+12     	; 0x1094 <vfprintf+0xd0>
    1088:	fa e0       	ldi	r31, 0x0A	; 10
    108a:	1f 9f       	mul	r17, r31
    108c:	30 0d       	add	r19, r0
    108e:	11 24       	eor	r1, r1
    1090:	13 2f       	mov	r17, r19
    1092:	13 c0       	rjmp	.+38     	; 0x10ba <vfprintf+0xf6>
    1094:	6a e0       	ldi	r22, 0x0A	; 10
    1096:	56 9e       	mul	r5, r22
    1098:	30 0d       	add	r19, r0
    109a:	11 24       	eor	r1, r1
    109c:	53 2e       	mov	r5, r19
    109e:	20 62       	ori	r18, 0x20	; 32
    10a0:	0c c0       	rjmp	.+24     	; 0x10ba <vfprintf+0xf6>
    10a2:	8e 32       	cpi	r24, 0x2E	; 46
    10a4:	21 f4       	brne	.+8      	; 0x10ae <vfprintf+0xea>
    10a6:	26 fd       	sbrc	r18, 6
    10a8:	f5 c2       	rjmp	.+1514   	; 0x1694 <vfprintf+0x6d0>
    10aa:	20 64       	ori	r18, 0x40	; 64
    10ac:	06 c0       	rjmp	.+12     	; 0x10ba <vfprintf+0xf6>
    10ae:	8c 36       	cpi	r24, 0x6C	; 108
    10b0:	11 f4       	brne	.+4      	; 0x10b6 <vfprintf+0xf2>
    10b2:	20 68       	ori	r18, 0x80	; 128
    10b4:	02 c0       	rjmp	.+4      	; 0x10ba <vfprintf+0xf6>
    10b6:	88 36       	cpi	r24, 0x68	; 104
    10b8:	41 f4       	brne	.+16     	; 0x10ca <vfprintf+0x106>
    10ba:	f1 01       	movw	r30, r2
    10bc:	93 fd       	sbrc	r25, 3
    10be:	85 91       	lpm	r24, Z+
    10c0:	93 ff       	sbrs	r25, 3
    10c2:	81 91       	ld	r24, Z+
    10c4:	1f 01       	movw	r2, r30
    10c6:	81 11       	cpse	r24, r1
    10c8:	c1 cf       	rjmp	.-126    	; 0x104c <vfprintf+0x88>
    10ca:	9b eb       	ldi	r25, 0xBB	; 187
    10cc:	98 0f       	add	r25, r24
    10ce:	93 30       	cpi	r25, 0x03	; 3
    10d0:	18 f4       	brcc	.+6      	; 0x10d8 <vfprintf+0x114>
    10d2:	20 61       	ori	r18, 0x10	; 16
    10d4:	80 5e       	subi	r24, 0xE0	; 224
    10d6:	06 c0       	rjmp	.+12     	; 0x10e4 <vfprintf+0x120>
    10d8:	9b e9       	ldi	r25, 0x9B	; 155
    10da:	98 0f       	add	r25, r24
    10dc:	93 30       	cpi	r25, 0x03	; 3
    10de:	08 f0       	brcs	.+2      	; 0x10e2 <vfprintf+0x11e>
    10e0:	9a c1       	rjmp	.+820    	; 0x1416 <vfprintf+0x452>
    10e2:	2f 7e       	andi	r18, 0xEF	; 239
    10e4:	26 ff       	sbrs	r18, 6
    10e6:	16 e0       	ldi	r17, 0x06	; 6
    10e8:	2f 73       	andi	r18, 0x3F	; 63
    10ea:	72 2e       	mov	r7, r18
    10ec:	85 36       	cpi	r24, 0x65	; 101
    10ee:	21 f4       	brne	.+8      	; 0x10f8 <vfprintf+0x134>
    10f0:	f2 2f       	mov	r31, r18
    10f2:	f0 64       	ori	r31, 0x40	; 64
    10f4:	7f 2e       	mov	r7, r31
    10f6:	08 c0       	rjmp	.+16     	; 0x1108 <vfprintf+0x144>
    10f8:	86 36       	cpi	r24, 0x66	; 102
    10fa:	21 f4       	brne	.+8      	; 0x1104 <vfprintf+0x140>
    10fc:	62 2f       	mov	r22, r18
    10fe:	60 68       	ori	r22, 0x80	; 128
    1100:	76 2e       	mov	r7, r22
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <vfprintf+0x144>
    1104:	11 11       	cpse	r17, r1
    1106:	11 50       	subi	r17, 0x01	; 1
    1108:	77 fe       	sbrs	r7, 7
    110a:	07 c0       	rjmp	.+14     	; 0x111a <vfprintf+0x156>
    110c:	1c 33       	cpi	r17, 0x3C	; 60
    110e:	48 f4       	brcc	.+18     	; 0x1122 <vfprintf+0x15e>
    1110:	44 24       	eor	r4, r4
    1112:	43 94       	inc	r4
    1114:	41 0e       	add	r4, r17
    1116:	27 e0       	ldi	r18, 0x07	; 7
    1118:	0b c0       	rjmp	.+22     	; 0x1130 <vfprintf+0x16c>
    111a:	18 30       	cpi	r17, 0x08	; 8
    111c:	30 f4       	brcc	.+12     	; 0x112a <vfprintf+0x166>
    111e:	21 2f       	mov	r18, r17
    1120:	06 c0       	rjmp	.+12     	; 0x112e <vfprintf+0x16a>
    1122:	27 e0       	ldi	r18, 0x07	; 7
    1124:	4c e3       	ldi	r20, 0x3C	; 60
    1126:	44 2e       	mov	r4, r20
    1128:	03 c0       	rjmp	.+6      	; 0x1130 <vfprintf+0x16c>
    112a:	27 e0       	ldi	r18, 0x07	; 7
    112c:	17 e0       	ldi	r17, 0x07	; 7
    112e:	41 2c       	mov	r4, r1
    1130:	56 01       	movw	r10, r12
    1132:	74 e0       	ldi	r23, 0x04	; 4
    1134:	a7 0e       	add	r10, r23
    1136:	b1 1c       	adc	r11, r1
    1138:	f6 01       	movw	r30, r12
    113a:	60 81       	ld	r22, Z
    113c:	71 81       	ldd	r23, Z+1	; 0x01
    113e:	82 81       	ldd	r24, Z+2	; 0x02
    1140:	93 81       	ldd	r25, Z+3	; 0x03
    1142:	04 2d       	mov	r16, r4
    1144:	a4 01       	movw	r20, r8
    1146:	f2 d3       	rcall	.+2020   	; 0x192c <__ftoa_engine>
    1148:	6c 01       	movw	r12, r24
    114a:	09 81       	ldd	r16, Y+1	; 0x01
    114c:	00 ff       	sbrs	r16, 0
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <vfprintf+0x190>
    1150:	03 ff       	sbrs	r16, 3
    1152:	06 c0       	rjmp	.+12     	; 0x1160 <vfprintf+0x19c>
    1154:	71 fc       	sbrc	r7, 1
    1156:	07 c0       	rjmp	.+14     	; 0x1166 <vfprintf+0x1a2>
    1158:	72 fc       	sbrc	r7, 2
    115a:	08 c0       	rjmp	.+16     	; 0x116c <vfprintf+0x1a8>
    115c:	61 2c       	mov	r6, r1
    115e:	08 c0       	rjmp	.+16     	; 0x1170 <vfprintf+0x1ac>
    1160:	3d e2       	ldi	r19, 0x2D	; 45
    1162:	63 2e       	mov	r6, r19
    1164:	05 c0       	rjmp	.+10     	; 0x1170 <vfprintf+0x1ac>
    1166:	2b e2       	ldi	r18, 0x2B	; 43
    1168:	62 2e       	mov	r6, r18
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <vfprintf+0x1ac>
    116c:	90 e2       	ldi	r25, 0x20	; 32
    116e:	69 2e       	mov	r6, r25
    1170:	80 2f       	mov	r24, r16
    1172:	8c 70       	andi	r24, 0x0C	; 12
    1174:	81 f1       	breq	.+96     	; 0x11d6 <vfprintf+0x212>
    1176:	66 20       	and	r6, r6
    1178:	11 f0       	breq	.+4      	; 0x117e <vfprintf+0x1ba>
    117a:	84 e0       	ldi	r24, 0x04	; 4
    117c:	01 c0       	rjmp	.+2      	; 0x1180 <vfprintf+0x1bc>
    117e:	83 e0       	ldi	r24, 0x03	; 3
    1180:	85 15       	cp	r24, r5
    1182:	10 f0       	brcs	.+4      	; 0x1188 <vfprintf+0x1c4>
    1184:	51 2c       	mov	r5, r1
    1186:	0a c0       	rjmp	.+20     	; 0x119c <vfprintf+0x1d8>
    1188:	58 1a       	sub	r5, r24
    118a:	73 fc       	sbrc	r7, 3
    118c:	07 c0       	rjmp	.+14     	; 0x119c <vfprintf+0x1d8>
    118e:	b7 01       	movw	r22, r14
    1190:	80 e2       	ldi	r24, 0x20	; 32
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	03 d5       	rcall	.+2566   	; 0x1b9c <fputc>
    1196:	5a 94       	dec	r5
    1198:	d1 f7       	brne	.-12     	; 0x118e <vfprintf+0x1ca>
    119a:	f4 cf       	rjmp	.-24     	; 0x1184 <vfprintf+0x1c0>
    119c:	66 20       	and	r6, r6
    119e:	21 f0       	breq	.+8      	; 0x11a8 <vfprintf+0x1e4>
    11a0:	b7 01       	movw	r22, r14
    11a2:	86 2d       	mov	r24, r6
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	fa d4       	rcall	.+2548   	; 0x1b9c <fputc>
    11a8:	03 fd       	sbrc	r16, 3
    11aa:	03 c0       	rjmp	.+6      	; 0x11b2 <vfprintf+0x1ee>
    11ac:	0a e8       	ldi	r16, 0x8A	; 138
    11ae:	11 e0       	ldi	r17, 0x01	; 1
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <vfprintf+0x1f2>
    11b2:	06 e8       	ldi	r16, 0x86	; 134
    11b4:	11 e0       	ldi	r17, 0x01	; 1
    11b6:	f7 2d       	mov	r31, r7
    11b8:	f0 71       	andi	r31, 0x10	; 16
    11ba:	7f 2e       	mov	r7, r31
    11bc:	f8 01       	movw	r30, r16
    11be:	84 91       	lpm	r24, Z
    11c0:	88 23       	and	r24, r24
    11c2:	09 f4       	brne	.+2      	; 0x11c6 <vfprintf+0x202>
    11c4:	5e c2       	rjmp	.+1212   	; 0x1682 <vfprintf+0x6be>
    11c6:	71 10       	cpse	r7, r1
    11c8:	80 52       	subi	r24, 0x20	; 32
    11ca:	b7 01       	movw	r22, r14
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	e6 d4       	rcall	.+2508   	; 0x1b9c <fputc>
    11d0:	0f 5f       	subi	r16, 0xFF	; 255
    11d2:	1f 4f       	sbci	r17, 0xFF	; 255
    11d4:	f3 cf       	rjmp	.-26     	; 0x11bc <vfprintf+0x1f8>
    11d6:	77 fe       	sbrs	r7, 7
    11d8:	0f c0       	rjmp	.+30     	; 0x11f8 <vfprintf+0x234>
    11da:	4c 0c       	add	r4, r12
    11dc:	04 ff       	sbrs	r16, 4
    11de:	04 c0       	rjmp	.+8      	; 0x11e8 <vfprintf+0x224>
    11e0:	8a 81       	ldd	r24, Y+2	; 0x02
    11e2:	81 33       	cpi	r24, 0x31	; 49
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <vfprintf+0x224>
    11e6:	4a 94       	dec	r4
    11e8:	14 14       	cp	r1, r4
    11ea:	74 f5       	brge	.+92     	; 0x1248 <vfprintf+0x284>
    11ec:	f8 e0       	ldi	r31, 0x08	; 8
    11ee:	f4 15       	cp	r31, r4
    11f0:	78 f5       	brcc	.+94     	; 0x1250 <vfprintf+0x28c>
    11f2:	88 e0       	ldi	r24, 0x08	; 8
    11f4:	48 2e       	mov	r4, r24
    11f6:	2c c0       	rjmp	.+88     	; 0x1250 <vfprintf+0x28c>
    11f8:	76 fc       	sbrc	r7, 6
    11fa:	2a c0       	rjmp	.+84     	; 0x1250 <vfprintf+0x28c>
    11fc:	81 2f       	mov	r24, r17
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	8c 15       	cp	r24, r12
    1202:	9d 05       	cpc	r25, r13
    1204:	9c f0       	brlt	.+38     	; 0x122c <vfprintf+0x268>
    1206:	6c ef       	ldi	r22, 0xFC	; 252
    1208:	c6 16       	cp	r12, r22
    120a:	6f ef       	ldi	r22, 0xFF	; 255
    120c:	d6 06       	cpc	r13, r22
    120e:	74 f0       	brlt	.+28     	; 0x122c <vfprintf+0x268>
    1210:	77 2d       	mov	r23, r7
    1212:	70 68       	ori	r23, 0x80	; 128
    1214:	77 2e       	mov	r7, r23
    1216:	0a c0       	rjmp	.+20     	; 0x122c <vfprintf+0x268>
    1218:	e2 e0       	ldi	r30, 0x02	; 2
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	ec 0f       	add	r30, r28
    121e:	fd 1f       	adc	r31, r29
    1220:	e1 0f       	add	r30, r17
    1222:	f1 1d       	adc	r31, r1
    1224:	80 81       	ld	r24, Z
    1226:	80 33       	cpi	r24, 0x30	; 48
    1228:	19 f4       	brne	.+6      	; 0x1230 <vfprintf+0x26c>
    122a:	11 50       	subi	r17, 0x01	; 1
    122c:	11 11       	cpse	r17, r1
    122e:	f4 cf       	rjmp	.-24     	; 0x1218 <vfprintf+0x254>
    1230:	77 fe       	sbrs	r7, 7
    1232:	0e c0       	rjmp	.+28     	; 0x1250 <vfprintf+0x28c>
    1234:	44 24       	eor	r4, r4
    1236:	43 94       	inc	r4
    1238:	41 0e       	add	r4, r17
    123a:	81 2f       	mov	r24, r17
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	c8 16       	cp	r12, r24
    1240:	d9 06       	cpc	r13, r25
    1242:	2c f4       	brge	.+10     	; 0x124e <vfprintf+0x28a>
    1244:	1c 19       	sub	r17, r12
    1246:	04 c0       	rjmp	.+8      	; 0x1250 <vfprintf+0x28c>
    1248:	44 24       	eor	r4, r4
    124a:	43 94       	inc	r4
    124c:	01 c0       	rjmp	.+2      	; 0x1250 <vfprintf+0x28c>
    124e:	10 e0       	ldi	r17, 0x00	; 0
    1250:	77 fe       	sbrs	r7, 7
    1252:	07 c0       	rjmp	.+14     	; 0x1262 <vfprintf+0x29e>
    1254:	1c 14       	cp	r1, r12
    1256:	1d 04       	cpc	r1, r13
    1258:	3c f4       	brge	.+14     	; 0x1268 <vfprintf+0x2a4>
    125a:	96 01       	movw	r18, r12
    125c:	2f 5f       	subi	r18, 0xFF	; 255
    125e:	3f 4f       	sbci	r19, 0xFF	; 255
    1260:	05 c0       	rjmp	.+10     	; 0x126c <vfprintf+0x2a8>
    1262:	25 e0       	ldi	r18, 0x05	; 5
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	02 c0       	rjmp	.+4      	; 0x126c <vfprintf+0x2a8>
    1268:	21 e0       	ldi	r18, 0x01	; 1
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	66 20       	and	r6, r6
    126e:	11 f0       	breq	.+4      	; 0x1274 <vfprintf+0x2b0>
    1270:	2f 5f       	subi	r18, 0xFF	; 255
    1272:	3f 4f       	sbci	r19, 0xFF	; 255
    1274:	11 23       	and	r17, r17
    1276:	31 f0       	breq	.+12     	; 0x1284 <vfprintf+0x2c0>
    1278:	41 2f       	mov	r20, r17
    127a:	50 e0       	ldi	r21, 0x00	; 0
    127c:	4f 5f       	subi	r20, 0xFF	; 255
    127e:	5f 4f       	sbci	r21, 0xFF	; 255
    1280:	24 0f       	add	r18, r20
    1282:	35 1f       	adc	r19, r21
    1284:	45 2d       	mov	r20, r5
    1286:	50 e0       	ldi	r21, 0x00	; 0
    1288:	24 17       	cp	r18, r20
    128a:	35 07       	cpc	r19, r21
    128c:	14 f4       	brge	.+4      	; 0x1292 <vfprintf+0x2ce>
    128e:	52 1a       	sub	r5, r18
    1290:	01 c0       	rjmp	.+2      	; 0x1294 <vfprintf+0x2d0>
    1292:	51 2c       	mov	r5, r1
    1294:	87 2d       	mov	r24, r7
    1296:	89 70       	andi	r24, 0x09	; 9
    1298:	41 f4       	brne	.+16     	; 0x12aa <vfprintf+0x2e6>
    129a:	55 20       	and	r5, r5
    129c:	31 f0       	breq	.+12     	; 0x12aa <vfprintf+0x2e6>
    129e:	b7 01       	movw	r22, r14
    12a0:	80 e2       	ldi	r24, 0x20	; 32
    12a2:	90 e0       	ldi	r25, 0x00	; 0
    12a4:	7b d4       	rcall	.+2294   	; 0x1b9c <fputc>
    12a6:	5a 94       	dec	r5
    12a8:	f8 cf       	rjmp	.-16     	; 0x129a <vfprintf+0x2d6>
    12aa:	66 20       	and	r6, r6
    12ac:	21 f0       	breq	.+8      	; 0x12b6 <vfprintf+0x2f2>
    12ae:	b7 01       	movw	r22, r14
    12b0:	86 2d       	mov	r24, r6
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	73 d4       	rcall	.+2278   	; 0x1b9c <fputc>
    12b6:	73 fc       	sbrc	r7, 3
    12b8:	08 c0       	rjmp	.+16     	; 0x12ca <vfprintf+0x306>
    12ba:	55 20       	and	r5, r5
    12bc:	31 f0       	breq	.+12     	; 0x12ca <vfprintf+0x306>
    12be:	b7 01       	movw	r22, r14
    12c0:	80 e3       	ldi	r24, 0x30	; 48
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	6b d4       	rcall	.+2262   	; 0x1b9c <fputc>
    12c6:	5a 94       	dec	r5
    12c8:	f8 cf       	rjmp	.-16     	; 0x12ba <vfprintf+0x2f6>
    12ca:	77 fe       	sbrs	r7, 7
    12cc:	5d c0       	rjmp	.+186    	; 0x1388 <vfprintf+0x3c4>
    12ce:	9c 2d       	mov	r25, r12
    12d0:	8d 2d       	mov	r24, r13
    12d2:	d7 fe       	sbrs	r13, 7
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <vfprintf+0x316>
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	69 2e       	mov	r6, r25
    12dc:	78 2e       	mov	r7, r24
    12de:	40 e0       	ldi	r20, 0x00	; 0
    12e0:	50 e0       	ldi	r21, 0x00	; 0
    12e2:	c6 01       	movw	r24, r12
    12e4:	84 19       	sub	r24, r4
    12e6:	91 09       	sbc	r25, r1
    12e8:	9d 87       	std	Y+13, r25	; 0x0d
    12ea:	8c 87       	std	Y+12, r24	; 0x0c
    12ec:	96 01       	movw	r18, r12
    12ee:	26 19       	sub	r18, r6
    12f0:	37 09       	sbc	r19, r7
    12f2:	28 0d       	add	r18, r8
    12f4:	39 1d       	adc	r19, r9
    12f6:	81 2f       	mov	r24, r17
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	ee 27       	eor	r30, r30
    12fc:	ff 27       	eor	r31, r31
    12fe:	e8 1b       	sub	r30, r24
    1300:	f9 0b       	sbc	r31, r25
    1302:	ff 87       	std	Y+15, r31	; 0x0f
    1304:	ee 87       	std	Y+14, r30	; 0x0e
    1306:	ff ef       	ldi	r31, 0xFF	; 255
    1308:	6f 16       	cp	r6, r31
    130a:	7f 06       	cpc	r7, r31
    130c:	61 f4       	brne	.+24     	; 0x1326 <vfprintf+0x362>
    130e:	b7 01       	movw	r22, r14
    1310:	8e e2       	ldi	r24, 0x2E	; 46
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	2b 8b       	std	Y+19, r18	; 0x13
    1316:	3a 8b       	std	Y+18, r19	; 0x12
    1318:	48 8b       	std	Y+16, r20	; 0x10
    131a:	59 8b       	std	Y+17, r21	; 0x11
    131c:	3f d4       	rcall	.+2174   	; 0x1b9c <fputc>
    131e:	59 89       	ldd	r21, Y+17	; 0x11
    1320:	48 89       	ldd	r20, Y+16	; 0x10
    1322:	3a 89       	ldd	r19, Y+18	; 0x12
    1324:	2b 89       	ldd	r18, Y+19	; 0x13
    1326:	c6 14       	cp	r12, r6
    1328:	d7 04       	cpc	r13, r7
    132a:	54 f0       	brlt	.+20     	; 0x1340 <vfprintf+0x37c>
    132c:	6c 85       	ldd	r22, Y+12	; 0x0c
    132e:	7d 85       	ldd	r23, Y+13	; 0x0d
    1330:	66 15       	cp	r22, r6
    1332:	77 05       	cpc	r23, r7
    1334:	2c f4       	brge	.+10     	; 0x1340 <vfprintf+0x37c>
    1336:	f9 01       	movw	r30, r18
    1338:	e4 0f       	add	r30, r20
    133a:	f5 1f       	adc	r31, r21
    133c:	81 81       	ldd	r24, Z+1	; 0x01
    133e:	01 c0       	rjmp	.+2      	; 0x1342 <vfprintf+0x37e>
    1340:	80 e3       	ldi	r24, 0x30	; 48
    1342:	71 e0       	ldi	r23, 0x01	; 1
    1344:	67 1a       	sub	r6, r23
    1346:	71 08       	sbc	r7, r1
    1348:	4f 5f       	subi	r20, 0xFF	; 255
    134a:	5f 4f       	sbci	r21, 0xFF	; 255
    134c:	ee 85       	ldd	r30, Y+14	; 0x0e
    134e:	ff 85       	ldd	r31, Y+15	; 0x0f
    1350:	6e 16       	cp	r6, r30
    1352:	7f 06       	cpc	r7, r31
    1354:	64 f0       	brlt	.+24     	; 0x136e <vfprintf+0x3aa>
    1356:	b7 01       	movw	r22, r14
    1358:	90 e0       	ldi	r25, 0x00	; 0
    135a:	2b 8b       	std	Y+19, r18	; 0x13
    135c:	3a 8b       	std	Y+18, r19	; 0x12
    135e:	48 8b       	std	Y+16, r20	; 0x10
    1360:	59 8b       	std	Y+17, r21	; 0x11
    1362:	1c d4       	rcall	.+2104   	; 0x1b9c <fputc>
    1364:	2b 89       	ldd	r18, Y+19	; 0x13
    1366:	3a 89       	ldd	r19, Y+18	; 0x12
    1368:	48 89       	ldd	r20, Y+16	; 0x10
    136a:	59 89       	ldd	r21, Y+17	; 0x11
    136c:	cc cf       	rjmp	.-104    	; 0x1306 <vfprintf+0x342>
    136e:	6c 14       	cp	r6, r12
    1370:	7d 04       	cpc	r7, r13
    1372:	39 f4       	brne	.+14     	; 0x1382 <vfprintf+0x3be>
    1374:	9a 81       	ldd	r25, Y+2	; 0x02
    1376:	96 33       	cpi	r25, 0x36	; 54
    1378:	18 f4       	brcc	.+6      	; 0x1380 <vfprintf+0x3bc>
    137a:	95 33       	cpi	r25, 0x35	; 53
    137c:	11 f4       	brne	.+4      	; 0x1382 <vfprintf+0x3be>
    137e:	04 ff       	sbrs	r16, 4
    1380:	81 e3       	ldi	r24, 0x31	; 49
    1382:	b7 01       	movw	r22, r14
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	45 c0       	rjmp	.+138    	; 0x1412 <vfprintf+0x44e>
    1388:	8a 81       	ldd	r24, Y+2	; 0x02
    138a:	81 33       	cpi	r24, 0x31	; 49
    138c:	09 f0       	breq	.+2      	; 0x1390 <vfprintf+0x3cc>
    138e:	0f 7e       	andi	r16, 0xEF	; 239
    1390:	b7 01       	movw	r22, r14
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	03 d4       	rcall	.+2054   	; 0x1b9c <fputc>
    1396:	11 11       	cpse	r17, r1
    1398:	05 c0       	rjmp	.+10     	; 0x13a4 <vfprintf+0x3e0>
    139a:	74 fe       	sbrs	r7, 4
    139c:	16 c0       	rjmp	.+44     	; 0x13ca <vfprintf+0x406>
    139e:	85 e4       	ldi	r24, 0x45	; 69
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	15 c0       	rjmp	.+42     	; 0x13ce <vfprintf+0x40a>
    13a4:	b7 01       	movw	r22, r14
    13a6:	8e e2       	ldi	r24, 0x2E	; 46
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	f8 d3       	rcall	.+2032   	; 0x1b9c <fputc>
    13ac:	82 e0       	ldi	r24, 0x02	; 2
    13ae:	66 24       	eor	r6, r6
    13b0:	63 94       	inc	r6
    13b2:	68 0e       	add	r6, r24
    13b4:	f4 01       	movw	r30, r8
    13b6:	e8 0f       	add	r30, r24
    13b8:	f1 1d       	adc	r31, r1
    13ba:	80 81       	ld	r24, Z
    13bc:	b7 01       	movw	r22, r14
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	ed d3       	rcall	.+2010   	; 0x1b9c <fputc>
    13c2:	11 50       	subi	r17, 0x01	; 1
    13c4:	51 f3       	breq	.-44     	; 0x139a <vfprintf+0x3d6>
    13c6:	86 2d       	mov	r24, r6
    13c8:	f2 cf       	rjmp	.-28     	; 0x13ae <vfprintf+0x3ea>
    13ca:	85 e6       	ldi	r24, 0x65	; 101
    13cc:	90 e0       	ldi	r25, 0x00	; 0
    13ce:	b7 01       	movw	r22, r14
    13d0:	e5 d3       	rcall	.+1994   	; 0x1b9c <fputc>
    13d2:	d7 fc       	sbrc	r13, 7
    13d4:	05 c0       	rjmp	.+10     	; 0x13e0 <vfprintf+0x41c>
    13d6:	c1 14       	cp	r12, r1
    13d8:	d1 04       	cpc	r13, r1
    13da:	39 f4       	brne	.+14     	; 0x13ea <vfprintf+0x426>
    13dc:	04 ff       	sbrs	r16, 4
    13de:	05 c0       	rjmp	.+10     	; 0x13ea <vfprintf+0x426>
    13e0:	d1 94       	neg	r13
    13e2:	c1 94       	neg	r12
    13e4:	d1 08       	sbc	r13, r1
    13e6:	8d e2       	ldi	r24, 0x2D	; 45
    13e8:	01 c0       	rjmp	.+2      	; 0x13ec <vfprintf+0x428>
    13ea:	8b e2       	ldi	r24, 0x2B	; 43
    13ec:	b7 01       	movw	r22, r14
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	d5 d3       	rcall	.+1962   	; 0x1b9c <fputc>
    13f2:	80 e3       	ldi	r24, 0x30	; 48
    13f4:	6a e0       	ldi	r22, 0x0A	; 10
    13f6:	c6 16       	cp	r12, r22
    13f8:	d1 04       	cpc	r13, r1
    13fa:	2c f0       	brlt	.+10     	; 0x1406 <vfprintf+0x442>
    13fc:	8f 5f       	subi	r24, 0xFF	; 255
    13fe:	fa e0       	ldi	r31, 0x0A	; 10
    1400:	cf 1a       	sub	r12, r31
    1402:	d1 08       	sbc	r13, r1
    1404:	f7 cf       	rjmp	.-18     	; 0x13f4 <vfprintf+0x430>
    1406:	b7 01       	movw	r22, r14
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	c8 d3       	rcall	.+1936   	; 0x1b9c <fputc>
    140c:	b7 01       	movw	r22, r14
    140e:	c6 01       	movw	r24, r12
    1410:	c0 96       	adiw	r24, 0x30	; 48
    1412:	c4 d3       	rcall	.+1928   	; 0x1b9c <fputc>
    1414:	36 c1       	rjmp	.+620    	; 0x1682 <vfprintf+0x6be>
    1416:	83 36       	cpi	r24, 0x63	; 99
    1418:	31 f0       	breq	.+12     	; 0x1426 <vfprintf+0x462>
    141a:	83 37       	cpi	r24, 0x73	; 115
    141c:	79 f0       	breq	.+30     	; 0x143c <vfprintf+0x478>
    141e:	83 35       	cpi	r24, 0x53	; 83
    1420:	09 f0       	breq	.+2      	; 0x1424 <vfprintf+0x460>
    1422:	54 c0       	rjmp	.+168    	; 0x14cc <vfprintf+0x508>
    1424:	20 c0       	rjmp	.+64     	; 0x1466 <vfprintf+0x4a2>
    1426:	56 01       	movw	r10, r12
    1428:	72 e0       	ldi	r23, 0x02	; 2
    142a:	a7 0e       	add	r10, r23
    142c:	b1 1c       	adc	r11, r1
    142e:	f6 01       	movw	r30, r12
    1430:	80 81       	ld	r24, Z
    1432:	89 83       	std	Y+1, r24	; 0x01
    1434:	01 e0       	ldi	r16, 0x01	; 1
    1436:	10 e0       	ldi	r17, 0x00	; 0
    1438:	64 01       	movw	r12, r8
    143a:	13 c0       	rjmp	.+38     	; 0x1462 <vfprintf+0x49e>
    143c:	56 01       	movw	r10, r12
    143e:	f2 e0       	ldi	r31, 0x02	; 2
    1440:	af 0e       	add	r10, r31
    1442:	b1 1c       	adc	r11, r1
    1444:	f6 01       	movw	r30, r12
    1446:	c0 80       	ld	r12, Z
    1448:	d1 80       	ldd	r13, Z+1	; 0x01
    144a:	26 ff       	sbrs	r18, 6
    144c:	03 c0       	rjmp	.+6      	; 0x1454 <vfprintf+0x490>
    144e:	61 2f       	mov	r22, r17
    1450:	70 e0       	ldi	r23, 0x00	; 0
    1452:	02 c0       	rjmp	.+4      	; 0x1458 <vfprintf+0x494>
    1454:	6f ef       	ldi	r22, 0xFF	; 255
    1456:	7f ef       	ldi	r23, 0xFF	; 255
    1458:	c6 01       	movw	r24, r12
    145a:	2b 8b       	std	Y+19, r18	; 0x13
    145c:	4a d3       	rcall	.+1684   	; 0x1af2 <strnlen>
    145e:	8c 01       	movw	r16, r24
    1460:	2b 89       	ldd	r18, Y+19	; 0x13
    1462:	2f 77       	andi	r18, 0x7F	; 127
    1464:	14 c0       	rjmp	.+40     	; 0x148e <vfprintf+0x4ca>
    1466:	56 01       	movw	r10, r12
    1468:	f2 e0       	ldi	r31, 0x02	; 2
    146a:	af 0e       	add	r10, r31
    146c:	b1 1c       	adc	r11, r1
    146e:	f6 01       	movw	r30, r12
    1470:	c0 80       	ld	r12, Z
    1472:	d1 80       	ldd	r13, Z+1	; 0x01
    1474:	26 ff       	sbrs	r18, 6
    1476:	03 c0       	rjmp	.+6      	; 0x147e <vfprintf+0x4ba>
    1478:	61 2f       	mov	r22, r17
    147a:	70 e0       	ldi	r23, 0x00	; 0
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <vfprintf+0x4be>
    147e:	6f ef       	ldi	r22, 0xFF	; 255
    1480:	7f ef       	ldi	r23, 0xFF	; 255
    1482:	c6 01       	movw	r24, r12
    1484:	2b 8b       	std	Y+19, r18	; 0x13
    1486:	2a d3       	rcall	.+1620   	; 0x1adc <strnlen_P>
    1488:	8c 01       	movw	r16, r24
    148a:	2b 89       	ldd	r18, Y+19	; 0x13
    148c:	20 68       	ori	r18, 0x80	; 128
    148e:	72 2e       	mov	r7, r18
    1490:	23 fd       	sbrc	r18, 3
    1492:	18 c0       	rjmp	.+48     	; 0x14c4 <vfprintf+0x500>
    1494:	85 2d       	mov	r24, r5
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	08 17       	cp	r16, r24
    149a:	19 07       	cpc	r17, r25
    149c:	98 f4       	brcc	.+38     	; 0x14c4 <vfprintf+0x500>
    149e:	b7 01       	movw	r22, r14
    14a0:	80 e2       	ldi	r24, 0x20	; 32
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	7b d3       	rcall	.+1782   	; 0x1b9c <fputc>
    14a6:	5a 94       	dec	r5
    14a8:	f5 cf       	rjmp	.-22     	; 0x1494 <vfprintf+0x4d0>
    14aa:	f6 01       	movw	r30, r12
    14ac:	77 fc       	sbrc	r7, 7
    14ae:	85 91       	lpm	r24, Z+
    14b0:	77 fe       	sbrs	r7, 7
    14b2:	81 91       	ld	r24, Z+
    14b4:	6f 01       	movw	r12, r30
    14b6:	b7 01       	movw	r22, r14
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	70 d3       	rcall	.+1760   	; 0x1b9c <fputc>
    14bc:	51 10       	cpse	r5, r1
    14be:	5a 94       	dec	r5
    14c0:	01 50       	subi	r16, 0x01	; 1
    14c2:	11 09       	sbc	r17, r1
    14c4:	01 15       	cp	r16, r1
    14c6:	11 05       	cpc	r17, r1
    14c8:	81 f7       	brne	.-32     	; 0x14aa <vfprintf+0x4e6>
    14ca:	db c0       	rjmp	.+438    	; 0x1682 <vfprintf+0x6be>
    14cc:	84 36       	cpi	r24, 0x64	; 100
    14ce:	11 f0       	breq	.+4      	; 0x14d4 <vfprintf+0x510>
    14d0:	89 36       	cpi	r24, 0x69	; 105
    14d2:	49 f5       	brne	.+82     	; 0x1526 <vfprintf+0x562>
    14d4:	56 01       	movw	r10, r12
    14d6:	27 ff       	sbrs	r18, 7
    14d8:	09 c0       	rjmp	.+18     	; 0x14ec <vfprintf+0x528>
    14da:	f4 e0       	ldi	r31, 0x04	; 4
    14dc:	af 0e       	add	r10, r31
    14de:	b1 1c       	adc	r11, r1
    14e0:	f6 01       	movw	r30, r12
    14e2:	60 81       	ld	r22, Z
    14e4:	71 81       	ldd	r23, Z+1	; 0x01
    14e6:	82 81       	ldd	r24, Z+2	; 0x02
    14e8:	93 81       	ldd	r25, Z+3	; 0x03
    14ea:	0a c0       	rjmp	.+20     	; 0x1500 <vfprintf+0x53c>
    14ec:	f2 e0       	ldi	r31, 0x02	; 2
    14ee:	af 0e       	add	r10, r31
    14f0:	b1 1c       	adc	r11, r1
    14f2:	f6 01       	movw	r30, r12
    14f4:	60 81       	ld	r22, Z
    14f6:	71 81       	ldd	r23, Z+1	; 0x01
    14f8:	88 27       	eor	r24, r24
    14fa:	77 fd       	sbrc	r23, 7
    14fc:	80 95       	com	r24
    14fe:	98 2f       	mov	r25, r24
    1500:	02 2f       	mov	r16, r18
    1502:	0f 76       	andi	r16, 0x6F	; 111
    1504:	97 ff       	sbrs	r25, 7
    1506:	08 c0       	rjmp	.+16     	; 0x1518 <vfprintf+0x554>
    1508:	90 95       	com	r25
    150a:	80 95       	com	r24
    150c:	70 95       	com	r23
    150e:	61 95       	neg	r22
    1510:	7f 4f       	sbci	r23, 0xFF	; 255
    1512:	8f 4f       	sbci	r24, 0xFF	; 255
    1514:	9f 4f       	sbci	r25, 0xFF	; 255
    1516:	00 68       	ori	r16, 0x80	; 128
    1518:	2a e0       	ldi	r18, 0x0A	; 10
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	a4 01       	movw	r20, r8
    151e:	ae d3       	rcall	.+1884   	; 0x1c7c <__ultoa_invert>
    1520:	c8 2e       	mov	r12, r24
    1522:	c8 18       	sub	r12, r8
    1524:	3d c0       	rjmp	.+122    	; 0x15a0 <vfprintf+0x5dc>
    1526:	02 2f       	mov	r16, r18
    1528:	85 37       	cpi	r24, 0x75	; 117
    152a:	21 f4       	brne	.+8      	; 0x1534 <vfprintf+0x570>
    152c:	0f 7e       	andi	r16, 0xEF	; 239
    152e:	2a e0       	ldi	r18, 0x0A	; 10
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	1d c0       	rjmp	.+58     	; 0x156e <vfprintf+0x5aa>
    1534:	09 7f       	andi	r16, 0xF9	; 249
    1536:	8f 36       	cpi	r24, 0x6F	; 111
    1538:	91 f0       	breq	.+36     	; 0x155e <vfprintf+0x59a>
    153a:	18 f4       	brcc	.+6      	; 0x1542 <vfprintf+0x57e>
    153c:	88 35       	cpi	r24, 0x58	; 88
    153e:	59 f0       	breq	.+22     	; 0x1556 <vfprintf+0x592>
    1540:	a9 c0       	rjmp	.+338    	; 0x1694 <vfprintf+0x6d0>
    1542:	80 37       	cpi	r24, 0x70	; 112
    1544:	19 f0       	breq	.+6      	; 0x154c <vfprintf+0x588>
    1546:	88 37       	cpi	r24, 0x78	; 120
    1548:	11 f0       	breq	.+4      	; 0x154e <vfprintf+0x58a>
    154a:	a4 c0       	rjmp	.+328    	; 0x1694 <vfprintf+0x6d0>
    154c:	00 61       	ori	r16, 0x10	; 16
    154e:	04 ff       	sbrs	r16, 4
    1550:	09 c0       	rjmp	.+18     	; 0x1564 <vfprintf+0x5a0>
    1552:	04 60       	ori	r16, 0x04	; 4
    1554:	07 c0       	rjmp	.+14     	; 0x1564 <vfprintf+0x5a0>
    1556:	24 ff       	sbrs	r18, 4
    1558:	08 c0       	rjmp	.+16     	; 0x156a <vfprintf+0x5a6>
    155a:	06 60       	ori	r16, 0x06	; 6
    155c:	06 c0       	rjmp	.+12     	; 0x156a <vfprintf+0x5a6>
    155e:	28 e0       	ldi	r18, 0x08	; 8
    1560:	30 e0       	ldi	r19, 0x00	; 0
    1562:	05 c0       	rjmp	.+10     	; 0x156e <vfprintf+0x5aa>
    1564:	20 e1       	ldi	r18, 0x10	; 16
    1566:	30 e0       	ldi	r19, 0x00	; 0
    1568:	02 c0       	rjmp	.+4      	; 0x156e <vfprintf+0x5aa>
    156a:	20 e1       	ldi	r18, 0x10	; 16
    156c:	32 e0       	ldi	r19, 0x02	; 2
    156e:	56 01       	movw	r10, r12
    1570:	07 ff       	sbrs	r16, 7
    1572:	09 c0       	rjmp	.+18     	; 0x1586 <vfprintf+0x5c2>
    1574:	f4 e0       	ldi	r31, 0x04	; 4
    1576:	af 0e       	add	r10, r31
    1578:	b1 1c       	adc	r11, r1
    157a:	f6 01       	movw	r30, r12
    157c:	60 81       	ld	r22, Z
    157e:	71 81       	ldd	r23, Z+1	; 0x01
    1580:	82 81       	ldd	r24, Z+2	; 0x02
    1582:	93 81       	ldd	r25, Z+3	; 0x03
    1584:	08 c0       	rjmp	.+16     	; 0x1596 <vfprintf+0x5d2>
    1586:	f2 e0       	ldi	r31, 0x02	; 2
    1588:	af 0e       	add	r10, r31
    158a:	b1 1c       	adc	r11, r1
    158c:	f6 01       	movw	r30, r12
    158e:	60 81       	ld	r22, Z
    1590:	71 81       	ldd	r23, Z+1	; 0x01
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	a4 01       	movw	r20, r8
    1598:	71 d3       	rcall	.+1762   	; 0x1c7c <__ultoa_invert>
    159a:	c8 2e       	mov	r12, r24
    159c:	c8 18       	sub	r12, r8
    159e:	0f 77       	andi	r16, 0x7F	; 127
    15a0:	06 ff       	sbrs	r16, 6
    15a2:	0b c0       	rjmp	.+22     	; 0x15ba <vfprintf+0x5f6>
    15a4:	20 2f       	mov	r18, r16
    15a6:	2e 7f       	andi	r18, 0xFE	; 254
    15a8:	c1 16       	cp	r12, r17
    15aa:	50 f4       	brcc	.+20     	; 0x15c0 <vfprintf+0x5fc>
    15ac:	04 ff       	sbrs	r16, 4
    15ae:	0a c0       	rjmp	.+20     	; 0x15c4 <vfprintf+0x600>
    15b0:	02 fd       	sbrc	r16, 2
    15b2:	08 c0       	rjmp	.+16     	; 0x15c4 <vfprintf+0x600>
    15b4:	20 2f       	mov	r18, r16
    15b6:	2e 7e       	andi	r18, 0xEE	; 238
    15b8:	05 c0       	rjmp	.+10     	; 0x15c4 <vfprintf+0x600>
    15ba:	dc 2c       	mov	r13, r12
    15bc:	20 2f       	mov	r18, r16
    15be:	03 c0       	rjmp	.+6      	; 0x15c6 <vfprintf+0x602>
    15c0:	dc 2c       	mov	r13, r12
    15c2:	01 c0       	rjmp	.+2      	; 0x15c6 <vfprintf+0x602>
    15c4:	d1 2e       	mov	r13, r17
    15c6:	24 ff       	sbrs	r18, 4
    15c8:	0d c0       	rjmp	.+26     	; 0x15e4 <vfprintf+0x620>
    15ca:	fe 01       	movw	r30, r28
    15cc:	ec 0d       	add	r30, r12
    15ce:	f1 1d       	adc	r31, r1
    15d0:	80 81       	ld	r24, Z
    15d2:	80 33       	cpi	r24, 0x30	; 48
    15d4:	11 f4       	brne	.+4      	; 0x15da <vfprintf+0x616>
    15d6:	29 7e       	andi	r18, 0xE9	; 233
    15d8:	09 c0       	rjmp	.+18     	; 0x15ec <vfprintf+0x628>
    15da:	22 ff       	sbrs	r18, 2
    15dc:	06 c0       	rjmp	.+12     	; 0x15ea <vfprintf+0x626>
    15de:	d3 94       	inc	r13
    15e0:	d3 94       	inc	r13
    15e2:	04 c0       	rjmp	.+8      	; 0x15ec <vfprintf+0x628>
    15e4:	82 2f       	mov	r24, r18
    15e6:	86 78       	andi	r24, 0x86	; 134
    15e8:	09 f0       	breq	.+2      	; 0x15ec <vfprintf+0x628>
    15ea:	d3 94       	inc	r13
    15ec:	23 fd       	sbrc	r18, 3
    15ee:	12 c0       	rjmp	.+36     	; 0x1614 <vfprintf+0x650>
    15f0:	20 ff       	sbrs	r18, 0
    15f2:	06 c0       	rjmp	.+12     	; 0x1600 <vfprintf+0x63c>
    15f4:	1c 2d       	mov	r17, r12
    15f6:	d5 14       	cp	r13, r5
    15f8:	18 f4       	brcc	.+6      	; 0x1600 <vfprintf+0x63c>
    15fa:	15 0d       	add	r17, r5
    15fc:	1d 19       	sub	r17, r13
    15fe:	d5 2c       	mov	r13, r5
    1600:	d5 14       	cp	r13, r5
    1602:	60 f4       	brcc	.+24     	; 0x161c <vfprintf+0x658>
    1604:	b7 01       	movw	r22, r14
    1606:	80 e2       	ldi	r24, 0x20	; 32
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	2b 8b       	std	Y+19, r18	; 0x13
    160c:	c7 d2       	rcall	.+1422   	; 0x1b9c <fputc>
    160e:	d3 94       	inc	r13
    1610:	2b 89       	ldd	r18, Y+19	; 0x13
    1612:	f6 cf       	rjmp	.-20     	; 0x1600 <vfprintf+0x63c>
    1614:	d5 14       	cp	r13, r5
    1616:	10 f4       	brcc	.+4      	; 0x161c <vfprintf+0x658>
    1618:	5d 18       	sub	r5, r13
    161a:	01 c0       	rjmp	.+2      	; 0x161e <vfprintf+0x65a>
    161c:	51 2c       	mov	r5, r1
    161e:	24 ff       	sbrs	r18, 4
    1620:	11 c0       	rjmp	.+34     	; 0x1644 <vfprintf+0x680>
    1622:	b7 01       	movw	r22, r14
    1624:	80 e3       	ldi	r24, 0x30	; 48
    1626:	90 e0       	ldi	r25, 0x00	; 0
    1628:	2b 8b       	std	Y+19, r18	; 0x13
    162a:	b8 d2       	rcall	.+1392   	; 0x1b9c <fputc>
    162c:	2b 89       	ldd	r18, Y+19	; 0x13
    162e:	22 ff       	sbrs	r18, 2
    1630:	16 c0       	rjmp	.+44     	; 0x165e <vfprintf+0x69a>
    1632:	21 ff       	sbrs	r18, 1
    1634:	03 c0       	rjmp	.+6      	; 0x163c <vfprintf+0x678>
    1636:	88 e5       	ldi	r24, 0x58	; 88
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	02 c0       	rjmp	.+4      	; 0x1640 <vfprintf+0x67c>
    163c:	88 e7       	ldi	r24, 0x78	; 120
    163e:	90 e0       	ldi	r25, 0x00	; 0
    1640:	b7 01       	movw	r22, r14
    1642:	0c c0       	rjmp	.+24     	; 0x165c <vfprintf+0x698>
    1644:	82 2f       	mov	r24, r18
    1646:	86 78       	andi	r24, 0x86	; 134
    1648:	51 f0       	breq	.+20     	; 0x165e <vfprintf+0x69a>
    164a:	21 fd       	sbrc	r18, 1
    164c:	02 c0       	rjmp	.+4      	; 0x1652 <vfprintf+0x68e>
    164e:	80 e2       	ldi	r24, 0x20	; 32
    1650:	01 c0       	rjmp	.+2      	; 0x1654 <vfprintf+0x690>
    1652:	8b e2       	ldi	r24, 0x2B	; 43
    1654:	27 fd       	sbrc	r18, 7
    1656:	8d e2       	ldi	r24, 0x2D	; 45
    1658:	b7 01       	movw	r22, r14
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	9f d2       	rcall	.+1342   	; 0x1b9c <fputc>
    165e:	c1 16       	cp	r12, r17
    1660:	30 f4       	brcc	.+12     	; 0x166e <vfprintf+0x6aa>
    1662:	b7 01       	movw	r22, r14
    1664:	80 e3       	ldi	r24, 0x30	; 48
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	99 d2       	rcall	.+1330   	; 0x1b9c <fputc>
    166a:	11 50       	subi	r17, 0x01	; 1
    166c:	f8 cf       	rjmp	.-16     	; 0x165e <vfprintf+0x69a>
    166e:	ca 94       	dec	r12
    1670:	f4 01       	movw	r30, r8
    1672:	ec 0d       	add	r30, r12
    1674:	f1 1d       	adc	r31, r1
    1676:	80 81       	ld	r24, Z
    1678:	b7 01       	movw	r22, r14
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	8f d2       	rcall	.+1310   	; 0x1b9c <fputc>
    167e:	c1 10       	cpse	r12, r1
    1680:	f6 cf       	rjmp	.-20     	; 0x166e <vfprintf+0x6aa>
    1682:	55 20       	and	r5, r5
    1684:	09 f4       	brne	.+2      	; 0x1688 <vfprintf+0x6c4>
    1686:	dd cc       	rjmp	.-1606   	; 0x1042 <vfprintf+0x7e>
    1688:	b7 01       	movw	r22, r14
    168a:	80 e2       	ldi	r24, 0x20	; 32
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	86 d2       	rcall	.+1292   	; 0x1b9c <fputc>
    1690:	5a 94       	dec	r5
    1692:	f7 cf       	rjmp	.-18     	; 0x1682 <vfprintf+0x6be>
    1694:	f7 01       	movw	r30, r14
    1696:	86 81       	ldd	r24, Z+6	; 0x06
    1698:	97 81       	ldd	r25, Z+7	; 0x07
    169a:	02 c0       	rjmp	.+4      	; 0x16a0 <vfprintf+0x6dc>
    169c:	8f ef       	ldi	r24, 0xFF	; 255
    169e:	9f ef       	ldi	r25, 0xFF	; 255
    16a0:	63 96       	adiw	r28, 0x13	; 19
    16a2:	0f b6       	in	r0, 0x3f	; 63
    16a4:	f8 94       	cli
    16a6:	de bf       	out	0x3e, r29	; 62
    16a8:	0f be       	out	0x3f, r0	; 63
    16aa:	cd bf       	out	0x3d, r28	; 61
    16ac:	df 91       	pop	r29
    16ae:	cf 91       	pop	r28
    16b0:	1f 91       	pop	r17
    16b2:	0f 91       	pop	r16
    16b4:	ff 90       	pop	r15
    16b6:	ef 90       	pop	r14
    16b8:	df 90       	pop	r13
    16ba:	cf 90       	pop	r12
    16bc:	bf 90       	pop	r11
    16be:	af 90       	pop	r10
    16c0:	9f 90       	pop	r9
    16c2:	8f 90       	pop	r8
    16c4:	7f 90       	pop	r7
    16c6:	6f 90       	pop	r6
    16c8:	5f 90       	pop	r5
    16ca:	4f 90       	pop	r4
    16cc:	3f 90       	pop	r3
    16ce:	2f 90       	pop	r2
    16d0:	08 95       	ret

000016d2 <__tablejump2__>:
    16d2:	ee 0f       	add	r30, r30
    16d4:	ff 1f       	adc	r31, r31

000016d6 <__tablejump__>:
    16d6:	05 90       	lpm	r0, Z+
    16d8:	f4 91       	lpm	r31, Z
    16da:	e0 2d       	mov	r30, r0
    16dc:	19 94       	eijmp

000016de <malloc>:
    16de:	cf 93       	push	r28
    16e0:	df 93       	push	r29
    16e2:	82 30       	cpi	r24, 0x02	; 2
    16e4:	91 05       	cpc	r25, r1
    16e6:	10 f4       	brcc	.+4      	; 0x16ec <malloc+0xe>
    16e8:	82 e0       	ldi	r24, 0x02	; 2
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	e0 91 de 02 	lds	r30, 0x02DE
    16f0:	f0 91 df 02 	lds	r31, 0x02DF
    16f4:	20 e0       	ldi	r18, 0x00	; 0
    16f6:	30 e0       	ldi	r19, 0x00	; 0
    16f8:	a0 e0       	ldi	r26, 0x00	; 0
    16fa:	b0 e0       	ldi	r27, 0x00	; 0
    16fc:	30 97       	sbiw	r30, 0x00	; 0
    16fe:	39 f1       	breq	.+78     	; 0x174e <malloc+0x70>
    1700:	40 81       	ld	r20, Z
    1702:	51 81       	ldd	r21, Z+1	; 0x01
    1704:	48 17       	cp	r20, r24
    1706:	59 07       	cpc	r21, r25
    1708:	b8 f0       	brcs	.+46     	; 0x1738 <malloc+0x5a>
    170a:	48 17       	cp	r20, r24
    170c:	59 07       	cpc	r21, r25
    170e:	71 f4       	brne	.+28     	; 0x172c <malloc+0x4e>
    1710:	82 81       	ldd	r24, Z+2	; 0x02
    1712:	93 81       	ldd	r25, Z+3	; 0x03
    1714:	10 97       	sbiw	r26, 0x00	; 0
    1716:	29 f0       	breq	.+10     	; 0x1722 <malloc+0x44>
    1718:	13 96       	adiw	r26, 0x03	; 3
    171a:	9c 93       	st	X, r25
    171c:	8e 93       	st	-X, r24
    171e:	12 97       	sbiw	r26, 0x02	; 2
    1720:	2c c0       	rjmp	.+88     	; 0x177a <malloc+0x9c>
    1722:	90 93 df 02 	sts	0x02DF, r25
    1726:	80 93 de 02 	sts	0x02DE, r24
    172a:	27 c0       	rjmp	.+78     	; 0x177a <malloc+0x9c>
    172c:	21 15       	cp	r18, r1
    172e:	31 05       	cpc	r19, r1
    1730:	31 f0       	breq	.+12     	; 0x173e <malloc+0x60>
    1732:	42 17       	cp	r20, r18
    1734:	53 07       	cpc	r21, r19
    1736:	18 f0       	brcs	.+6      	; 0x173e <malloc+0x60>
    1738:	a9 01       	movw	r20, r18
    173a:	db 01       	movw	r26, r22
    173c:	01 c0       	rjmp	.+2      	; 0x1740 <malloc+0x62>
    173e:	ef 01       	movw	r28, r30
    1740:	9a 01       	movw	r18, r20
    1742:	bd 01       	movw	r22, r26
    1744:	df 01       	movw	r26, r30
    1746:	02 80       	ldd	r0, Z+2	; 0x02
    1748:	f3 81       	ldd	r31, Z+3	; 0x03
    174a:	e0 2d       	mov	r30, r0
    174c:	d7 cf       	rjmp	.-82     	; 0x16fc <malloc+0x1e>
    174e:	21 15       	cp	r18, r1
    1750:	31 05       	cpc	r19, r1
    1752:	f9 f0       	breq	.+62     	; 0x1792 <malloc+0xb4>
    1754:	28 1b       	sub	r18, r24
    1756:	39 0b       	sbc	r19, r25
    1758:	24 30       	cpi	r18, 0x04	; 4
    175a:	31 05       	cpc	r19, r1
    175c:	80 f4       	brcc	.+32     	; 0x177e <malloc+0xa0>
    175e:	8a 81       	ldd	r24, Y+2	; 0x02
    1760:	9b 81       	ldd	r25, Y+3	; 0x03
    1762:	61 15       	cp	r22, r1
    1764:	71 05       	cpc	r23, r1
    1766:	21 f0       	breq	.+8      	; 0x1770 <malloc+0x92>
    1768:	fb 01       	movw	r30, r22
    176a:	93 83       	std	Z+3, r25	; 0x03
    176c:	82 83       	std	Z+2, r24	; 0x02
    176e:	04 c0       	rjmp	.+8      	; 0x1778 <malloc+0x9a>
    1770:	90 93 df 02 	sts	0x02DF, r25
    1774:	80 93 de 02 	sts	0x02DE, r24
    1778:	fe 01       	movw	r30, r28
    177a:	32 96       	adiw	r30, 0x02	; 2
    177c:	44 c0       	rjmp	.+136    	; 0x1806 <malloc+0x128>
    177e:	fe 01       	movw	r30, r28
    1780:	e2 0f       	add	r30, r18
    1782:	f3 1f       	adc	r31, r19
    1784:	81 93       	st	Z+, r24
    1786:	91 93       	st	Z+, r25
    1788:	22 50       	subi	r18, 0x02	; 2
    178a:	31 09       	sbc	r19, r1
    178c:	39 83       	std	Y+1, r19	; 0x01
    178e:	28 83       	st	Y, r18
    1790:	3a c0       	rjmp	.+116    	; 0x1806 <malloc+0x128>
    1792:	20 91 dc 02 	lds	r18, 0x02DC
    1796:	30 91 dd 02 	lds	r19, 0x02DD
    179a:	23 2b       	or	r18, r19
    179c:	41 f4       	brne	.+16     	; 0x17ae <malloc+0xd0>
    179e:	20 91 02 02 	lds	r18, 0x0202
    17a2:	30 91 03 02 	lds	r19, 0x0203
    17a6:	30 93 dd 02 	sts	0x02DD, r19
    17aa:	20 93 dc 02 	sts	0x02DC, r18
    17ae:	20 91 00 02 	lds	r18, 0x0200
    17b2:	30 91 01 02 	lds	r19, 0x0201
    17b6:	21 15       	cp	r18, r1
    17b8:	31 05       	cpc	r19, r1
    17ba:	41 f4       	brne	.+16     	; 0x17cc <malloc+0xee>
    17bc:	2d b7       	in	r18, 0x3d	; 61
    17be:	3e b7       	in	r19, 0x3e	; 62
    17c0:	40 91 04 02 	lds	r20, 0x0204
    17c4:	50 91 05 02 	lds	r21, 0x0205
    17c8:	24 1b       	sub	r18, r20
    17ca:	35 0b       	sbc	r19, r21
    17cc:	e0 91 dc 02 	lds	r30, 0x02DC
    17d0:	f0 91 dd 02 	lds	r31, 0x02DD
    17d4:	e2 17       	cp	r30, r18
    17d6:	f3 07       	cpc	r31, r19
    17d8:	a0 f4       	brcc	.+40     	; 0x1802 <malloc+0x124>
    17da:	2e 1b       	sub	r18, r30
    17dc:	3f 0b       	sbc	r19, r31
    17de:	28 17       	cp	r18, r24
    17e0:	39 07       	cpc	r19, r25
    17e2:	78 f0       	brcs	.+30     	; 0x1802 <malloc+0x124>
    17e4:	ac 01       	movw	r20, r24
    17e6:	4e 5f       	subi	r20, 0xFE	; 254
    17e8:	5f 4f       	sbci	r21, 0xFF	; 255
    17ea:	24 17       	cp	r18, r20
    17ec:	35 07       	cpc	r19, r21
    17ee:	48 f0       	brcs	.+18     	; 0x1802 <malloc+0x124>
    17f0:	4e 0f       	add	r20, r30
    17f2:	5f 1f       	adc	r21, r31
    17f4:	50 93 dd 02 	sts	0x02DD, r21
    17f8:	40 93 dc 02 	sts	0x02DC, r20
    17fc:	81 93       	st	Z+, r24
    17fe:	91 93       	st	Z+, r25
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <malloc+0x128>
    1802:	e0 e0       	ldi	r30, 0x00	; 0
    1804:	f0 e0       	ldi	r31, 0x00	; 0
    1806:	cf 01       	movw	r24, r30
    1808:	df 91       	pop	r29
    180a:	cf 91       	pop	r28
    180c:	08 95       	ret

0000180e <free>:
    180e:	cf 93       	push	r28
    1810:	df 93       	push	r29
    1812:	00 97       	sbiw	r24, 0x00	; 0
    1814:	09 f4       	brne	.+2      	; 0x1818 <free+0xa>
    1816:	87 c0       	rjmp	.+270    	; 0x1926 <free+0x118>
    1818:	fc 01       	movw	r30, r24
    181a:	32 97       	sbiw	r30, 0x02	; 2
    181c:	13 82       	std	Z+3, r1	; 0x03
    181e:	12 82       	std	Z+2, r1	; 0x02
    1820:	c0 91 de 02 	lds	r28, 0x02DE
    1824:	d0 91 df 02 	lds	r29, 0x02DF
    1828:	20 97       	sbiw	r28, 0x00	; 0
    182a:	81 f4       	brne	.+32     	; 0x184c <free+0x3e>
    182c:	20 81       	ld	r18, Z
    182e:	31 81       	ldd	r19, Z+1	; 0x01
    1830:	28 0f       	add	r18, r24
    1832:	39 1f       	adc	r19, r25
    1834:	80 91 dc 02 	lds	r24, 0x02DC
    1838:	90 91 dd 02 	lds	r25, 0x02DD
    183c:	82 17       	cp	r24, r18
    183e:	93 07       	cpc	r25, r19
    1840:	79 f5       	brne	.+94     	; 0x18a0 <free+0x92>
    1842:	f0 93 dd 02 	sts	0x02DD, r31
    1846:	e0 93 dc 02 	sts	0x02DC, r30
    184a:	6d c0       	rjmp	.+218    	; 0x1926 <free+0x118>
    184c:	de 01       	movw	r26, r28
    184e:	20 e0       	ldi	r18, 0x00	; 0
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	ae 17       	cp	r26, r30
    1854:	bf 07       	cpc	r27, r31
    1856:	50 f4       	brcc	.+20     	; 0x186c <free+0x5e>
    1858:	12 96       	adiw	r26, 0x02	; 2
    185a:	4d 91       	ld	r20, X+
    185c:	5c 91       	ld	r21, X
    185e:	13 97       	sbiw	r26, 0x03	; 3
    1860:	9d 01       	movw	r18, r26
    1862:	41 15       	cp	r20, r1
    1864:	51 05       	cpc	r21, r1
    1866:	09 f1       	breq	.+66     	; 0x18aa <free+0x9c>
    1868:	da 01       	movw	r26, r20
    186a:	f3 cf       	rjmp	.-26     	; 0x1852 <free+0x44>
    186c:	b3 83       	std	Z+3, r27	; 0x03
    186e:	a2 83       	std	Z+2, r26	; 0x02
    1870:	40 81       	ld	r20, Z
    1872:	51 81       	ldd	r21, Z+1	; 0x01
    1874:	84 0f       	add	r24, r20
    1876:	95 1f       	adc	r25, r21
    1878:	8a 17       	cp	r24, r26
    187a:	9b 07       	cpc	r25, r27
    187c:	71 f4       	brne	.+28     	; 0x189a <free+0x8c>
    187e:	8d 91       	ld	r24, X+
    1880:	9c 91       	ld	r25, X
    1882:	11 97       	sbiw	r26, 0x01	; 1
    1884:	84 0f       	add	r24, r20
    1886:	95 1f       	adc	r25, r21
    1888:	02 96       	adiw	r24, 0x02	; 2
    188a:	91 83       	std	Z+1, r25	; 0x01
    188c:	80 83       	st	Z, r24
    188e:	12 96       	adiw	r26, 0x02	; 2
    1890:	8d 91       	ld	r24, X+
    1892:	9c 91       	ld	r25, X
    1894:	13 97       	sbiw	r26, 0x03	; 3
    1896:	93 83       	std	Z+3, r25	; 0x03
    1898:	82 83       	std	Z+2, r24	; 0x02
    189a:	21 15       	cp	r18, r1
    189c:	31 05       	cpc	r19, r1
    189e:	29 f4       	brne	.+10     	; 0x18aa <free+0x9c>
    18a0:	f0 93 df 02 	sts	0x02DF, r31
    18a4:	e0 93 de 02 	sts	0x02DE, r30
    18a8:	3e c0       	rjmp	.+124    	; 0x1926 <free+0x118>
    18aa:	d9 01       	movw	r26, r18
    18ac:	13 96       	adiw	r26, 0x03	; 3
    18ae:	fc 93       	st	X, r31
    18b0:	ee 93       	st	-X, r30
    18b2:	12 97       	sbiw	r26, 0x02	; 2
    18b4:	4d 91       	ld	r20, X+
    18b6:	5d 91       	ld	r21, X+
    18b8:	a4 0f       	add	r26, r20
    18ba:	b5 1f       	adc	r27, r21
    18bc:	ea 17       	cp	r30, r26
    18be:	fb 07       	cpc	r31, r27
    18c0:	79 f4       	brne	.+30     	; 0x18e0 <free+0xd2>
    18c2:	80 81       	ld	r24, Z
    18c4:	91 81       	ldd	r25, Z+1	; 0x01
    18c6:	84 0f       	add	r24, r20
    18c8:	95 1f       	adc	r25, r21
    18ca:	02 96       	adiw	r24, 0x02	; 2
    18cc:	d9 01       	movw	r26, r18
    18ce:	11 96       	adiw	r26, 0x01	; 1
    18d0:	9c 93       	st	X, r25
    18d2:	8e 93       	st	-X, r24
    18d4:	82 81       	ldd	r24, Z+2	; 0x02
    18d6:	93 81       	ldd	r25, Z+3	; 0x03
    18d8:	13 96       	adiw	r26, 0x03	; 3
    18da:	9c 93       	st	X, r25
    18dc:	8e 93       	st	-X, r24
    18de:	12 97       	sbiw	r26, 0x02	; 2
    18e0:	e0 e0       	ldi	r30, 0x00	; 0
    18e2:	f0 e0       	ldi	r31, 0x00	; 0
    18e4:	8a 81       	ldd	r24, Y+2	; 0x02
    18e6:	9b 81       	ldd	r25, Y+3	; 0x03
    18e8:	00 97       	sbiw	r24, 0x00	; 0
    18ea:	19 f0       	breq	.+6      	; 0x18f2 <free+0xe4>
    18ec:	fe 01       	movw	r30, r28
    18ee:	ec 01       	movw	r28, r24
    18f0:	f9 cf       	rjmp	.-14     	; 0x18e4 <free+0xd6>
    18f2:	ce 01       	movw	r24, r28
    18f4:	02 96       	adiw	r24, 0x02	; 2
    18f6:	28 81       	ld	r18, Y
    18f8:	39 81       	ldd	r19, Y+1	; 0x01
    18fa:	82 0f       	add	r24, r18
    18fc:	93 1f       	adc	r25, r19
    18fe:	20 91 dc 02 	lds	r18, 0x02DC
    1902:	30 91 dd 02 	lds	r19, 0x02DD
    1906:	28 17       	cp	r18, r24
    1908:	39 07       	cpc	r19, r25
    190a:	69 f4       	brne	.+26     	; 0x1926 <free+0x118>
    190c:	30 97       	sbiw	r30, 0x00	; 0
    190e:	29 f4       	brne	.+10     	; 0x191a <free+0x10c>
    1910:	10 92 df 02 	sts	0x02DF, r1
    1914:	10 92 de 02 	sts	0x02DE, r1
    1918:	02 c0       	rjmp	.+4      	; 0x191e <free+0x110>
    191a:	13 82       	std	Z+3, r1	; 0x03
    191c:	12 82       	std	Z+2, r1	; 0x02
    191e:	d0 93 dd 02 	sts	0x02DD, r29
    1922:	c0 93 dc 02 	sts	0x02DC, r28
    1926:	df 91       	pop	r29
    1928:	cf 91       	pop	r28
    192a:	08 95       	ret

0000192c <__ftoa_engine>:
    192c:	28 30       	cpi	r18, 0x08	; 8
    192e:	08 f0       	brcs	.+2      	; 0x1932 <__ftoa_engine+0x6>
    1930:	27 e0       	ldi	r18, 0x07	; 7
    1932:	33 27       	eor	r19, r19
    1934:	da 01       	movw	r26, r20
    1936:	99 0f       	add	r25, r25
    1938:	31 1d       	adc	r19, r1
    193a:	87 fd       	sbrc	r24, 7
    193c:	91 60       	ori	r25, 0x01	; 1
    193e:	00 96       	adiw	r24, 0x00	; 0
    1940:	61 05       	cpc	r22, r1
    1942:	71 05       	cpc	r23, r1
    1944:	39 f4       	brne	.+14     	; 0x1954 <__ftoa_engine+0x28>
    1946:	32 60       	ori	r19, 0x02	; 2
    1948:	2e 5f       	subi	r18, 0xFE	; 254
    194a:	3d 93       	st	X+, r19
    194c:	30 e3       	ldi	r19, 0x30	; 48
    194e:	2a 95       	dec	r18
    1950:	e1 f7       	brne	.-8      	; 0x194a <__ftoa_engine+0x1e>
    1952:	08 95       	ret
    1954:	9f 3f       	cpi	r25, 0xFF	; 255
    1956:	30 f0       	brcs	.+12     	; 0x1964 <__ftoa_engine+0x38>
    1958:	80 38       	cpi	r24, 0x80	; 128
    195a:	71 05       	cpc	r23, r1
    195c:	61 05       	cpc	r22, r1
    195e:	09 f0       	breq	.+2      	; 0x1962 <__ftoa_engine+0x36>
    1960:	3c 5f       	subi	r19, 0xFC	; 252
    1962:	3c 5f       	subi	r19, 0xFC	; 252
    1964:	3d 93       	st	X+, r19
    1966:	91 30       	cpi	r25, 0x01	; 1
    1968:	08 f0       	brcs	.+2      	; 0x196c <__ftoa_engine+0x40>
    196a:	80 68       	ori	r24, 0x80	; 128
    196c:	91 1d       	adc	r25, r1
    196e:	df 93       	push	r29
    1970:	cf 93       	push	r28
    1972:	1f 93       	push	r17
    1974:	0f 93       	push	r16
    1976:	ff 92       	push	r15
    1978:	ef 92       	push	r14
    197a:	19 2f       	mov	r17, r25
    197c:	98 7f       	andi	r25, 0xF8	; 248
    197e:	96 95       	lsr	r25
    1980:	e9 2f       	mov	r30, r25
    1982:	96 95       	lsr	r25
    1984:	96 95       	lsr	r25
    1986:	e9 0f       	add	r30, r25
    1988:	ff 27       	eor	r31, r31
    198a:	e8 51       	subi	r30, 0x18	; 24
    198c:	fe 4f       	sbci	r31, 0xFE	; 254
    198e:	99 27       	eor	r25, r25
    1990:	33 27       	eor	r19, r19
    1992:	ee 24       	eor	r14, r14
    1994:	ff 24       	eor	r15, r15
    1996:	a7 01       	movw	r20, r14
    1998:	e7 01       	movw	r28, r14
    199a:	05 90       	lpm	r0, Z+
    199c:	08 94       	sec
    199e:	07 94       	ror	r0
    19a0:	28 f4       	brcc	.+10     	; 0x19ac <__ftoa_engine+0x80>
    19a2:	36 0f       	add	r19, r22
    19a4:	e7 1e       	adc	r14, r23
    19a6:	f8 1e       	adc	r15, r24
    19a8:	49 1f       	adc	r20, r25
    19aa:	51 1d       	adc	r21, r1
    19ac:	66 0f       	add	r22, r22
    19ae:	77 1f       	adc	r23, r23
    19b0:	88 1f       	adc	r24, r24
    19b2:	99 1f       	adc	r25, r25
    19b4:	06 94       	lsr	r0
    19b6:	a1 f7       	brne	.-24     	; 0x19a0 <__ftoa_engine+0x74>
    19b8:	05 90       	lpm	r0, Z+
    19ba:	07 94       	ror	r0
    19bc:	28 f4       	brcc	.+10     	; 0x19c8 <__ftoa_engine+0x9c>
    19be:	e7 0e       	add	r14, r23
    19c0:	f8 1e       	adc	r15, r24
    19c2:	49 1f       	adc	r20, r25
    19c4:	56 1f       	adc	r21, r22
    19c6:	c1 1d       	adc	r28, r1
    19c8:	77 0f       	add	r23, r23
    19ca:	88 1f       	adc	r24, r24
    19cc:	99 1f       	adc	r25, r25
    19ce:	66 1f       	adc	r22, r22
    19d0:	06 94       	lsr	r0
    19d2:	a1 f7       	brne	.-24     	; 0x19bc <__ftoa_engine+0x90>
    19d4:	05 90       	lpm	r0, Z+
    19d6:	07 94       	ror	r0
    19d8:	28 f4       	brcc	.+10     	; 0x19e4 <__ftoa_engine+0xb8>
    19da:	f8 0e       	add	r15, r24
    19dc:	49 1f       	adc	r20, r25
    19de:	56 1f       	adc	r21, r22
    19e0:	c7 1f       	adc	r28, r23
    19e2:	d1 1d       	adc	r29, r1
    19e4:	88 0f       	add	r24, r24
    19e6:	99 1f       	adc	r25, r25
    19e8:	66 1f       	adc	r22, r22
    19ea:	77 1f       	adc	r23, r23
    19ec:	06 94       	lsr	r0
    19ee:	a1 f7       	brne	.-24     	; 0x19d8 <__ftoa_engine+0xac>
    19f0:	05 90       	lpm	r0, Z+
    19f2:	07 94       	ror	r0
    19f4:	20 f4       	brcc	.+8      	; 0x19fe <__ftoa_engine+0xd2>
    19f6:	49 0f       	add	r20, r25
    19f8:	56 1f       	adc	r21, r22
    19fa:	c7 1f       	adc	r28, r23
    19fc:	d8 1f       	adc	r29, r24
    19fe:	99 0f       	add	r25, r25
    1a00:	66 1f       	adc	r22, r22
    1a02:	77 1f       	adc	r23, r23
    1a04:	88 1f       	adc	r24, r24
    1a06:	06 94       	lsr	r0
    1a08:	a9 f7       	brne	.-22     	; 0x19f4 <__ftoa_engine+0xc8>
    1a0a:	84 91       	lpm	r24, Z
    1a0c:	10 95       	com	r17
    1a0e:	17 70       	andi	r17, 0x07	; 7
    1a10:	41 f0       	breq	.+16     	; 0x1a22 <__ftoa_engine+0xf6>
    1a12:	d6 95       	lsr	r29
    1a14:	c7 95       	ror	r28
    1a16:	57 95       	ror	r21
    1a18:	47 95       	ror	r20
    1a1a:	f7 94       	ror	r15
    1a1c:	e7 94       	ror	r14
    1a1e:	1a 95       	dec	r17
    1a20:	c1 f7       	brne	.-16     	; 0x1a12 <__ftoa_engine+0xe6>
    1a22:	ee e8       	ldi	r30, 0x8E	; 142
    1a24:	f1 e0       	ldi	r31, 0x01	; 1
    1a26:	68 94       	set
    1a28:	15 90       	lpm	r1, Z+
    1a2a:	15 91       	lpm	r17, Z+
    1a2c:	35 91       	lpm	r19, Z+
    1a2e:	65 91       	lpm	r22, Z+
    1a30:	95 91       	lpm	r25, Z+
    1a32:	05 90       	lpm	r0, Z+
    1a34:	7f e2       	ldi	r23, 0x2F	; 47
    1a36:	73 95       	inc	r23
    1a38:	e1 18       	sub	r14, r1
    1a3a:	f1 0a       	sbc	r15, r17
    1a3c:	43 0b       	sbc	r20, r19
    1a3e:	56 0b       	sbc	r21, r22
    1a40:	c9 0b       	sbc	r28, r25
    1a42:	d0 09       	sbc	r29, r0
    1a44:	c0 f7       	brcc	.-16     	; 0x1a36 <__ftoa_engine+0x10a>
    1a46:	e1 0c       	add	r14, r1
    1a48:	f1 1e       	adc	r15, r17
    1a4a:	43 1f       	adc	r20, r19
    1a4c:	56 1f       	adc	r21, r22
    1a4e:	c9 1f       	adc	r28, r25
    1a50:	d0 1d       	adc	r29, r0
    1a52:	7e f4       	brtc	.+30     	; 0x1a72 <__ftoa_engine+0x146>
    1a54:	70 33       	cpi	r23, 0x30	; 48
    1a56:	11 f4       	brne	.+4      	; 0x1a5c <__ftoa_engine+0x130>
    1a58:	8a 95       	dec	r24
    1a5a:	e6 cf       	rjmp	.-52     	; 0x1a28 <__ftoa_engine+0xfc>
    1a5c:	e8 94       	clt
    1a5e:	01 50       	subi	r16, 0x01	; 1
    1a60:	30 f0       	brcs	.+12     	; 0x1a6e <__ftoa_engine+0x142>
    1a62:	08 0f       	add	r16, r24
    1a64:	0a f4       	brpl	.+2      	; 0x1a68 <__ftoa_engine+0x13c>
    1a66:	00 27       	eor	r16, r16
    1a68:	02 17       	cp	r16, r18
    1a6a:	08 f4       	brcc	.+2      	; 0x1a6e <__ftoa_engine+0x142>
    1a6c:	20 2f       	mov	r18, r16
    1a6e:	23 95       	inc	r18
    1a70:	02 2f       	mov	r16, r18
    1a72:	7a 33       	cpi	r23, 0x3A	; 58
    1a74:	28 f0       	brcs	.+10     	; 0x1a80 <__ftoa_engine+0x154>
    1a76:	79 e3       	ldi	r23, 0x39	; 57
    1a78:	7d 93       	st	X+, r23
    1a7a:	2a 95       	dec	r18
    1a7c:	e9 f7       	brne	.-6      	; 0x1a78 <__ftoa_engine+0x14c>
    1a7e:	10 c0       	rjmp	.+32     	; 0x1aa0 <__ftoa_engine+0x174>
    1a80:	7d 93       	st	X+, r23
    1a82:	2a 95       	dec	r18
    1a84:	89 f6       	brne	.-94     	; 0x1a28 <__ftoa_engine+0xfc>
    1a86:	06 94       	lsr	r0
    1a88:	97 95       	ror	r25
    1a8a:	67 95       	ror	r22
    1a8c:	37 95       	ror	r19
    1a8e:	17 95       	ror	r17
    1a90:	17 94       	ror	r1
    1a92:	e1 18       	sub	r14, r1
    1a94:	f1 0a       	sbc	r15, r17
    1a96:	43 0b       	sbc	r20, r19
    1a98:	56 0b       	sbc	r21, r22
    1a9a:	c9 0b       	sbc	r28, r25
    1a9c:	d0 09       	sbc	r29, r0
    1a9e:	98 f0       	brcs	.+38     	; 0x1ac6 <__ftoa_engine+0x19a>
    1aa0:	23 95       	inc	r18
    1aa2:	7e 91       	ld	r23, -X
    1aa4:	73 95       	inc	r23
    1aa6:	7a 33       	cpi	r23, 0x3A	; 58
    1aa8:	08 f0       	brcs	.+2      	; 0x1aac <__ftoa_engine+0x180>
    1aaa:	70 e3       	ldi	r23, 0x30	; 48
    1aac:	7c 93       	st	X, r23
    1aae:	20 13       	cpse	r18, r16
    1ab0:	b8 f7       	brcc	.-18     	; 0x1aa0 <__ftoa_engine+0x174>
    1ab2:	7e 91       	ld	r23, -X
    1ab4:	70 61       	ori	r23, 0x10	; 16
    1ab6:	7d 93       	st	X+, r23
    1ab8:	30 f0       	brcs	.+12     	; 0x1ac6 <__ftoa_engine+0x19a>
    1aba:	83 95       	inc	r24
    1abc:	71 e3       	ldi	r23, 0x31	; 49
    1abe:	7d 93       	st	X+, r23
    1ac0:	70 e3       	ldi	r23, 0x30	; 48
    1ac2:	2a 95       	dec	r18
    1ac4:	e1 f7       	brne	.-8      	; 0x1abe <__ftoa_engine+0x192>
    1ac6:	11 24       	eor	r1, r1
    1ac8:	ef 90       	pop	r14
    1aca:	ff 90       	pop	r15
    1acc:	0f 91       	pop	r16
    1ace:	1f 91       	pop	r17
    1ad0:	cf 91       	pop	r28
    1ad2:	df 91       	pop	r29
    1ad4:	99 27       	eor	r25, r25
    1ad6:	87 fd       	sbrc	r24, 7
    1ad8:	90 95       	com	r25
    1ada:	08 95       	ret

00001adc <strnlen_P>:
    1adc:	fc 01       	movw	r30, r24
    1ade:	05 90       	lpm	r0, Z+
    1ae0:	61 50       	subi	r22, 0x01	; 1
    1ae2:	70 40       	sbci	r23, 0x00	; 0
    1ae4:	01 10       	cpse	r0, r1
    1ae6:	d8 f7       	brcc	.-10     	; 0x1ade <strnlen_P+0x2>
    1ae8:	80 95       	com	r24
    1aea:	90 95       	com	r25
    1aec:	8e 0f       	add	r24, r30
    1aee:	9f 1f       	adc	r25, r31
    1af0:	08 95       	ret

00001af2 <strnlen>:
    1af2:	fc 01       	movw	r30, r24
    1af4:	61 50       	subi	r22, 0x01	; 1
    1af6:	70 40       	sbci	r23, 0x00	; 0
    1af8:	01 90       	ld	r0, Z+
    1afa:	01 10       	cpse	r0, r1
    1afc:	d8 f7       	brcc	.-10     	; 0x1af4 <strnlen+0x2>
    1afe:	80 95       	com	r24
    1b00:	90 95       	com	r25
    1b02:	8e 0f       	add	r24, r30
    1b04:	9f 1f       	adc	r25, r31
    1b06:	08 95       	ret

00001b08 <fdevopen>:
    1b08:	0f 93       	push	r16
    1b0a:	1f 93       	push	r17
    1b0c:	cf 93       	push	r28
    1b0e:	df 93       	push	r29
    1b10:	ec 01       	movw	r28, r24
    1b12:	8b 01       	movw	r16, r22
    1b14:	00 97       	sbiw	r24, 0x00	; 0
    1b16:	31 f4       	brne	.+12     	; 0x1b24 <fdevopen+0x1c>
    1b18:	61 15       	cp	r22, r1
    1b1a:	71 05       	cpc	r23, r1
    1b1c:	19 f4       	brne	.+6      	; 0x1b24 <fdevopen+0x1c>
    1b1e:	80 e0       	ldi	r24, 0x00	; 0
    1b20:	90 e0       	ldi	r25, 0x00	; 0
    1b22:	37 c0       	rjmp	.+110    	; 0x1b92 <fdevopen+0x8a>
    1b24:	6e e0       	ldi	r22, 0x0E	; 14
    1b26:	70 e0       	ldi	r23, 0x00	; 0
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	90 e0       	ldi	r25, 0x00	; 0
    1b2c:	05 d1       	rcall	.+522    	; 0x1d38 <calloc>
    1b2e:	fc 01       	movw	r30, r24
    1b30:	00 97       	sbiw	r24, 0x00	; 0
    1b32:	a9 f3       	breq	.-22     	; 0x1b1e <fdevopen+0x16>
    1b34:	80 e8       	ldi	r24, 0x80	; 128
    1b36:	83 83       	std	Z+3, r24	; 0x03
    1b38:	01 15       	cp	r16, r1
    1b3a:	11 05       	cpc	r17, r1
    1b3c:	71 f0       	breq	.+28     	; 0x1b5a <fdevopen+0x52>
    1b3e:	13 87       	std	Z+11, r17	; 0x0b
    1b40:	02 87       	std	Z+10, r16	; 0x0a
    1b42:	81 e8       	ldi	r24, 0x81	; 129
    1b44:	83 83       	std	Z+3, r24	; 0x03
    1b46:	80 91 e0 02 	lds	r24, 0x02E0
    1b4a:	90 91 e1 02 	lds	r25, 0x02E1
    1b4e:	89 2b       	or	r24, r25
    1b50:	21 f4       	brne	.+8      	; 0x1b5a <fdevopen+0x52>
    1b52:	f0 93 e1 02 	sts	0x02E1, r31
    1b56:	e0 93 e0 02 	sts	0x02E0, r30
    1b5a:	20 97       	sbiw	r28, 0x00	; 0
    1b5c:	c9 f0       	breq	.+50     	; 0x1b90 <fdevopen+0x88>
    1b5e:	d1 87       	std	Z+9, r29	; 0x09
    1b60:	c0 87       	std	Z+8, r28	; 0x08
    1b62:	83 81       	ldd	r24, Z+3	; 0x03
    1b64:	82 60       	ori	r24, 0x02	; 2
    1b66:	83 83       	std	Z+3, r24	; 0x03
    1b68:	80 91 e2 02 	lds	r24, 0x02E2
    1b6c:	90 91 e3 02 	lds	r25, 0x02E3
    1b70:	89 2b       	or	r24, r25
    1b72:	71 f4       	brne	.+28     	; 0x1b90 <fdevopen+0x88>
    1b74:	f0 93 e3 02 	sts	0x02E3, r31
    1b78:	e0 93 e2 02 	sts	0x02E2, r30
    1b7c:	80 91 e4 02 	lds	r24, 0x02E4
    1b80:	90 91 e5 02 	lds	r25, 0x02E5
    1b84:	89 2b       	or	r24, r25
    1b86:	21 f4       	brne	.+8      	; 0x1b90 <fdevopen+0x88>
    1b88:	f0 93 e5 02 	sts	0x02E5, r31
    1b8c:	e0 93 e4 02 	sts	0x02E4, r30
    1b90:	cf 01       	movw	r24, r30
    1b92:	df 91       	pop	r29
    1b94:	cf 91       	pop	r28
    1b96:	1f 91       	pop	r17
    1b98:	0f 91       	pop	r16
    1b9a:	08 95       	ret

00001b9c <fputc>:
    1b9c:	0f 93       	push	r16
    1b9e:	1f 93       	push	r17
    1ba0:	cf 93       	push	r28
    1ba2:	df 93       	push	r29
    1ba4:	18 2f       	mov	r17, r24
    1ba6:	09 2f       	mov	r16, r25
    1ba8:	eb 01       	movw	r28, r22
    1baa:	8b 81       	ldd	r24, Y+3	; 0x03
    1bac:	81 fd       	sbrc	r24, 1
    1bae:	03 c0       	rjmp	.+6      	; 0x1bb6 <fputc+0x1a>
    1bb0:	8f ef       	ldi	r24, 0xFF	; 255
    1bb2:	9f ef       	ldi	r25, 0xFF	; 255
    1bb4:	20 c0       	rjmp	.+64     	; 0x1bf6 <fputc+0x5a>
    1bb6:	82 ff       	sbrs	r24, 2
    1bb8:	10 c0       	rjmp	.+32     	; 0x1bda <fputc+0x3e>
    1bba:	4e 81       	ldd	r20, Y+6	; 0x06
    1bbc:	5f 81       	ldd	r21, Y+7	; 0x07
    1bbe:	2c 81       	ldd	r18, Y+4	; 0x04
    1bc0:	3d 81       	ldd	r19, Y+5	; 0x05
    1bc2:	42 17       	cp	r20, r18
    1bc4:	53 07       	cpc	r21, r19
    1bc6:	7c f4       	brge	.+30     	; 0x1be6 <fputc+0x4a>
    1bc8:	e8 81       	ld	r30, Y
    1bca:	f9 81       	ldd	r31, Y+1	; 0x01
    1bcc:	9f 01       	movw	r18, r30
    1bce:	2f 5f       	subi	r18, 0xFF	; 255
    1bd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1bd2:	39 83       	std	Y+1, r19	; 0x01
    1bd4:	28 83       	st	Y, r18
    1bd6:	10 83       	st	Z, r17
    1bd8:	06 c0       	rjmp	.+12     	; 0x1be6 <fputc+0x4a>
    1bda:	e8 85       	ldd	r30, Y+8	; 0x08
    1bdc:	f9 85       	ldd	r31, Y+9	; 0x09
    1bde:	81 2f       	mov	r24, r17
    1be0:	19 95       	eicall
    1be2:	89 2b       	or	r24, r25
    1be4:	29 f7       	brne	.-54     	; 0x1bb0 <fputc+0x14>
    1be6:	2e 81       	ldd	r18, Y+6	; 0x06
    1be8:	3f 81       	ldd	r19, Y+7	; 0x07
    1bea:	2f 5f       	subi	r18, 0xFF	; 255
    1bec:	3f 4f       	sbci	r19, 0xFF	; 255
    1bee:	3f 83       	std	Y+7, r19	; 0x07
    1bf0:	2e 83       	std	Y+6, r18	; 0x06
    1bf2:	81 2f       	mov	r24, r17
    1bf4:	90 2f       	mov	r25, r16
    1bf6:	df 91       	pop	r29
    1bf8:	cf 91       	pop	r28
    1bfa:	1f 91       	pop	r17
    1bfc:	0f 91       	pop	r16
    1bfe:	08 95       	ret

00001c00 <printf>:
    1c00:	cf 93       	push	r28
    1c02:	df 93       	push	r29
    1c04:	cd b7       	in	r28, 0x3d	; 61
    1c06:	de b7       	in	r29, 0x3e	; 62
    1c08:	fe 01       	movw	r30, r28
    1c0a:	36 96       	adiw	r30, 0x06	; 6
    1c0c:	61 91       	ld	r22, Z+
    1c0e:	71 91       	ld	r23, Z+
    1c10:	af 01       	movw	r20, r30
    1c12:	80 91 e2 02 	lds	r24, 0x02E2
    1c16:	90 91 e3 02 	lds	r25, 0x02E3
    1c1a:	d4 d9       	rcall	.-3160   	; 0xfc4 <vfprintf>
    1c1c:	df 91       	pop	r29
    1c1e:	cf 91       	pop	r28
    1c20:	08 95       	ret

00001c22 <puts>:
    1c22:	0f 93       	push	r16
    1c24:	1f 93       	push	r17
    1c26:	cf 93       	push	r28
    1c28:	df 93       	push	r29
    1c2a:	e0 91 e2 02 	lds	r30, 0x02E2
    1c2e:	f0 91 e3 02 	lds	r31, 0x02E3
    1c32:	23 81       	ldd	r18, Z+3	; 0x03
    1c34:	21 ff       	sbrs	r18, 1
    1c36:	1b c0       	rjmp	.+54     	; 0x1c6e <puts+0x4c>
    1c38:	ec 01       	movw	r28, r24
    1c3a:	00 e0       	ldi	r16, 0x00	; 0
    1c3c:	10 e0       	ldi	r17, 0x00	; 0
    1c3e:	89 91       	ld	r24, Y+
    1c40:	60 91 e2 02 	lds	r22, 0x02E2
    1c44:	70 91 e3 02 	lds	r23, 0x02E3
    1c48:	db 01       	movw	r26, r22
    1c4a:	18 96       	adiw	r26, 0x08	; 8
    1c4c:	ed 91       	ld	r30, X+
    1c4e:	fc 91       	ld	r31, X
    1c50:	19 97       	sbiw	r26, 0x09	; 9
    1c52:	88 23       	and	r24, r24
    1c54:	31 f0       	breq	.+12     	; 0x1c62 <puts+0x40>
    1c56:	19 95       	eicall
    1c58:	89 2b       	or	r24, r25
    1c5a:	89 f3       	breq	.-30     	; 0x1c3e <puts+0x1c>
    1c5c:	0f ef       	ldi	r16, 0xFF	; 255
    1c5e:	1f ef       	ldi	r17, 0xFF	; 255
    1c60:	ee cf       	rjmp	.-36     	; 0x1c3e <puts+0x1c>
    1c62:	8a e0       	ldi	r24, 0x0A	; 10
    1c64:	19 95       	eicall
    1c66:	89 2b       	or	r24, r25
    1c68:	11 f4       	brne	.+4      	; 0x1c6e <puts+0x4c>
    1c6a:	c8 01       	movw	r24, r16
    1c6c:	02 c0       	rjmp	.+4      	; 0x1c72 <puts+0x50>
    1c6e:	8f ef       	ldi	r24, 0xFF	; 255
    1c70:	9f ef       	ldi	r25, 0xFF	; 255
    1c72:	df 91       	pop	r29
    1c74:	cf 91       	pop	r28
    1c76:	1f 91       	pop	r17
    1c78:	0f 91       	pop	r16
    1c7a:	08 95       	ret

00001c7c <__ultoa_invert>:
    1c7c:	fa 01       	movw	r30, r20
    1c7e:	aa 27       	eor	r26, r26
    1c80:	28 30       	cpi	r18, 0x08	; 8
    1c82:	51 f1       	breq	.+84     	; 0x1cd8 <__ultoa_invert+0x5c>
    1c84:	20 31       	cpi	r18, 0x10	; 16
    1c86:	81 f1       	breq	.+96     	; 0x1ce8 <__ultoa_invert+0x6c>
    1c88:	e8 94       	clt
    1c8a:	6f 93       	push	r22
    1c8c:	6e 7f       	andi	r22, 0xFE	; 254
    1c8e:	6e 5f       	subi	r22, 0xFE	; 254
    1c90:	7f 4f       	sbci	r23, 0xFF	; 255
    1c92:	8f 4f       	sbci	r24, 0xFF	; 255
    1c94:	9f 4f       	sbci	r25, 0xFF	; 255
    1c96:	af 4f       	sbci	r26, 0xFF	; 255
    1c98:	b1 e0       	ldi	r27, 0x01	; 1
    1c9a:	3e d0       	rcall	.+124    	; 0x1d18 <__ultoa_invert+0x9c>
    1c9c:	b4 e0       	ldi	r27, 0x04	; 4
    1c9e:	3c d0       	rcall	.+120    	; 0x1d18 <__ultoa_invert+0x9c>
    1ca0:	67 0f       	add	r22, r23
    1ca2:	78 1f       	adc	r23, r24
    1ca4:	89 1f       	adc	r24, r25
    1ca6:	9a 1f       	adc	r25, r26
    1ca8:	a1 1d       	adc	r26, r1
    1caa:	68 0f       	add	r22, r24
    1cac:	79 1f       	adc	r23, r25
    1cae:	8a 1f       	adc	r24, r26
    1cb0:	91 1d       	adc	r25, r1
    1cb2:	a1 1d       	adc	r26, r1
    1cb4:	6a 0f       	add	r22, r26
    1cb6:	71 1d       	adc	r23, r1
    1cb8:	81 1d       	adc	r24, r1
    1cba:	91 1d       	adc	r25, r1
    1cbc:	a1 1d       	adc	r26, r1
    1cbe:	20 d0       	rcall	.+64     	; 0x1d00 <__ultoa_invert+0x84>
    1cc0:	09 f4       	brne	.+2      	; 0x1cc4 <__ultoa_invert+0x48>
    1cc2:	68 94       	set
    1cc4:	3f 91       	pop	r19
    1cc6:	2a e0       	ldi	r18, 0x0A	; 10
    1cc8:	26 9f       	mul	r18, r22
    1cca:	11 24       	eor	r1, r1
    1ccc:	30 19       	sub	r19, r0
    1cce:	30 5d       	subi	r19, 0xD0	; 208
    1cd0:	31 93       	st	Z+, r19
    1cd2:	de f6       	brtc	.-74     	; 0x1c8a <__ultoa_invert+0xe>
    1cd4:	cf 01       	movw	r24, r30
    1cd6:	08 95       	ret
    1cd8:	46 2f       	mov	r20, r22
    1cda:	47 70       	andi	r20, 0x07	; 7
    1cdc:	40 5d       	subi	r20, 0xD0	; 208
    1cde:	41 93       	st	Z+, r20
    1ce0:	b3 e0       	ldi	r27, 0x03	; 3
    1ce2:	0f d0       	rcall	.+30     	; 0x1d02 <__ultoa_invert+0x86>
    1ce4:	c9 f7       	brne	.-14     	; 0x1cd8 <__ultoa_invert+0x5c>
    1ce6:	f6 cf       	rjmp	.-20     	; 0x1cd4 <__ultoa_invert+0x58>
    1ce8:	46 2f       	mov	r20, r22
    1cea:	4f 70       	andi	r20, 0x0F	; 15
    1cec:	40 5d       	subi	r20, 0xD0	; 208
    1cee:	4a 33       	cpi	r20, 0x3A	; 58
    1cf0:	18 f0       	brcs	.+6      	; 0x1cf8 <__ultoa_invert+0x7c>
    1cf2:	49 5d       	subi	r20, 0xD9	; 217
    1cf4:	31 fd       	sbrc	r19, 1
    1cf6:	40 52       	subi	r20, 0x20	; 32
    1cf8:	41 93       	st	Z+, r20
    1cfa:	02 d0       	rcall	.+4      	; 0x1d00 <__ultoa_invert+0x84>
    1cfc:	a9 f7       	brne	.-22     	; 0x1ce8 <__ultoa_invert+0x6c>
    1cfe:	ea cf       	rjmp	.-44     	; 0x1cd4 <__ultoa_invert+0x58>
    1d00:	b4 e0       	ldi	r27, 0x04	; 4
    1d02:	a6 95       	lsr	r26
    1d04:	97 95       	ror	r25
    1d06:	87 95       	ror	r24
    1d08:	77 95       	ror	r23
    1d0a:	67 95       	ror	r22
    1d0c:	ba 95       	dec	r27
    1d0e:	c9 f7       	brne	.-14     	; 0x1d02 <__ultoa_invert+0x86>
    1d10:	00 97       	sbiw	r24, 0x00	; 0
    1d12:	61 05       	cpc	r22, r1
    1d14:	71 05       	cpc	r23, r1
    1d16:	08 95       	ret
    1d18:	9b 01       	movw	r18, r22
    1d1a:	ac 01       	movw	r20, r24
    1d1c:	0a 2e       	mov	r0, r26
    1d1e:	06 94       	lsr	r0
    1d20:	57 95       	ror	r21
    1d22:	47 95       	ror	r20
    1d24:	37 95       	ror	r19
    1d26:	27 95       	ror	r18
    1d28:	ba 95       	dec	r27
    1d2a:	c9 f7       	brne	.-14     	; 0x1d1e <__ultoa_invert+0xa2>
    1d2c:	62 0f       	add	r22, r18
    1d2e:	73 1f       	adc	r23, r19
    1d30:	84 1f       	adc	r24, r20
    1d32:	95 1f       	adc	r25, r21
    1d34:	a0 1d       	adc	r26, r0
    1d36:	08 95       	ret

00001d38 <calloc>:
    1d38:	0f 93       	push	r16
    1d3a:	1f 93       	push	r17
    1d3c:	cf 93       	push	r28
    1d3e:	df 93       	push	r29
    1d40:	86 9f       	mul	r24, r22
    1d42:	80 01       	movw	r16, r0
    1d44:	87 9f       	mul	r24, r23
    1d46:	10 0d       	add	r17, r0
    1d48:	96 9f       	mul	r25, r22
    1d4a:	10 0d       	add	r17, r0
    1d4c:	11 24       	eor	r1, r1
    1d4e:	c8 01       	movw	r24, r16
    1d50:	c6 dc       	rcall	.-1652   	; 0x16de <malloc>
    1d52:	ec 01       	movw	r28, r24
    1d54:	00 97       	sbiw	r24, 0x00	; 0
    1d56:	21 f0       	breq	.+8      	; 0x1d60 <calloc+0x28>
    1d58:	a8 01       	movw	r20, r16
    1d5a:	60 e0       	ldi	r22, 0x00	; 0
    1d5c:	70 e0       	ldi	r23, 0x00	; 0
    1d5e:	06 d0       	rcall	.+12     	; 0x1d6c <memset>
    1d60:	ce 01       	movw	r24, r28
    1d62:	df 91       	pop	r29
    1d64:	cf 91       	pop	r28
    1d66:	1f 91       	pop	r17
    1d68:	0f 91       	pop	r16
    1d6a:	08 95       	ret

00001d6c <memset>:
    1d6c:	dc 01       	movw	r26, r24
    1d6e:	01 c0       	rjmp	.+2      	; 0x1d72 <memset+0x6>
    1d70:	6d 93       	st	X+, r22
    1d72:	41 50       	subi	r20, 0x01	; 1
    1d74:	50 40       	sbci	r21, 0x00	; 0
    1d76:	e0 f7       	brcc	.-8      	; 0x1d70 <memset+0x4>
    1d78:	08 95       	ret

00001d7a <_exit>:
    1d7a:	f8 94       	cli

00001d7c <__stop_program>:
    1d7c:	ff cf       	rjmp	.-2      	; 0x1d7c <__stop_program>
