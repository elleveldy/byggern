
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ee  00800200  00001126  000011ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001126  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002ee  008002ee  000012a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012a8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001b8  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001561  00000000  00000000  000014bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000942  00000000  00000000  00002a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c31  00000000  00000000  0000335f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000044c  00000000  00000000  00003f90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000514  00000000  00000000  000043dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000913  00000000  00000000  000048f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000148  00000000  00000000  00005203  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e6 e2       	ldi	r30, 0x26	; 38
      fc:	f1 e1       	ldi	r31, 0x11	; 17
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	ae 3e       	cpi	r26, 0xEE	; 238
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	23 e0       	ldi	r18, 0x03	; 3
     110:	ae ee       	ldi	r26, 0xEE	; 238
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a3 30       	cpi	r26, 0x03	; 3
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	03 d0       	rcall	.+6      	; 0x126 <main>
     120:	0c 94 91 08 	jmp	0x1122	; 0x1122 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <main>:
check if header files are included in their respective c files, and if they should be
to avoid "implicit declaration of function*/



int main(void){
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	2b 97       	sbiw	r28, 0x0b	; 11
     130:	0f b6       	in	r0, 0x3f	; 63
     132:	f8 94       	cli
     134:	de bf       	out	0x3e, r29	; 62
     136:	0f be       	out	0x3f, r0	; 63
     138:	cd bf       	out	0x3d, r28	; 61
		PORTB = 0;
		_delay_ms(500);
	}*/
	
	
	MCUCR |= (1 << SRE);
     13a:	85 b7       	in	r24, 0x35	; 53
     13c:	80 68       	ori	r24, 0x80	; 128
     13e:	85 bf       	out	0x35, r24	; 53
	uart_Init(MYUBRR);
     140:	87 e6       	ldi	r24, 0x67	; 103
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	f8 d1       	rcall	.+1008   	; 0x536 <uart_Init>
	//
	
	
	can_init(MODE_NORMAL);
     146:	80 e0       	ldi	r24, 0x00	; 0
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	08 d0       	rcall	.+16     	; 0x15c <can_init>
	pwm_init();
     14c:	34 d1       	rcall	.+616    	; 0x3b6 <pwm_init>

	DDRE |= (1 << 3);
     14e:	6b 9a       	sbi	0x0d, 3	; 13
		/*can_test_recieve();
		printf("\nin main while\n");*/
		
		
		
		canjoy_recieve();
     150:	ce 01       	movw	r24, r28
     152:	01 96       	adiw	r24, 0x01	; 1
     154:	b6 d0       	rcall	.+364    	; 0x2c2 <canjoy_recieve>
		pwm_joystick_pulse(canjoy_joystick_x());
     156:	f3 d0       	rcall	.+486    	; 0x33e <canjoy_joystick_x>
     158:	80 d1       	rcall	.+768    	; 0x45a <pwm_joystick_pulse>
     15a:	fa cf       	rjmp	.-12     	; 0x150 <main+0x2a>

0000015c <can_init>:
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	ec 01       	movw	r28, r24
     162:	16 d1       	rcall	.+556    	; 0x390 <mcp2515_init>
     164:	4f ef       	ldi	r20, 0xFF	; 255
     166:	50 e0       	ldi	r21, 0x00	; 0
     168:	60 e6       	ldi	r22, 0x60	; 96
     16a:	70 e0       	ldi	r23, 0x00	; 0
     16c:	80 e6       	ldi	r24, 0x60	; 96
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	f6 d0       	rcall	.+492    	; 0x35e <mcp2515_bit_modify>
     172:	4f ef       	ldi	r20, 0xFF	; 255
     174:	50 e0       	ldi	r21, 0x00	; 0
     176:	60 e6       	ldi	r22, 0x60	; 96
     178:	70 e0       	ldi	r23, 0x00	; 0
     17a:	80 e7       	ldi	r24, 0x70	; 112
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	ef d0       	rcall	.+478    	; 0x35e <mcp2515_bit_modify>
     180:	ae 01       	movw	r20, r28
     182:	60 ee       	ldi	r22, 0xE0	; 224
     184:	70 e0       	ldi	r23, 0x00	; 0
     186:	8f e0       	ldi	r24, 0x0F	; 15
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	e9 d0       	rcall	.+466    	; 0x35e <mcp2515_bit_modify>
     18c:	24 98       	cbi	0x04, 4	; 4
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	08 95       	ret

00000194 <can_poll_interrupt>:
}


uint8_t can_poll_interrupt(){
	
	while(!(PINB & (1 << PB4))){}
     194:	1c 9b       	sbis	0x03, 4	; 3
     196:	fe cf       	rjmp	.-4      	; 0x194 <can_poll_interrupt>
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     198:	8c e2       	ldi	r24, 0x2C	; 44
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	d4 d0       	rcall	.+424    	; 0x346 <mcp2515_read>
     19e:	80 fd       	sbrc	r24, 0
     1a0:	07 c0       	rjmp	.+14     	; 0x1b0 <can_poll_interrupt+0x1c>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
	}
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     1a2:	8c e2       	ldi	r24, 0x2C	; 44
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	cf d0       	rcall	.+414    	; 0x346 <mcp2515_read>
     1a8:	81 ff       	sbrs	r24, 1
     1aa:	04 c0       	rjmp	.+8      	; 0x1b4 <can_poll_interrupt+0x20>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
     1ac:	80 e7       	ldi	r24, 0x70	; 112
     1ae:	08 95       	ret
	
	while(!(PINB & (1 << PB4))){}
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
     1b0:	80 e6       	ldi	r24, 0x60	; 96
     1b2:	08 95       	ret
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
	}
	return -1;
     1b4:	8f ef       	ldi	r24, 0xFF	; 255
}
     1b6:	08 95       	ret

000001b8 <can_recieve>:
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}

can_message can_recieve(can_message* msg){
     1b8:	7f 92       	push	r7
     1ba:	8f 92       	push	r8
     1bc:	9f 92       	push	r9
     1be:	af 92       	push	r10
     1c0:	bf 92       	push	r11
     1c2:	cf 92       	push	r12
     1c4:	df 92       	push	r13
     1c6:	ef 92       	push	r14
     1c8:	ff 92       	push	r15
     1ca:	0f 93       	push	r16
     1cc:	1f 93       	push	r17
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
     1d2:	cd b7       	in	r28, 0x3d	; 61
     1d4:	de b7       	in	r29, 0x3e	; 62
     1d6:	2b 97       	sbiw	r28, 0x0b	; 11
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	f8 94       	cli
     1dc:	de bf       	out	0x3e, r29	; 62
     1de:	0f be       	out	0x3f, r0	; 63
     1e0:	cd bf       	out	0x3d, r28	; 61
     1e2:	6c 01       	movw	r12, r24
	can_message m;
	
	uint8_t buffer_select = can_poll_interrupt();
     1e4:	d7 df       	rcall	.-82     	; 0x194 <can_poll_interrupt>
     1e6:	98 2e       	mov	r9, r24
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
     1e8:	08 2f       	mov	r16, r24
     1ea:	10 e0       	ldi	r17, 0x00	; 0
     1ec:	c8 01       	movw	r24, r16
     1ee:	01 96       	adiw	r24, 0x01	; 1
     1f0:	aa d0       	rcall	.+340    	; 0x346 <mcp2515_read>
     1f2:	7c 01       	movw	r14, r24
     1f4:	c8 01       	movw	r24, r16
     1f6:	02 96       	adiw	r24, 0x02	; 2
     1f8:	a6 d0       	rcall	.+332    	; 0x346 <mcp2515_read>
     1fa:	95 95       	asr	r25
     1fc:	87 95       	ror	r24
     1fe:	95 95       	asr	r25
     200:	87 95       	ror	r24
     202:	95 95       	asr	r25
     204:	87 95       	ror	r24
     206:	95 95       	asr	r25
     208:	87 95       	ror	r24
     20a:	95 95       	asr	r25
     20c:	87 95       	ror	r24
     20e:	ee 0c       	add	r14, r14
     210:	ff 1c       	adc	r15, r15
     212:	ee 0c       	add	r14, r14
     214:	ff 1c       	adc	r15, r15
     216:	ee 0c       	add	r14, r14
     218:	ff 1c       	adc	r15, r15
     21a:	5c 01       	movw	r10, r24
     21c:	ae 28       	or	r10, r14
     21e:	bf 28       	or	r11, r15
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
     220:	c8 01       	movw	r24, r16
     222:	05 96       	adiw	r24, 0x05	; 5
     224:	90 d0       	rcall	.+288    	; 0x346 <mcp2515_read>
     226:	8f 70       	andi	r24, 0x0F	; 15
     228:	78 2e       	mov	r7, r24
	
	for(uint8_t i = 0; i < m.length; i++){
     22a:	a9 f0       	breq	.+42     	; 0x256 <can_recieve+0x9e>
     22c:	8e 01       	movw	r16, r28
     22e:	0c 5f       	subi	r16, 0xFC	; 252
     230:	1f 4f       	sbci	r17, 0xFF	; 255
     232:	81 2c       	mov	r8, r1
     234:	ce 01       	movw	r24, r28
     236:	80 95       	com	r24
     238:	90 95       	com	r25
     23a:	03 96       	adiw	r24, 0x03	; 3
     23c:	7c 01       	movw	r14, r24
     23e:	e9 0c       	add	r14, r9
     240:	f1 1c       	adc	r15, r1
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
     242:	c7 01       	movw	r24, r14
     244:	80 0f       	add	r24, r16
     246:	91 1f       	adc	r25, r17
     248:	7e d0       	rcall	.+252    	; 0x346 <mcp2515_read>
     24a:	f8 01       	movw	r30, r16
     24c:	81 93       	st	Z+, r24
     24e:	8f 01       	movw	r16, r30
	uint8_t buffer_select = can_poll_interrupt();
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
	
	for(uint8_t i = 0; i < m.length; i++){
     250:	83 94       	inc	r8
     252:	87 10       	cpse	r8, r7
     254:	f6 cf       	rjmp	.-20     	; 0x242 <can_recieve+0x8a>
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	
	switch(buffer_select){
     256:	f0 e6       	ldi	r31, 0x60	; 96
     258:	9f 16       	cp	r9, r31
     25a:	21 f0       	breq	.+8      	; 0x264 <can_recieve+0xac>
     25c:	80 e7       	ldi	r24, 0x70	; 112
     25e:	98 16       	cp	r9, r24
     260:	49 f0       	breq	.+18     	; 0x274 <can_recieve+0xbc>
     262:	0f c0       	rjmp	.+30     	; 0x282 <can_recieve+0xca>
		case MCP_RXB0CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
     264:	40 e0       	ldi	r20, 0x00	; 0
     266:	50 e0       	ldi	r21, 0x00	; 0
     268:	61 e0       	ldi	r22, 0x01	; 1
     26a:	70 e0       	ldi	r23, 0x00	; 0
     26c:	8c e2       	ldi	r24, 0x2C	; 44
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	76 d0       	rcall	.+236    	; 0x35e <mcp2515_bit_modify>
		break;
     272:	07 c0       	rjmp	.+14     	; 0x282 <can_recieve+0xca>
		case MCP_RXB1CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
     274:	40 e0       	ldi	r20, 0x00	; 0
     276:	50 e0       	ldi	r21, 0x00	; 0
     278:	62 e0       	ldi	r22, 0x02	; 2
     27a:	70 e0       	ldi	r23, 0x00	; 0
     27c:	8c e2       	ldi	r24, 0x2C	; 44
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	6e d0       	rcall	.+220    	; 0x35e <mcp2515_bit_modify>
		break;
	}
	
	return m;
     282:	ba 82       	std	Y+2, r11	; 0x02
     284:	a9 82       	std	Y+1, r10	; 0x01
     286:	7b 82       	std	Y+3, r7	; 0x03
     288:	8b e0       	ldi	r24, 0x0B	; 11
     28a:	fe 01       	movw	r30, r28
     28c:	31 96       	adiw	r30, 0x01	; 1
     28e:	d6 01       	movw	r26, r12
     290:	01 90       	ld	r0, Z+
     292:	0d 92       	st	X+, r0
     294:	8a 95       	dec	r24
     296:	e1 f7       	brne	.-8      	; 0x290 <can_recieve+0xd8>
}
     298:	c6 01       	movw	r24, r12
     29a:	2b 96       	adiw	r28, 0x0b	; 11
     29c:	0f b6       	in	r0, 0x3f	; 63
     29e:	f8 94       	cli
     2a0:	de bf       	out	0x3e, r29	; 62
     2a2:	0f be       	out	0x3f, r0	; 63
     2a4:	cd bf       	out	0x3d, r28	; 61
     2a6:	df 91       	pop	r29
     2a8:	cf 91       	pop	r28
     2aa:	1f 91       	pop	r17
     2ac:	0f 91       	pop	r16
     2ae:	ff 90       	pop	r15
     2b0:	ef 90       	pop	r14
     2b2:	df 90       	pop	r13
     2b4:	cf 90       	pop	r12
     2b6:	bf 90       	pop	r11
     2b8:	af 90       	pop	r10
     2ba:	9f 90       	pop	r9
     2bc:	8f 90       	pop	r8
     2be:	7f 90       	pop	r7
     2c0:	08 95       	ret

000002c2 <canjoy_recieve>:
	
	can_transmit(&joy, 0x30);
}


can_message canjoy_recieve(){
     2c2:	ef 92       	push	r14
     2c4:	ff 92       	push	r15
     2c6:	0f 93       	push	r16
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	ec 01       	movw	r28, r24
	
	can_message joy = can_recieve();
     2d0:	73 df       	rcall	.-282    	; 0x1b8 <can_recieve>
     2d2:	ea 80       	ldd	r14, Y+2	; 0x02
     2d4:	fb 80       	ldd	r15, Y+3	; 0x03
     2d6:	0c 81       	ldd	r16, Y+4	; 0x04
     2d8:	1d 81       	ldd	r17, Y+5	; 0x05
     2da:	7e 81       	ldd	r23, Y+6	; 0x06
     2dc:	6f 81       	ldd	r22, Y+7	; 0x07
     2de:	58 85       	ldd	r21, Y+8	; 0x08
     2e0:	49 85       	ldd	r20, Y+9	; 0x09
	
	if(joy.id == CANJOY_ID){
     2e2:	28 81       	ld	r18, Y
     2e4:	39 81       	ldd	r19, Y+1	; 0x01
     2e6:	80 91 06 02 	lds	r24, 0x0206
     2ea:	90 91 07 02 	lds	r25, 0x0207
     2ee:	28 17       	cp	r18, r24
     2f0:	39 07       	cpc	r19, r25
     2f2:	89 f4       	brne	.+34     	; 0x316 <canjoy_recieve+0x54>
		//printf("CORRECT ID\n");		
		canjoy_msg = joy;
     2f4:	8b e0       	ldi	r24, 0x0B	; 11
     2f6:	fe 01       	movw	r30, r28
     2f8:	ae ee       	ldi	r26, 0xEE	; 238
     2fa:	b2 e0       	ldi	r27, 0x02	; 2
     2fc:	01 90       	ld	r0, Z+
     2fe:	0d 92       	st	X+, r0
     300:	8a 95       	dec	r24
     302:	e1 f7       	brne	.-8      	; 0x2fc <canjoy_recieve+0x3a>
		return joy;
     304:	ea 82       	std	Y+2, r14	; 0x02
     306:	fb 82       	std	Y+3, r15	; 0x03
     308:	0c 83       	std	Y+4, r16	; 0x04
     30a:	1d 83       	std	Y+5, r17	; 0x05
     30c:	7e 83       	std	Y+6, r23	; 0x06
     30e:	6f 83       	std	Y+7, r22	; 0x07
     310:	58 87       	std	Y+8, r21	; 0x08
     312:	49 87       	std	Y+9, r20	; 0x09
     314:	0c c0       	rjmp	.+24     	; 0x32e <canjoy_recieve+0x6c>
	}
	printf("WRONG ID\n");
     316:	88 e0       	ldi	r24, 0x08	; 8
     318:	92 e0       	ldi	r25, 0x02	; 2
     31a:	fa d2       	rcall	.+1524   	; 0x910 <puts>
	joy.data[2] = 0;
	joy.data[3] = 0;
	joy.data[4] = 0;
	joy.data[5] = 0;
	joy.data[6] = 0;
	return joy;
     31c:	87 e0       	ldi	r24, 0x07	; 7
     31e:	8a 83       	std	Y+2, r24	; 0x02
     320:	8b 83       	std	Y+3, r24	; 0x03
     322:	1c 82       	std	Y+4, r1	; 0x04
     324:	1d 82       	std	Y+5, r1	; 0x05
     326:	1e 82       	std	Y+6, r1	; 0x06
     328:	1f 82       	std	Y+7, r1	; 0x07
     32a:	18 86       	std	Y+8, r1	; 0x08
     32c:	19 86       	std	Y+9, r1	; 0x09
}
     32e:	ce 01       	movw	r24, r28
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	1f 91       	pop	r17
     336:	0f 91       	pop	r16
     338:	ff 90       	pop	r15
     33a:	ef 90       	pop	r14
     33c:	08 95       	ret

0000033e <canjoy_joystick_x>:

int canjoy_joystick_x(){
	return canjoy_msg.data[0];
     33e:	80 91 f1 02 	lds	r24, 0x02F1
}
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	08 95       	ret

00000346 <mcp2515_read>:
}

void mcp2515_request_to_send(int buffer_select){
	PORTB &= ~(1 << MCP2515_CS);
	spi_write(buffer_select);
	PORTB |= (1 << MCP2515_CS);
     346:	cf 93       	push	r28
     348:	c8 2f       	mov	r28, r24
     34a:	28 98       	cbi	0x05, 0	; 5
     34c:	83 e0       	ldi	r24, 0x03	; 3
     34e:	dc d0       	rcall	.+440    	; 0x508 <spi_write>
     350:	8c 2f       	mov	r24, r28
     352:	da d0       	rcall	.+436    	; 0x508 <spi_write>
     354:	80 e0       	ldi	r24, 0x00	; 0
     356:	d8 d0       	rcall	.+432    	; 0x508 <spi_write>
     358:	28 9a       	sbi	0x05, 0	; 5
     35a:	cf 91       	pop	r28
     35c:	08 95       	ret

0000035e <mcp2515_bit_modify>:
}

void mcp2515_bit_modify(int address, int mask, int data){
     35e:	1f 93       	push	r17
     360:	cf 93       	push	r28
     362:	df 93       	push	r29
     364:	18 2f       	mov	r17, r24
     366:	d6 2f       	mov	r29, r22
     368:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << MCP2515_CS);
     36a:	28 98       	cbi	0x05, 0	; 5
	
	spi_write(MCP_BITMOD);
     36c:	85 e0       	ldi	r24, 0x05	; 5
     36e:	cc d0       	rcall	.+408    	; 0x508 <spi_write>
	spi_write(address);
     370:	81 2f       	mov	r24, r17
     372:	ca d0       	rcall	.+404    	; 0x508 <spi_write>
	spi_write(mask);
     374:	8d 2f       	mov	r24, r29
     376:	c8 d0       	rcall	.+400    	; 0x508 <spi_write>
	spi_write(data);
     378:	8c 2f       	mov	r24, r28
     37a:	c6 d0       	rcall	.+396    	; 0x508 <spi_write>

	PORTB |= (1 << MCP2515_CS);
     37c:	28 9a       	sbi	0x05, 0	; 5
	
}
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	1f 91       	pop	r17
     384:	08 95       	ret

00000386 <mcp2515_reset>:

void mcp2515_reset(){
	PORTB &= ~(1 << MCP2515_CS);
     386:	28 98       	cbi	0x05, 0	; 5
	spi_write(MCP_RESET);
     388:	80 ec       	ldi	r24, 0xC0	; 192
     38a:	be d0       	rcall	.+380    	; 0x508 <spi_write>
	PORTB |= (1 << MCP2515_CS);
     38c:	28 9a       	sbi	0x05, 0	; 5
     38e:	08 95       	ret

00000390 <mcp2515_init>:
#include "SPI.h"
#include "mcp2515_define.h"


int mcp2515_init(){
	spi_init();
     390:	b4 d0       	rcall	.+360    	; 0x4fa <spi_init>
	mcp2515_reset();
     392:	f9 df       	rcall	.-14     	; 0x386 <mcp2515_reset>
	
	uint8_t val = mcp2515_read(MCP_CANSTAT);
     394:	8e e0       	ldi	r24, 0x0E	; 14
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	d6 df       	rcall	.-84     	; 0x346 <mcp2515_read>
	if((val & MODE_MASK) != MODE_CONFIG){
     39a:	80 7e       	andi	r24, 0xE0	; 224
     39c:	99 27       	eor	r25, r25
     39e:	80 38       	cpi	r24, 0x80	; 128
     3a0:	91 05       	cpc	r25, r1
     3a2:	31 f0       	breq	.+12     	; 0x3b0 <mcp2515_init+0x20>
		printf("ERROR: MCP2515 is NOT in config mode after reset!\n");
     3a4:	81 e1       	ldi	r24, 0x11	; 17
     3a6:	92 e0       	ldi	r25, 0x02	; 2
     3a8:	b3 d2       	rcall	.+1382   	; 0x910 <puts>
		return 1;
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	08 95       	ret
	}
	return 0;
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	90 e0       	ldi	r25, 0x00	; 0
}
     3b4:	08 95       	ret

000003b6 <pwm_init>:
	printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
     3ba:	6b 9a       	sbi	0x0d, 3	; 13
     3bc:	73 9a       	sbi	0x0e, 3	; 14
     3be:	e0 e9       	ldi	r30, 0x90	; 144
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	10 82       	st	Z, r1
     3c4:	a1 e9       	ldi	r26, 0x91	; 145
     3c6:	b0 e0       	ldi	r27, 0x00	; 0
     3c8:	1c 92       	st	X, r1
     3ca:	10 92 92 00 	sts	0x0092, r1
     3ce:	80 81       	ld	r24, Z
     3d0:	8e 7f       	andi	r24, 0xFE	; 254
     3d2:	80 83       	st	Z, r24
     3d4:	80 81       	ld	r24, Z
     3d6:	82 60       	ori	r24, 0x02	; 2
     3d8:	80 83       	st	Z, r24
     3da:	8c 91       	ld	r24, X
     3dc:	88 60       	ori	r24, 0x08	; 8
     3de:	8c 93       	st	X, r24
     3e0:	8c 91       	ld	r24, X
     3e2:	80 61       	ori	r24, 0x10	; 16
     3e4:	8c 93       	st	X, r24
     3e6:	80 81       	ld	r24, Z
     3e8:	80 83       	st	Z, r24
     3ea:	80 81       	ld	r24, Z
     3ec:	80 68       	ori	r24, 0x80	; 128
     3ee:	80 83       	st	Z, r24
     3f0:	8c 91       	ld	r24, X
     3f2:	83 60       	ori	r24, 0x03	; 3
     3f4:	8c 93       	st	X, r24
     3f6:	8c 91       	ld	r24, X
     3f8:	8b 7f       	andi	r24, 0xFB	; 251
     3fa:	8c 93       	st	X, r24
     3fc:	46 e9       	ldi	r20, 0x96	; 150
     3fe:	50 e0       	ldi	r21, 0x00	; 0
     400:	88 e8       	ldi	r24, 0x88	; 136
     402:	93 e1       	ldi	r25, 0x13	; 19
     404:	ea 01       	movw	r28, r20
     406:	99 83       	std	Y+1, r25	; 0x01
     408:	88 83       	st	Y, r24
     40a:	28 81       	ld	r18, Y
     40c:	39 81       	ldd	r19, Y+1	; 0x01
     40e:	36 95       	lsr	r19
     410:	27 95       	ror	r18
     412:	88 e9       	ldi	r24, 0x98	; 152
     414:	90 e0       	ldi	r25, 0x00	; 0
     416:	ec 01       	movw	r28, r24
     418:	39 83       	std	Y+1, r19	; 0x01
     41a:	28 83       	st	Y, r18
     41c:	28 81       	ld	r18, Y
     41e:	39 81       	ldd	r19, Y+1	; 0x01
     420:	ea 01       	movw	r28, r20
     422:	88 81       	ld	r24, Y
     424:	99 81       	ldd	r25, Y+1	; 0x01
     426:	5c 91       	ld	r21, X
     428:	40 81       	ld	r20, Z
     42a:	3f 93       	push	r19
     42c:	2f 93       	push	r18
     42e:	9f 93       	push	r25
     430:	8f 93       	push	r24
     432:	1f 92       	push	r1
     434:	5f 93       	push	r21
     436:	1f 92       	push	r1
     438:	4f 93       	push	r20
     43a:	83 e4       	ldi	r24, 0x43	; 67
     43c:	92 e0       	ldi	r25, 0x02	; 2
     43e:	9f 93       	push	r25
     440:	8f 93       	push	r24
     442:	55 d2       	rcall	.+1194   	; 0x8ee <printf>
     444:	8d b7       	in	r24, 0x3d	; 61
     446:	9e b7       	in	r25, 0x3e	; 62
     448:	0a 96       	adiw	r24, 0x0a	; 10
     44a:	0f b6       	in	r0, 0x3f	; 63
     44c:	f8 94       	cli
     44e:	9e bf       	out	0x3e, r25	; 62
     450:	0f be       	out	0x3f, r0	; 63
     452:	8d bf       	out	0x3d, r24	; 61
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <pwm_joystick_pulse>:
	return;
}


//uses joystick_x_value() which returns between 0 and 255
void pwm_joystick_pulse(int16_t val){
     45a:	cf 92       	push	r12
     45c:	df 92       	push	r13
     45e:	ef 92       	push	r14
     460:	ff 92       	push	r15
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	ec 01       	movw	r28, r24
	
	if((val > 255) || (val < 0)){
     468:	8f 3f       	cpi	r24, 0xFF	; 255
     46a:	91 05       	cpc	r25, r1
     46c:	99 f0       	breq	.+38     	; 0x494 <pwm_joystick_pulse+0x3a>
     46e:	90 f0       	brcs	.+36     	; 0x494 <pwm_joystick_pulse+0x3a>
		printf("ERROR: pwm_joystick_pulse input val = %d out of range!\n", val);
     470:	df 93       	push	r29
     472:	cf 93       	push	r28
     474:	83 e8       	ldi	r24, 0x83	; 131
     476:	92 e0       	ldi	r25, 0x02	; 2
     478:	9f 93       	push	r25
     47a:	8f 93       	push	r24
     47c:	38 d2       	rcall	.+1136   	; 0x8ee <printf>
	printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     47e:	87 e7       	ldi	r24, 0x77	; 119
     480:	91 e0       	ldi	r25, 0x01	; 1
     482:	90 93 99 00 	sts	0x0099, r25
     486:	80 93 98 00 	sts	0x0098, r24
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
     492:	2c c0       	rjmp	.+88     	; 0x4ec <pwm_joystick_pulse+0x92>
		pwm_set_value(P_MID);
		return;
	}
	else{
		
		uint16_t pulse_width = (val * (300/255.0)) + P_MIN;
     494:	bc 01       	movw	r22, r24
     496:	88 27       	eor	r24, r24
     498:	77 fd       	sbrc	r23, 7
     49a:	80 95       	com	r24
     49c:	98 2f       	mov	r25, r24
     49e:	ee d0       	rcall	.+476    	; 0x67c <__floatsisf>
     4a0:	27 e9       	ldi	r18, 0x97	; 151
     4a2:	36 e9       	ldi	r19, 0x96	; 150
     4a4:	46 e9       	ldi	r20, 0x96	; 150
     4a6:	5f e3       	ldi	r21, 0x3F	; 63
     4a8:	75 d1       	rcall	.+746    	; 0x794 <__mulsf3>
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	41 e6       	ldi	r20, 0x61	; 97
     4b0:	53 e4       	ldi	r21, 0x43	; 67
     4b2:	52 d0       	rcall	.+164    	; 0x558 <__addsf3>
     4b4:	b5 d0       	rcall	.+362    	; 0x620 <__fixunssfsi>
     4b6:	6b 01       	movw	r12, r22
     4b8:	7c 01       	movw	r14, r24
		
		printf("\nPulse converted from %d to %d\t P_RESOLUTION = %d\n", val, pulse_width, P_RESOLUTION);
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	8f 93       	push	r24
     4be:	8c e2       	ldi	r24, 0x2C	; 44
     4c0:	8f 93       	push	r24
     4c2:	df 92       	push	r13
     4c4:	cf 92       	push	r12
     4c6:	df 93       	push	r29
     4c8:	cf 93       	push	r28
     4ca:	8b eb       	ldi	r24, 0xBB	; 187
     4cc:	92 e0       	ldi	r25, 0x02	; 2
     4ce:	9f 93       	push	r25
     4d0:	8f 93       	push	r24
     4d2:	0d d2       	rcall	.+1050   	; 0x8ee <printf>
	printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     4d4:	d0 92 99 00 	sts	0x0099, r13
     4d8:	c0 92 98 00 	sts	0x0098, r12
     4dc:	8d b7       	in	r24, 0x3d	; 61
     4de:	9e b7       	in	r25, 0x3e	; 62
     4e0:	08 96       	adiw	r24, 0x08	; 8
     4e2:	0f b6       	in	r0, 0x3f	; 63
     4e4:	f8 94       	cli
     4e6:	9e bf       	out	0x3e, r25	; 62
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	8d bf       	out	0x3d, r24	; 61
		
		printf("\nPulse converted from %d to %d\t P_RESOLUTION = %d\n", val, pulse_width, P_RESOLUTION);
		pwm_set_pulse(pulse_width);
	}
	return;
}
     4ec:	df 91       	pop	r29
     4ee:	cf 91       	pop	r28
     4f0:	ff 90       	pop	r15
     4f2:	ef 90       	pop	r14
     4f4:	df 90       	pop	r13
     4f6:	cf 90       	pop	r12
     4f8:	08 95       	ret

000004fa <spi_init>:
#include "SPI.h"
#include <avr/io.h>

void spi_init(){
			//SI out		SS out		SCK out
	DDRB |= ( 1 << PB2) | (1 << PB0) | (1 << PB1);
     4fa:	84 b1       	in	r24, 0x04	; 4
     4fc:	87 60       	ori	r24, 0x07	; 7
     4fe:	84 b9       	out	0x04, r24	; 4
	//SO in
	DDRB &= ~(1 << PB3);
     500:	23 98       	cbi	0x04, 3	; 4
	
	//								 frequency / 16
	SPCR= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     502:	81 e5       	ldi	r24, 0x51	; 81
     504:	8c bd       	out	0x2c, r24	; 44
     506:	08 95       	ret

00000508 <spi_write>:

//both read and write
int spi_write(char data){
	//SPDR = data;
	//while(!(SPSR & (1<<SPIF)));
	SPDR = data;
     508:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     50a:	0d b4       	in	r0, 0x2d	; 45
     50c:	07 fe       	sbrs	r0, 7
     50e:	fd cf       	rjmp	.-6      	; 0x50a <spi_write+0x2>
	return SPDR;
     510:	8e b5       	in	r24, 0x2e	; 46
}
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	08 95       	ret

00000516 <uart_Transmit>:
}

void uart_Transmit( unsigned char data ){
	
	//Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
     516:	e0 ec       	ldi	r30, 0xC0	; 192
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	90 81       	ld	r25, Z
     51c:	95 ff       	sbrs	r25, 5
     51e:	fd cf       	rjmp	.-6      	; 0x51a <uart_Transmit+0x4>
	
	//Put data into buffer, sends the data
	UDR0 = data;
     520:	80 93 c6 00 	sts	0x00C6, r24
     524:	08 95       	ret

00000526 <uart_Receive>:

unsigned char uart_Receive(void){
	
	//Wait for data to be received
	
	while( !(UCSR0A & (1<<RXC0)) );
     526:	e0 ec       	ldi	r30, 0xC0	; 192
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	80 81       	ld	r24, Z
     52c:	88 23       	and	r24, r24
     52e:	ec f7       	brge	.-6      	; 0x52a <uart_Receive+0x4>
	
	//Get and return received data from buffer
	
	return UDR0;
     530:	80 91 c6 00 	lds	r24, 0x00C6
}
     534:	08 95       	ret

00000536 <uart_Init>:
#include "uart.h"

void uart_Init(unsigned int ubrr){
	
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     536:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     53a:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     53e:	88 e1       	ldi	r24, 0x18	; 24
     540:	80 93 c1 00 	sts	0x00C1, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C = (1 << 7)|(3<<UCSZ00);//here, 7 replaces URSEL0 from ATmega162 project
     544:	86 e8       	ldi	r24, 0x86	; 134
     546:	80 93 c2 00 	sts	0x00C2, r24
	
	fdevopen(uart_Transmit, uart_Receive);
     54a:	63 e9       	ldi	r22, 0x93	; 147
     54c:	72 e0       	ldi	r23, 0x02	; 2
     54e:	8b e8       	ldi	r24, 0x8B	; 139
     550:	92 e0       	ldi	r25, 0x02	; 2
     552:	83 c1       	rjmp	.+774    	; 0x85a <fdevopen>
     554:	08 95       	ret

00000556 <__subsf3>:
     556:	50 58       	subi	r21, 0x80	; 128

00000558 <__addsf3>:
     558:	bb 27       	eor	r27, r27
     55a:	aa 27       	eor	r26, r26
     55c:	0e d0       	rcall	.+28     	; 0x57a <__addsf3x>
     55e:	e0 c0       	rjmp	.+448    	; 0x720 <__fp_round>
     560:	d1 d0       	rcall	.+418    	; 0x704 <__fp_pscA>
     562:	30 f0       	brcs	.+12     	; 0x570 <__addsf3+0x18>
     564:	d6 d0       	rcall	.+428    	; 0x712 <__fp_pscB>
     566:	20 f0       	brcs	.+8      	; 0x570 <__addsf3+0x18>
     568:	31 f4       	brne	.+12     	; 0x576 <__addsf3+0x1e>
     56a:	9f 3f       	cpi	r25, 0xFF	; 255
     56c:	11 f4       	brne	.+4      	; 0x572 <__addsf3+0x1a>
     56e:	1e f4       	brtc	.+6      	; 0x576 <__addsf3+0x1e>
     570:	c6 c0       	rjmp	.+396    	; 0x6fe <__fp_nan>
     572:	0e f4       	brtc	.+2      	; 0x576 <__addsf3+0x1e>
     574:	e0 95       	com	r30
     576:	e7 fb       	bst	r30, 7
     578:	bc c0       	rjmp	.+376    	; 0x6f2 <__fp_inf>

0000057a <__addsf3x>:
     57a:	e9 2f       	mov	r30, r25
     57c:	e2 d0       	rcall	.+452    	; 0x742 <__fp_split3>
     57e:	80 f3       	brcs	.-32     	; 0x560 <__addsf3+0x8>
     580:	ba 17       	cp	r27, r26
     582:	62 07       	cpc	r22, r18
     584:	73 07       	cpc	r23, r19
     586:	84 07       	cpc	r24, r20
     588:	95 07       	cpc	r25, r21
     58a:	18 f0       	brcs	.+6      	; 0x592 <__addsf3x+0x18>
     58c:	71 f4       	brne	.+28     	; 0x5aa <__addsf3x+0x30>
     58e:	9e f5       	brtc	.+102    	; 0x5f6 <__addsf3x+0x7c>
     590:	fa c0       	rjmp	.+500    	; 0x786 <__fp_zero>
     592:	0e f4       	brtc	.+2      	; 0x596 <__addsf3x+0x1c>
     594:	e0 95       	com	r30
     596:	0b 2e       	mov	r0, r27
     598:	ba 2f       	mov	r27, r26
     59a:	a0 2d       	mov	r26, r0
     59c:	0b 01       	movw	r0, r22
     59e:	b9 01       	movw	r22, r18
     5a0:	90 01       	movw	r18, r0
     5a2:	0c 01       	movw	r0, r24
     5a4:	ca 01       	movw	r24, r20
     5a6:	a0 01       	movw	r20, r0
     5a8:	11 24       	eor	r1, r1
     5aa:	ff 27       	eor	r31, r31
     5ac:	59 1b       	sub	r21, r25
     5ae:	99 f0       	breq	.+38     	; 0x5d6 <__addsf3x+0x5c>
     5b0:	59 3f       	cpi	r21, 0xF9	; 249
     5b2:	50 f4       	brcc	.+20     	; 0x5c8 <__addsf3x+0x4e>
     5b4:	50 3e       	cpi	r21, 0xE0	; 224
     5b6:	68 f1       	brcs	.+90     	; 0x612 <__addsf3x+0x98>
     5b8:	1a 16       	cp	r1, r26
     5ba:	f0 40       	sbci	r31, 0x00	; 0
     5bc:	a2 2f       	mov	r26, r18
     5be:	23 2f       	mov	r18, r19
     5c0:	34 2f       	mov	r19, r20
     5c2:	44 27       	eor	r20, r20
     5c4:	58 5f       	subi	r21, 0xF8	; 248
     5c6:	f3 cf       	rjmp	.-26     	; 0x5ae <__addsf3x+0x34>
     5c8:	46 95       	lsr	r20
     5ca:	37 95       	ror	r19
     5cc:	27 95       	ror	r18
     5ce:	a7 95       	ror	r26
     5d0:	f0 40       	sbci	r31, 0x00	; 0
     5d2:	53 95       	inc	r21
     5d4:	c9 f7       	brne	.-14     	; 0x5c8 <__addsf3x+0x4e>
     5d6:	7e f4       	brtc	.+30     	; 0x5f6 <__addsf3x+0x7c>
     5d8:	1f 16       	cp	r1, r31
     5da:	ba 0b       	sbc	r27, r26
     5dc:	62 0b       	sbc	r22, r18
     5de:	73 0b       	sbc	r23, r19
     5e0:	84 0b       	sbc	r24, r20
     5e2:	ba f0       	brmi	.+46     	; 0x612 <__addsf3x+0x98>
     5e4:	91 50       	subi	r25, 0x01	; 1
     5e6:	a1 f0       	breq	.+40     	; 0x610 <__addsf3x+0x96>
     5e8:	ff 0f       	add	r31, r31
     5ea:	bb 1f       	adc	r27, r27
     5ec:	66 1f       	adc	r22, r22
     5ee:	77 1f       	adc	r23, r23
     5f0:	88 1f       	adc	r24, r24
     5f2:	c2 f7       	brpl	.-16     	; 0x5e4 <__addsf3x+0x6a>
     5f4:	0e c0       	rjmp	.+28     	; 0x612 <__addsf3x+0x98>
     5f6:	ba 0f       	add	r27, r26
     5f8:	62 1f       	adc	r22, r18
     5fa:	73 1f       	adc	r23, r19
     5fc:	84 1f       	adc	r24, r20
     5fe:	48 f4       	brcc	.+18     	; 0x612 <__addsf3x+0x98>
     600:	87 95       	ror	r24
     602:	77 95       	ror	r23
     604:	67 95       	ror	r22
     606:	b7 95       	ror	r27
     608:	f7 95       	ror	r31
     60a:	9e 3f       	cpi	r25, 0xFE	; 254
     60c:	08 f0       	brcs	.+2      	; 0x610 <__addsf3x+0x96>
     60e:	b3 cf       	rjmp	.-154    	; 0x576 <__addsf3+0x1e>
     610:	93 95       	inc	r25
     612:	88 0f       	add	r24, r24
     614:	08 f0       	brcs	.+2      	; 0x618 <__addsf3x+0x9e>
     616:	99 27       	eor	r25, r25
     618:	ee 0f       	add	r30, r30
     61a:	97 95       	ror	r25
     61c:	87 95       	ror	r24
     61e:	08 95       	ret

00000620 <__fixunssfsi>:
     620:	98 d0       	rcall	.+304    	; 0x752 <__fp_splitA>
     622:	88 f0       	brcs	.+34     	; 0x646 <__fixunssfsi+0x26>
     624:	9f 57       	subi	r25, 0x7F	; 127
     626:	90 f0       	brcs	.+36     	; 0x64c <__fixunssfsi+0x2c>
     628:	b9 2f       	mov	r27, r25
     62a:	99 27       	eor	r25, r25
     62c:	b7 51       	subi	r27, 0x17	; 23
     62e:	a0 f0       	brcs	.+40     	; 0x658 <__fixunssfsi+0x38>
     630:	d1 f0       	breq	.+52     	; 0x666 <__fixunssfsi+0x46>
     632:	66 0f       	add	r22, r22
     634:	77 1f       	adc	r23, r23
     636:	88 1f       	adc	r24, r24
     638:	99 1f       	adc	r25, r25
     63a:	1a f0       	brmi	.+6      	; 0x642 <__fixunssfsi+0x22>
     63c:	ba 95       	dec	r27
     63e:	c9 f7       	brne	.-14     	; 0x632 <__fixunssfsi+0x12>
     640:	12 c0       	rjmp	.+36     	; 0x666 <__fixunssfsi+0x46>
     642:	b1 30       	cpi	r27, 0x01	; 1
     644:	81 f0       	breq	.+32     	; 0x666 <__fixunssfsi+0x46>
     646:	9f d0       	rcall	.+318    	; 0x786 <__fp_zero>
     648:	b1 e0       	ldi	r27, 0x01	; 1
     64a:	08 95       	ret
     64c:	9c c0       	rjmp	.+312    	; 0x786 <__fp_zero>
     64e:	67 2f       	mov	r22, r23
     650:	78 2f       	mov	r23, r24
     652:	88 27       	eor	r24, r24
     654:	b8 5f       	subi	r27, 0xF8	; 248
     656:	39 f0       	breq	.+14     	; 0x666 <__fixunssfsi+0x46>
     658:	b9 3f       	cpi	r27, 0xF9	; 249
     65a:	cc f3       	brlt	.-14     	; 0x64e <__fixunssfsi+0x2e>
     65c:	86 95       	lsr	r24
     65e:	77 95       	ror	r23
     660:	67 95       	ror	r22
     662:	b3 95       	inc	r27
     664:	d9 f7       	brne	.-10     	; 0x65c <__fixunssfsi+0x3c>
     666:	3e f4       	brtc	.+14     	; 0x676 <__fixunssfsi+0x56>
     668:	90 95       	com	r25
     66a:	80 95       	com	r24
     66c:	70 95       	com	r23
     66e:	61 95       	neg	r22
     670:	7f 4f       	sbci	r23, 0xFF	; 255
     672:	8f 4f       	sbci	r24, 0xFF	; 255
     674:	9f 4f       	sbci	r25, 0xFF	; 255
     676:	08 95       	ret

00000678 <__floatunsisf>:
     678:	e8 94       	clt
     67a:	09 c0       	rjmp	.+18     	; 0x68e <__floatsisf+0x12>

0000067c <__floatsisf>:
     67c:	97 fb       	bst	r25, 7
     67e:	3e f4       	brtc	.+14     	; 0x68e <__floatsisf+0x12>
     680:	90 95       	com	r25
     682:	80 95       	com	r24
     684:	70 95       	com	r23
     686:	61 95       	neg	r22
     688:	7f 4f       	sbci	r23, 0xFF	; 255
     68a:	8f 4f       	sbci	r24, 0xFF	; 255
     68c:	9f 4f       	sbci	r25, 0xFF	; 255
     68e:	99 23       	and	r25, r25
     690:	a9 f0       	breq	.+42     	; 0x6bc <__floatsisf+0x40>
     692:	f9 2f       	mov	r31, r25
     694:	96 e9       	ldi	r25, 0x96	; 150
     696:	bb 27       	eor	r27, r27
     698:	93 95       	inc	r25
     69a:	f6 95       	lsr	r31
     69c:	87 95       	ror	r24
     69e:	77 95       	ror	r23
     6a0:	67 95       	ror	r22
     6a2:	b7 95       	ror	r27
     6a4:	f1 11       	cpse	r31, r1
     6a6:	f8 cf       	rjmp	.-16     	; 0x698 <__floatsisf+0x1c>
     6a8:	fa f4       	brpl	.+62     	; 0x6e8 <__floatsisf+0x6c>
     6aa:	bb 0f       	add	r27, r27
     6ac:	11 f4       	brne	.+4      	; 0x6b2 <__floatsisf+0x36>
     6ae:	60 ff       	sbrs	r22, 0
     6b0:	1b c0       	rjmp	.+54     	; 0x6e8 <__floatsisf+0x6c>
     6b2:	6f 5f       	subi	r22, 0xFF	; 255
     6b4:	7f 4f       	sbci	r23, 0xFF	; 255
     6b6:	8f 4f       	sbci	r24, 0xFF	; 255
     6b8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ba:	16 c0       	rjmp	.+44     	; 0x6e8 <__floatsisf+0x6c>
     6bc:	88 23       	and	r24, r24
     6be:	11 f0       	breq	.+4      	; 0x6c4 <__floatsisf+0x48>
     6c0:	96 e9       	ldi	r25, 0x96	; 150
     6c2:	11 c0       	rjmp	.+34     	; 0x6e6 <__floatsisf+0x6a>
     6c4:	77 23       	and	r23, r23
     6c6:	21 f0       	breq	.+8      	; 0x6d0 <__floatsisf+0x54>
     6c8:	9e e8       	ldi	r25, 0x8E	; 142
     6ca:	87 2f       	mov	r24, r23
     6cc:	76 2f       	mov	r23, r22
     6ce:	05 c0       	rjmp	.+10     	; 0x6da <__floatsisf+0x5e>
     6d0:	66 23       	and	r22, r22
     6d2:	71 f0       	breq	.+28     	; 0x6f0 <__floatsisf+0x74>
     6d4:	96 e8       	ldi	r25, 0x86	; 134
     6d6:	86 2f       	mov	r24, r22
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	60 e0       	ldi	r22, 0x00	; 0
     6dc:	2a f0       	brmi	.+10     	; 0x6e8 <__floatsisf+0x6c>
     6de:	9a 95       	dec	r25
     6e0:	66 0f       	add	r22, r22
     6e2:	77 1f       	adc	r23, r23
     6e4:	88 1f       	adc	r24, r24
     6e6:	da f7       	brpl	.-10     	; 0x6de <__floatsisf+0x62>
     6e8:	88 0f       	add	r24, r24
     6ea:	96 95       	lsr	r25
     6ec:	87 95       	ror	r24
     6ee:	97 f9       	bld	r25, 7
     6f0:	08 95       	ret

000006f2 <__fp_inf>:
     6f2:	97 f9       	bld	r25, 7
     6f4:	9f 67       	ori	r25, 0x7F	; 127
     6f6:	80 e8       	ldi	r24, 0x80	; 128
     6f8:	70 e0       	ldi	r23, 0x00	; 0
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	08 95       	ret

000006fe <__fp_nan>:
     6fe:	9f ef       	ldi	r25, 0xFF	; 255
     700:	80 ec       	ldi	r24, 0xC0	; 192
     702:	08 95       	ret

00000704 <__fp_pscA>:
     704:	00 24       	eor	r0, r0
     706:	0a 94       	dec	r0
     708:	16 16       	cp	r1, r22
     70a:	17 06       	cpc	r1, r23
     70c:	18 06       	cpc	r1, r24
     70e:	09 06       	cpc	r0, r25
     710:	08 95       	ret

00000712 <__fp_pscB>:
     712:	00 24       	eor	r0, r0
     714:	0a 94       	dec	r0
     716:	12 16       	cp	r1, r18
     718:	13 06       	cpc	r1, r19
     71a:	14 06       	cpc	r1, r20
     71c:	05 06       	cpc	r0, r21
     71e:	08 95       	ret

00000720 <__fp_round>:
     720:	09 2e       	mov	r0, r25
     722:	03 94       	inc	r0
     724:	00 0c       	add	r0, r0
     726:	11 f4       	brne	.+4      	; 0x72c <__fp_round+0xc>
     728:	88 23       	and	r24, r24
     72a:	52 f0       	brmi	.+20     	; 0x740 <__fp_round+0x20>
     72c:	bb 0f       	add	r27, r27
     72e:	40 f4       	brcc	.+16     	; 0x740 <__fp_round+0x20>
     730:	bf 2b       	or	r27, r31
     732:	11 f4       	brne	.+4      	; 0x738 <__fp_round+0x18>
     734:	60 ff       	sbrs	r22, 0
     736:	04 c0       	rjmp	.+8      	; 0x740 <__fp_round+0x20>
     738:	6f 5f       	subi	r22, 0xFF	; 255
     73a:	7f 4f       	sbci	r23, 0xFF	; 255
     73c:	8f 4f       	sbci	r24, 0xFF	; 255
     73e:	9f 4f       	sbci	r25, 0xFF	; 255
     740:	08 95       	ret

00000742 <__fp_split3>:
     742:	57 fd       	sbrc	r21, 7
     744:	90 58       	subi	r25, 0x80	; 128
     746:	44 0f       	add	r20, r20
     748:	55 1f       	adc	r21, r21
     74a:	59 f0       	breq	.+22     	; 0x762 <__fp_splitA+0x10>
     74c:	5f 3f       	cpi	r21, 0xFF	; 255
     74e:	71 f0       	breq	.+28     	; 0x76c <__fp_splitA+0x1a>
     750:	47 95       	ror	r20

00000752 <__fp_splitA>:
     752:	88 0f       	add	r24, r24
     754:	97 fb       	bst	r25, 7
     756:	99 1f       	adc	r25, r25
     758:	61 f0       	breq	.+24     	; 0x772 <__fp_splitA+0x20>
     75a:	9f 3f       	cpi	r25, 0xFF	; 255
     75c:	79 f0       	breq	.+30     	; 0x77c <__fp_splitA+0x2a>
     75e:	87 95       	ror	r24
     760:	08 95       	ret
     762:	12 16       	cp	r1, r18
     764:	13 06       	cpc	r1, r19
     766:	14 06       	cpc	r1, r20
     768:	55 1f       	adc	r21, r21
     76a:	f2 cf       	rjmp	.-28     	; 0x750 <__fp_split3+0xe>
     76c:	46 95       	lsr	r20
     76e:	f1 df       	rcall	.-30     	; 0x752 <__fp_splitA>
     770:	08 c0       	rjmp	.+16     	; 0x782 <__fp_splitA+0x30>
     772:	16 16       	cp	r1, r22
     774:	17 06       	cpc	r1, r23
     776:	18 06       	cpc	r1, r24
     778:	99 1f       	adc	r25, r25
     77a:	f1 cf       	rjmp	.-30     	; 0x75e <__fp_splitA+0xc>
     77c:	86 95       	lsr	r24
     77e:	71 05       	cpc	r23, r1
     780:	61 05       	cpc	r22, r1
     782:	08 94       	sec
     784:	08 95       	ret

00000786 <__fp_zero>:
     786:	e8 94       	clt

00000788 <__fp_szero>:
     788:	bb 27       	eor	r27, r27
     78a:	66 27       	eor	r22, r22
     78c:	77 27       	eor	r23, r23
     78e:	cb 01       	movw	r24, r22
     790:	97 f9       	bld	r25, 7
     792:	08 95       	ret

00000794 <__mulsf3>:
     794:	0b d0       	rcall	.+22     	; 0x7ac <__mulsf3x>
     796:	c4 cf       	rjmp	.-120    	; 0x720 <__fp_round>
     798:	b5 df       	rcall	.-150    	; 0x704 <__fp_pscA>
     79a:	28 f0       	brcs	.+10     	; 0x7a6 <__mulsf3+0x12>
     79c:	ba df       	rcall	.-140    	; 0x712 <__fp_pscB>
     79e:	18 f0       	brcs	.+6      	; 0x7a6 <__mulsf3+0x12>
     7a0:	95 23       	and	r25, r21
     7a2:	09 f0       	breq	.+2      	; 0x7a6 <__mulsf3+0x12>
     7a4:	a6 cf       	rjmp	.-180    	; 0x6f2 <__fp_inf>
     7a6:	ab cf       	rjmp	.-170    	; 0x6fe <__fp_nan>
     7a8:	11 24       	eor	r1, r1
     7aa:	ee cf       	rjmp	.-36     	; 0x788 <__fp_szero>

000007ac <__mulsf3x>:
     7ac:	ca df       	rcall	.-108    	; 0x742 <__fp_split3>
     7ae:	a0 f3       	brcs	.-24     	; 0x798 <__mulsf3+0x4>

000007b0 <__mulsf3_pse>:
     7b0:	95 9f       	mul	r25, r21
     7b2:	d1 f3       	breq	.-12     	; 0x7a8 <__mulsf3+0x14>
     7b4:	95 0f       	add	r25, r21
     7b6:	50 e0       	ldi	r21, 0x00	; 0
     7b8:	55 1f       	adc	r21, r21
     7ba:	62 9f       	mul	r22, r18
     7bc:	f0 01       	movw	r30, r0
     7be:	72 9f       	mul	r23, r18
     7c0:	bb 27       	eor	r27, r27
     7c2:	f0 0d       	add	r31, r0
     7c4:	b1 1d       	adc	r27, r1
     7c6:	63 9f       	mul	r22, r19
     7c8:	aa 27       	eor	r26, r26
     7ca:	f0 0d       	add	r31, r0
     7cc:	b1 1d       	adc	r27, r1
     7ce:	aa 1f       	adc	r26, r26
     7d0:	64 9f       	mul	r22, r20
     7d2:	66 27       	eor	r22, r22
     7d4:	b0 0d       	add	r27, r0
     7d6:	a1 1d       	adc	r26, r1
     7d8:	66 1f       	adc	r22, r22
     7da:	82 9f       	mul	r24, r18
     7dc:	22 27       	eor	r18, r18
     7de:	b0 0d       	add	r27, r0
     7e0:	a1 1d       	adc	r26, r1
     7e2:	62 1f       	adc	r22, r18
     7e4:	73 9f       	mul	r23, r19
     7e6:	b0 0d       	add	r27, r0
     7e8:	a1 1d       	adc	r26, r1
     7ea:	62 1f       	adc	r22, r18
     7ec:	83 9f       	mul	r24, r19
     7ee:	a0 0d       	add	r26, r0
     7f0:	61 1d       	adc	r22, r1
     7f2:	22 1f       	adc	r18, r18
     7f4:	74 9f       	mul	r23, r20
     7f6:	33 27       	eor	r19, r19
     7f8:	a0 0d       	add	r26, r0
     7fa:	61 1d       	adc	r22, r1
     7fc:	23 1f       	adc	r18, r19
     7fe:	84 9f       	mul	r24, r20
     800:	60 0d       	add	r22, r0
     802:	21 1d       	adc	r18, r1
     804:	82 2f       	mov	r24, r18
     806:	76 2f       	mov	r23, r22
     808:	6a 2f       	mov	r22, r26
     80a:	11 24       	eor	r1, r1
     80c:	9f 57       	subi	r25, 0x7F	; 127
     80e:	50 40       	sbci	r21, 0x00	; 0
     810:	8a f0       	brmi	.+34     	; 0x834 <__mulsf3_pse+0x84>
     812:	e1 f0       	breq	.+56     	; 0x84c <__mulsf3_pse+0x9c>
     814:	88 23       	and	r24, r24
     816:	4a f0       	brmi	.+18     	; 0x82a <__mulsf3_pse+0x7a>
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	bb 1f       	adc	r27, r27
     81e:	66 1f       	adc	r22, r22
     820:	77 1f       	adc	r23, r23
     822:	88 1f       	adc	r24, r24
     824:	91 50       	subi	r25, 0x01	; 1
     826:	50 40       	sbci	r21, 0x00	; 0
     828:	a9 f7       	brne	.-22     	; 0x814 <__mulsf3_pse+0x64>
     82a:	9e 3f       	cpi	r25, 0xFE	; 254
     82c:	51 05       	cpc	r21, r1
     82e:	70 f0       	brcs	.+28     	; 0x84c <__mulsf3_pse+0x9c>
     830:	60 cf       	rjmp	.-320    	; 0x6f2 <__fp_inf>
     832:	aa cf       	rjmp	.-172    	; 0x788 <__fp_szero>
     834:	5f 3f       	cpi	r21, 0xFF	; 255
     836:	ec f3       	brlt	.-6      	; 0x832 <__mulsf3_pse+0x82>
     838:	98 3e       	cpi	r25, 0xE8	; 232
     83a:	dc f3       	brlt	.-10     	; 0x832 <__mulsf3_pse+0x82>
     83c:	86 95       	lsr	r24
     83e:	77 95       	ror	r23
     840:	67 95       	ror	r22
     842:	b7 95       	ror	r27
     844:	f7 95       	ror	r31
     846:	e7 95       	ror	r30
     848:	9f 5f       	subi	r25, 0xFF	; 255
     84a:	c1 f7       	brne	.-16     	; 0x83c <__mulsf3_pse+0x8c>
     84c:	fe 2b       	or	r31, r30
     84e:	88 0f       	add	r24, r24
     850:	91 1d       	adc	r25, r1
     852:	96 95       	lsr	r25
     854:	87 95       	ror	r24
     856:	97 f9       	bld	r25, 7
     858:	08 95       	ret

0000085a <fdevopen>:
     85a:	0f 93       	push	r16
     85c:	1f 93       	push	r17
     85e:	cf 93       	push	r28
     860:	df 93       	push	r29
     862:	ec 01       	movw	r28, r24
     864:	8b 01       	movw	r16, r22
     866:	00 97       	sbiw	r24, 0x00	; 0
     868:	31 f4       	brne	.+12     	; 0x876 <fdevopen+0x1c>
     86a:	61 15       	cp	r22, r1
     86c:	71 05       	cpc	r23, r1
     86e:	19 f4       	brne	.+6      	; 0x876 <fdevopen+0x1c>
     870:	80 e0       	ldi	r24, 0x00	; 0
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	37 c0       	rjmp	.+110    	; 0x8e4 <fdevopen+0x8a>
     876:	6e e0       	ldi	r22, 0x0E	; 14
     878:	70 e0       	ldi	r23, 0x00	; 0
     87a:	81 e0       	ldi	r24, 0x01	; 1
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	63 d2       	rcall	.+1222   	; 0xd46 <calloc>
     880:	fc 01       	movw	r30, r24
     882:	00 97       	sbiw	r24, 0x00	; 0
     884:	a9 f3       	breq	.-22     	; 0x870 <fdevopen+0x16>
     886:	80 e8       	ldi	r24, 0x80	; 128
     888:	83 83       	std	Z+3, r24	; 0x03
     88a:	01 15       	cp	r16, r1
     88c:	11 05       	cpc	r17, r1
     88e:	71 f0       	breq	.+28     	; 0x8ac <fdevopen+0x52>
     890:	13 87       	std	Z+11, r17	; 0x0b
     892:	02 87       	std	Z+10, r16	; 0x0a
     894:	81 e8       	ldi	r24, 0x81	; 129
     896:	83 83       	std	Z+3, r24	; 0x03
     898:	80 91 f9 02 	lds	r24, 0x02F9
     89c:	90 91 fa 02 	lds	r25, 0x02FA
     8a0:	89 2b       	or	r24, r25
     8a2:	21 f4       	brne	.+8      	; 0x8ac <fdevopen+0x52>
     8a4:	f0 93 fa 02 	sts	0x02FA, r31
     8a8:	e0 93 f9 02 	sts	0x02F9, r30
     8ac:	20 97       	sbiw	r28, 0x00	; 0
     8ae:	c9 f0       	breq	.+50     	; 0x8e2 <fdevopen+0x88>
     8b0:	d1 87       	std	Z+9, r29	; 0x09
     8b2:	c0 87       	std	Z+8, r28	; 0x08
     8b4:	83 81       	ldd	r24, Z+3	; 0x03
     8b6:	82 60       	ori	r24, 0x02	; 2
     8b8:	83 83       	std	Z+3, r24	; 0x03
     8ba:	80 91 fb 02 	lds	r24, 0x02FB
     8be:	90 91 fc 02 	lds	r25, 0x02FC
     8c2:	89 2b       	or	r24, r25
     8c4:	71 f4       	brne	.+28     	; 0x8e2 <fdevopen+0x88>
     8c6:	f0 93 fc 02 	sts	0x02FC, r31
     8ca:	e0 93 fb 02 	sts	0x02FB, r30
     8ce:	80 91 fd 02 	lds	r24, 0x02FD
     8d2:	90 91 fe 02 	lds	r25, 0x02FE
     8d6:	89 2b       	or	r24, r25
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <fdevopen+0x88>
     8da:	f0 93 fe 02 	sts	0x02FE, r31
     8de:	e0 93 fd 02 	sts	0x02FD, r30
     8e2:	cf 01       	movw	r24, r30
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	1f 91       	pop	r17
     8ea:	0f 91       	pop	r16
     8ec:	08 95       	ret

000008ee <printf>:
     8ee:	cf 93       	push	r28
     8f0:	df 93       	push	r29
     8f2:	cd b7       	in	r28, 0x3d	; 61
     8f4:	de b7       	in	r29, 0x3e	; 62
     8f6:	fe 01       	movw	r30, r28
     8f8:	36 96       	adiw	r30, 0x06	; 6
     8fa:	61 91       	ld	r22, Z+
     8fc:	71 91       	ld	r23, Z+
     8fe:	af 01       	movw	r20, r30
     900:	80 91 fb 02 	lds	r24, 0x02FB
     904:	90 91 fc 02 	lds	r25, 0x02FC
     908:	30 d0       	rcall	.+96     	; 0x96a <vfprintf>
     90a:	df 91       	pop	r29
     90c:	cf 91       	pop	r28
     90e:	08 95       	ret

00000910 <puts>:
     910:	0f 93       	push	r16
     912:	1f 93       	push	r17
     914:	cf 93       	push	r28
     916:	df 93       	push	r29
     918:	e0 91 fb 02 	lds	r30, 0x02FB
     91c:	f0 91 fc 02 	lds	r31, 0x02FC
     920:	23 81       	ldd	r18, Z+3	; 0x03
     922:	21 ff       	sbrs	r18, 1
     924:	1b c0       	rjmp	.+54     	; 0x95c <puts+0x4c>
     926:	ec 01       	movw	r28, r24
     928:	00 e0       	ldi	r16, 0x00	; 0
     92a:	10 e0       	ldi	r17, 0x00	; 0
     92c:	89 91       	ld	r24, Y+
     92e:	60 91 fb 02 	lds	r22, 0x02FB
     932:	70 91 fc 02 	lds	r23, 0x02FC
     936:	db 01       	movw	r26, r22
     938:	18 96       	adiw	r26, 0x08	; 8
     93a:	ed 91       	ld	r30, X+
     93c:	fc 91       	ld	r31, X
     93e:	19 97       	sbiw	r26, 0x09	; 9
     940:	88 23       	and	r24, r24
     942:	31 f0       	breq	.+12     	; 0x950 <puts+0x40>
     944:	19 95       	eicall
     946:	89 2b       	or	r24, r25
     948:	89 f3       	breq	.-30     	; 0x92c <puts+0x1c>
     94a:	0f ef       	ldi	r16, 0xFF	; 255
     94c:	1f ef       	ldi	r17, 0xFF	; 255
     94e:	ee cf       	rjmp	.-36     	; 0x92c <puts+0x1c>
     950:	8a e0       	ldi	r24, 0x0A	; 10
     952:	19 95       	eicall
     954:	89 2b       	or	r24, r25
     956:	11 f4       	brne	.+4      	; 0x95c <puts+0x4c>
     958:	c8 01       	movw	r24, r16
     95a:	02 c0       	rjmp	.+4      	; 0x960 <puts+0x50>
     95c:	8f ef       	ldi	r24, 0xFF	; 255
     95e:	9f ef       	ldi	r25, 0xFF	; 255
     960:	df 91       	pop	r29
     962:	cf 91       	pop	r28
     964:	1f 91       	pop	r17
     966:	0f 91       	pop	r16
     968:	08 95       	ret

0000096a <vfprintf>:
     96a:	2f 92       	push	r2
     96c:	3f 92       	push	r3
     96e:	4f 92       	push	r4
     970:	5f 92       	push	r5
     972:	6f 92       	push	r6
     974:	7f 92       	push	r7
     976:	8f 92       	push	r8
     978:	9f 92       	push	r9
     97a:	af 92       	push	r10
     97c:	bf 92       	push	r11
     97e:	cf 92       	push	r12
     980:	df 92       	push	r13
     982:	ef 92       	push	r14
     984:	ff 92       	push	r15
     986:	0f 93       	push	r16
     988:	1f 93       	push	r17
     98a:	cf 93       	push	r28
     98c:	df 93       	push	r29
     98e:	cd b7       	in	r28, 0x3d	; 61
     990:	de b7       	in	r29, 0x3e	; 62
     992:	2c 97       	sbiw	r28, 0x0c	; 12
     994:	0f b6       	in	r0, 0x3f	; 63
     996:	f8 94       	cli
     998:	de bf       	out	0x3e, r29	; 62
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	cd bf       	out	0x3d, r28	; 61
     99e:	7c 01       	movw	r14, r24
     9a0:	6b 01       	movw	r12, r22
     9a2:	8a 01       	movw	r16, r20
     9a4:	fc 01       	movw	r30, r24
     9a6:	17 82       	std	Z+7, r1	; 0x07
     9a8:	16 82       	std	Z+6, r1	; 0x06
     9aa:	83 81       	ldd	r24, Z+3	; 0x03
     9ac:	81 ff       	sbrs	r24, 1
     9ae:	b0 c1       	rjmp	.+864    	; 0xd10 <vfprintf+0x3a6>
     9b0:	ce 01       	movw	r24, r28
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	4c 01       	movw	r8, r24
     9b6:	f7 01       	movw	r30, r14
     9b8:	93 81       	ldd	r25, Z+3	; 0x03
     9ba:	f6 01       	movw	r30, r12
     9bc:	93 fd       	sbrc	r25, 3
     9be:	85 91       	lpm	r24, Z+
     9c0:	93 ff       	sbrs	r25, 3
     9c2:	81 91       	ld	r24, Z+
     9c4:	6f 01       	movw	r12, r30
     9c6:	88 23       	and	r24, r24
     9c8:	09 f4       	brne	.+2      	; 0x9cc <vfprintf+0x62>
     9ca:	9e c1       	rjmp	.+828    	; 0xd08 <vfprintf+0x39e>
     9cc:	85 32       	cpi	r24, 0x25	; 37
     9ce:	39 f4       	brne	.+14     	; 0x9de <vfprintf+0x74>
     9d0:	93 fd       	sbrc	r25, 3
     9d2:	85 91       	lpm	r24, Z+
     9d4:	93 ff       	sbrs	r25, 3
     9d6:	81 91       	ld	r24, Z+
     9d8:	6f 01       	movw	r12, r30
     9da:	85 32       	cpi	r24, 0x25	; 37
     9dc:	21 f4       	brne	.+8      	; 0x9e6 <vfprintf+0x7c>
     9de:	b7 01       	movw	r22, r14
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0f d3       	rcall	.+1566   	; 0x1002 <fputc>
     9e4:	e8 cf       	rjmp	.-48     	; 0x9b6 <vfprintf+0x4c>
     9e6:	51 2c       	mov	r5, r1
     9e8:	31 2c       	mov	r3, r1
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	20 32       	cpi	r18, 0x20	; 32
     9ee:	a0 f4       	brcc	.+40     	; 0xa18 <vfprintf+0xae>
     9f0:	8b 32       	cpi	r24, 0x2B	; 43
     9f2:	69 f0       	breq	.+26     	; 0xa0e <vfprintf+0xa4>
     9f4:	30 f4       	brcc	.+12     	; 0xa02 <vfprintf+0x98>
     9f6:	80 32       	cpi	r24, 0x20	; 32
     9f8:	59 f0       	breq	.+22     	; 0xa10 <vfprintf+0xa6>
     9fa:	83 32       	cpi	r24, 0x23	; 35
     9fc:	69 f4       	brne	.+26     	; 0xa18 <vfprintf+0xae>
     9fe:	20 61       	ori	r18, 0x10	; 16
     a00:	2c c0       	rjmp	.+88     	; 0xa5a <vfprintf+0xf0>
     a02:	8d 32       	cpi	r24, 0x2D	; 45
     a04:	39 f0       	breq	.+14     	; 0xa14 <vfprintf+0xaa>
     a06:	80 33       	cpi	r24, 0x30	; 48
     a08:	39 f4       	brne	.+14     	; 0xa18 <vfprintf+0xae>
     a0a:	21 60       	ori	r18, 0x01	; 1
     a0c:	26 c0       	rjmp	.+76     	; 0xa5a <vfprintf+0xf0>
     a0e:	22 60       	ori	r18, 0x02	; 2
     a10:	24 60       	ori	r18, 0x04	; 4
     a12:	23 c0       	rjmp	.+70     	; 0xa5a <vfprintf+0xf0>
     a14:	28 60       	ori	r18, 0x08	; 8
     a16:	21 c0       	rjmp	.+66     	; 0xa5a <vfprintf+0xf0>
     a18:	27 fd       	sbrc	r18, 7
     a1a:	27 c0       	rjmp	.+78     	; 0xa6a <vfprintf+0x100>
     a1c:	30 ed       	ldi	r19, 0xD0	; 208
     a1e:	38 0f       	add	r19, r24
     a20:	3a 30       	cpi	r19, 0x0A	; 10
     a22:	78 f4       	brcc	.+30     	; 0xa42 <vfprintf+0xd8>
     a24:	26 ff       	sbrs	r18, 6
     a26:	06 c0       	rjmp	.+12     	; 0xa34 <vfprintf+0xca>
     a28:	fa e0       	ldi	r31, 0x0A	; 10
     a2a:	5f 9e       	mul	r5, r31
     a2c:	30 0d       	add	r19, r0
     a2e:	11 24       	eor	r1, r1
     a30:	53 2e       	mov	r5, r19
     a32:	13 c0       	rjmp	.+38     	; 0xa5a <vfprintf+0xf0>
     a34:	8a e0       	ldi	r24, 0x0A	; 10
     a36:	38 9e       	mul	r3, r24
     a38:	30 0d       	add	r19, r0
     a3a:	11 24       	eor	r1, r1
     a3c:	33 2e       	mov	r3, r19
     a3e:	20 62       	ori	r18, 0x20	; 32
     a40:	0c c0       	rjmp	.+24     	; 0xa5a <vfprintf+0xf0>
     a42:	8e 32       	cpi	r24, 0x2E	; 46
     a44:	21 f4       	brne	.+8      	; 0xa4e <vfprintf+0xe4>
     a46:	26 fd       	sbrc	r18, 6
     a48:	5f c1       	rjmp	.+702    	; 0xd08 <vfprintf+0x39e>
     a4a:	20 64       	ori	r18, 0x40	; 64
     a4c:	06 c0       	rjmp	.+12     	; 0xa5a <vfprintf+0xf0>
     a4e:	8c 36       	cpi	r24, 0x6C	; 108
     a50:	11 f4       	brne	.+4      	; 0xa56 <vfprintf+0xec>
     a52:	20 68       	ori	r18, 0x80	; 128
     a54:	02 c0       	rjmp	.+4      	; 0xa5a <vfprintf+0xf0>
     a56:	88 36       	cpi	r24, 0x68	; 104
     a58:	41 f4       	brne	.+16     	; 0xa6a <vfprintf+0x100>
     a5a:	f6 01       	movw	r30, r12
     a5c:	93 fd       	sbrc	r25, 3
     a5e:	85 91       	lpm	r24, Z+
     a60:	93 ff       	sbrs	r25, 3
     a62:	81 91       	ld	r24, Z+
     a64:	6f 01       	movw	r12, r30
     a66:	81 11       	cpse	r24, r1
     a68:	c1 cf       	rjmp	.-126    	; 0x9ec <vfprintf+0x82>
     a6a:	98 2f       	mov	r25, r24
     a6c:	9f 7d       	andi	r25, 0xDF	; 223
     a6e:	95 54       	subi	r25, 0x45	; 69
     a70:	93 30       	cpi	r25, 0x03	; 3
     a72:	28 f4       	brcc	.+10     	; 0xa7e <vfprintf+0x114>
     a74:	0c 5f       	subi	r16, 0xFC	; 252
     a76:	1f 4f       	sbci	r17, 0xFF	; 255
     a78:	ff e3       	ldi	r31, 0x3F	; 63
     a7a:	f9 83       	std	Y+1, r31	; 0x01
     a7c:	0d c0       	rjmp	.+26     	; 0xa98 <vfprintf+0x12e>
     a7e:	83 36       	cpi	r24, 0x63	; 99
     a80:	31 f0       	breq	.+12     	; 0xa8e <vfprintf+0x124>
     a82:	83 37       	cpi	r24, 0x73	; 115
     a84:	71 f0       	breq	.+28     	; 0xaa2 <vfprintf+0x138>
     a86:	83 35       	cpi	r24, 0x53	; 83
     a88:	09 f0       	breq	.+2      	; 0xa8c <vfprintf+0x122>
     a8a:	57 c0       	rjmp	.+174    	; 0xb3a <vfprintf+0x1d0>
     a8c:	21 c0       	rjmp	.+66     	; 0xad0 <vfprintf+0x166>
     a8e:	f8 01       	movw	r30, r16
     a90:	80 81       	ld	r24, Z
     a92:	89 83       	std	Y+1, r24	; 0x01
     a94:	0e 5f       	subi	r16, 0xFE	; 254
     a96:	1f 4f       	sbci	r17, 0xFF	; 255
     a98:	44 24       	eor	r4, r4
     a9a:	43 94       	inc	r4
     a9c:	51 2c       	mov	r5, r1
     a9e:	54 01       	movw	r10, r8
     aa0:	14 c0       	rjmp	.+40     	; 0xaca <vfprintf+0x160>
     aa2:	38 01       	movw	r6, r16
     aa4:	f2 e0       	ldi	r31, 0x02	; 2
     aa6:	6f 0e       	add	r6, r31
     aa8:	71 1c       	adc	r7, r1
     aaa:	f8 01       	movw	r30, r16
     aac:	a0 80       	ld	r10, Z
     aae:	b1 80       	ldd	r11, Z+1	; 0x01
     ab0:	26 ff       	sbrs	r18, 6
     ab2:	03 c0       	rjmp	.+6      	; 0xaba <vfprintf+0x150>
     ab4:	65 2d       	mov	r22, r5
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	02 c0       	rjmp	.+4      	; 0xabe <vfprintf+0x154>
     aba:	6f ef       	ldi	r22, 0xFF	; 255
     abc:	7f ef       	ldi	r23, 0xFF	; 255
     abe:	c5 01       	movw	r24, r10
     ac0:	2c 87       	std	Y+12, r18	; 0x0c
     ac2:	94 d2       	rcall	.+1320   	; 0xfec <strnlen>
     ac4:	2c 01       	movw	r4, r24
     ac6:	83 01       	movw	r16, r6
     ac8:	2c 85       	ldd	r18, Y+12	; 0x0c
     aca:	2f 77       	andi	r18, 0x7F	; 127
     acc:	22 2e       	mov	r2, r18
     ace:	16 c0       	rjmp	.+44     	; 0xafc <vfprintf+0x192>
     ad0:	38 01       	movw	r6, r16
     ad2:	f2 e0       	ldi	r31, 0x02	; 2
     ad4:	6f 0e       	add	r6, r31
     ad6:	71 1c       	adc	r7, r1
     ad8:	f8 01       	movw	r30, r16
     ada:	a0 80       	ld	r10, Z
     adc:	b1 80       	ldd	r11, Z+1	; 0x01
     ade:	26 ff       	sbrs	r18, 6
     ae0:	03 c0       	rjmp	.+6      	; 0xae8 <vfprintf+0x17e>
     ae2:	65 2d       	mov	r22, r5
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	02 c0       	rjmp	.+4      	; 0xaec <vfprintf+0x182>
     ae8:	6f ef       	ldi	r22, 0xFF	; 255
     aea:	7f ef       	ldi	r23, 0xFF	; 255
     aec:	c5 01       	movw	r24, r10
     aee:	2c 87       	std	Y+12, r18	; 0x0c
     af0:	6b d2       	rcall	.+1238   	; 0xfc8 <strnlen_P>
     af2:	2c 01       	movw	r4, r24
     af4:	2c 85       	ldd	r18, Y+12	; 0x0c
     af6:	20 68       	ori	r18, 0x80	; 128
     af8:	22 2e       	mov	r2, r18
     afa:	83 01       	movw	r16, r6
     afc:	23 fc       	sbrc	r2, 3
     afe:	19 c0       	rjmp	.+50     	; 0xb32 <vfprintf+0x1c8>
     b00:	83 2d       	mov	r24, r3
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	48 16       	cp	r4, r24
     b06:	59 06       	cpc	r5, r25
     b08:	a0 f4       	brcc	.+40     	; 0xb32 <vfprintf+0x1c8>
     b0a:	b7 01       	movw	r22, r14
     b0c:	80 e2       	ldi	r24, 0x20	; 32
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	78 d2       	rcall	.+1264   	; 0x1002 <fputc>
     b12:	3a 94       	dec	r3
     b14:	f5 cf       	rjmp	.-22     	; 0xb00 <vfprintf+0x196>
     b16:	f5 01       	movw	r30, r10
     b18:	27 fc       	sbrc	r2, 7
     b1a:	85 91       	lpm	r24, Z+
     b1c:	27 fe       	sbrs	r2, 7
     b1e:	81 91       	ld	r24, Z+
     b20:	5f 01       	movw	r10, r30
     b22:	b7 01       	movw	r22, r14
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	6d d2       	rcall	.+1242   	; 0x1002 <fputc>
     b28:	31 10       	cpse	r3, r1
     b2a:	3a 94       	dec	r3
     b2c:	f1 e0       	ldi	r31, 0x01	; 1
     b2e:	4f 1a       	sub	r4, r31
     b30:	51 08       	sbc	r5, r1
     b32:	41 14       	cp	r4, r1
     b34:	51 04       	cpc	r5, r1
     b36:	79 f7       	brne	.-34     	; 0xb16 <vfprintf+0x1ac>
     b38:	de c0       	rjmp	.+444    	; 0xcf6 <vfprintf+0x38c>
     b3a:	84 36       	cpi	r24, 0x64	; 100
     b3c:	11 f0       	breq	.+4      	; 0xb42 <vfprintf+0x1d8>
     b3e:	89 36       	cpi	r24, 0x69	; 105
     b40:	31 f5       	brne	.+76     	; 0xb8e <vfprintf+0x224>
     b42:	f8 01       	movw	r30, r16
     b44:	27 ff       	sbrs	r18, 7
     b46:	07 c0       	rjmp	.+14     	; 0xb56 <vfprintf+0x1ec>
     b48:	60 81       	ld	r22, Z
     b4a:	71 81       	ldd	r23, Z+1	; 0x01
     b4c:	82 81       	ldd	r24, Z+2	; 0x02
     b4e:	93 81       	ldd	r25, Z+3	; 0x03
     b50:	0c 5f       	subi	r16, 0xFC	; 252
     b52:	1f 4f       	sbci	r17, 0xFF	; 255
     b54:	08 c0       	rjmp	.+16     	; 0xb66 <vfprintf+0x1fc>
     b56:	60 81       	ld	r22, Z
     b58:	71 81       	ldd	r23, Z+1	; 0x01
     b5a:	88 27       	eor	r24, r24
     b5c:	77 fd       	sbrc	r23, 7
     b5e:	80 95       	com	r24
     b60:	98 2f       	mov	r25, r24
     b62:	0e 5f       	subi	r16, 0xFE	; 254
     b64:	1f 4f       	sbci	r17, 0xFF	; 255
     b66:	2f 76       	andi	r18, 0x6F	; 111
     b68:	b2 2e       	mov	r11, r18
     b6a:	97 ff       	sbrs	r25, 7
     b6c:	09 c0       	rjmp	.+18     	; 0xb80 <vfprintf+0x216>
     b6e:	90 95       	com	r25
     b70:	80 95       	com	r24
     b72:	70 95       	com	r23
     b74:	61 95       	neg	r22
     b76:	7f 4f       	sbci	r23, 0xFF	; 255
     b78:	8f 4f       	sbci	r24, 0xFF	; 255
     b7a:	9f 4f       	sbci	r25, 0xFF	; 255
     b7c:	20 68       	ori	r18, 0x80	; 128
     b7e:	b2 2e       	mov	r11, r18
     b80:	2a e0       	ldi	r18, 0x0A	; 10
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	a4 01       	movw	r20, r8
     b86:	6f d2       	rcall	.+1246   	; 0x1066 <__ultoa_invert>
     b88:	a8 2e       	mov	r10, r24
     b8a:	a8 18       	sub	r10, r8
     b8c:	43 c0       	rjmp	.+134    	; 0xc14 <vfprintf+0x2aa>
     b8e:	85 37       	cpi	r24, 0x75	; 117
     b90:	29 f4       	brne	.+10     	; 0xb9c <vfprintf+0x232>
     b92:	2f 7e       	andi	r18, 0xEF	; 239
     b94:	b2 2e       	mov	r11, r18
     b96:	2a e0       	ldi	r18, 0x0A	; 10
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	25 c0       	rjmp	.+74     	; 0xbe6 <vfprintf+0x27c>
     b9c:	f2 2f       	mov	r31, r18
     b9e:	f9 7f       	andi	r31, 0xF9	; 249
     ba0:	bf 2e       	mov	r11, r31
     ba2:	8f 36       	cpi	r24, 0x6F	; 111
     ba4:	c1 f0       	breq	.+48     	; 0xbd6 <vfprintf+0x26c>
     ba6:	18 f4       	brcc	.+6      	; 0xbae <vfprintf+0x244>
     ba8:	88 35       	cpi	r24, 0x58	; 88
     baa:	79 f0       	breq	.+30     	; 0xbca <vfprintf+0x260>
     bac:	ad c0       	rjmp	.+346    	; 0xd08 <vfprintf+0x39e>
     bae:	80 37       	cpi	r24, 0x70	; 112
     bb0:	19 f0       	breq	.+6      	; 0xbb8 <vfprintf+0x24e>
     bb2:	88 37       	cpi	r24, 0x78	; 120
     bb4:	21 f0       	breq	.+8      	; 0xbbe <vfprintf+0x254>
     bb6:	a8 c0       	rjmp	.+336    	; 0xd08 <vfprintf+0x39e>
     bb8:	2f 2f       	mov	r18, r31
     bba:	20 61       	ori	r18, 0x10	; 16
     bbc:	b2 2e       	mov	r11, r18
     bbe:	b4 fe       	sbrs	r11, 4
     bc0:	0d c0       	rjmp	.+26     	; 0xbdc <vfprintf+0x272>
     bc2:	8b 2d       	mov	r24, r11
     bc4:	84 60       	ori	r24, 0x04	; 4
     bc6:	b8 2e       	mov	r11, r24
     bc8:	09 c0       	rjmp	.+18     	; 0xbdc <vfprintf+0x272>
     bca:	24 ff       	sbrs	r18, 4
     bcc:	0a c0       	rjmp	.+20     	; 0xbe2 <vfprintf+0x278>
     bce:	9f 2f       	mov	r25, r31
     bd0:	96 60       	ori	r25, 0x06	; 6
     bd2:	b9 2e       	mov	r11, r25
     bd4:	06 c0       	rjmp	.+12     	; 0xbe2 <vfprintf+0x278>
     bd6:	28 e0       	ldi	r18, 0x08	; 8
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	05 c0       	rjmp	.+10     	; 0xbe6 <vfprintf+0x27c>
     bdc:	20 e1       	ldi	r18, 0x10	; 16
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <vfprintf+0x27c>
     be2:	20 e1       	ldi	r18, 0x10	; 16
     be4:	32 e0       	ldi	r19, 0x02	; 2
     be6:	f8 01       	movw	r30, r16
     be8:	b7 fe       	sbrs	r11, 7
     bea:	07 c0       	rjmp	.+14     	; 0xbfa <vfprintf+0x290>
     bec:	60 81       	ld	r22, Z
     bee:	71 81       	ldd	r23, Z+1	; 0x01
     bf0:	82 81       	ldd	r24, Z+2	; 0x02
     bf2:	93 81       	ldd	r25, Z+3	; 0x03
     bf4:	0c 5f       	subi	r16, 0xFC	; 252
     bf6:	1f 4f       	sbci	r17, 0xFF	; 255
     bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0x29c>
     bfa:	60 81       	ld	r22, Z
     bfc:	71 81       	ldd	r23, Z+1	; 0x01
     bfe:	80 e0       	ldi	r24, 0x00	; 0
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	0e 5f       	subi	r16, 0xFE	; 254
     c04:	1f 4f       	sbci	r17, 0xFF	; 255
     c06:	a4 01       	movw	r20, r8
     c08:	2e d2       	rcall	.+1116   	; 0x1066 <__ultoa_invert>
     c0a:	a8 2e       	mov	r10, r24
     c0c:	a8 18       	sub	r10, r8
     c0e:	fb 2d       	mov	r31, r11
     c10:	ff 77       	andi	r31, 0x7F	; 127
     c12:	bf 2e       	mov	r11, r31
     c14:	b6 fe       	sbrs	r11, 6
     c16:	0b c0       	rjmp	.+22     	; 0xc2e <vfprintf+0x2c4>
     c18:	2b 2d       	mov	r18, r11
     c1a:	2e 7f       	andi	r18, 0xFE	; 254
     c1c:	a5 14       	cp	r10, r5
     c1e:	50 f4       	brcc	.+20     	; 0xc34 <vfprintf+0x2ca>
     c20:	b4 fe       	sbrs	r11, 4
     c22:	0a c0       	rjmp	.+20     	; 0xc38 <vfprintf+0x2ce>
     c24:	b2 fc       	sbrc	r11, 2
     c26:	08 c0       	rjmp	.+16     	; 0xc38 <vfprintf+0x2ce>
     c28:	2b 2d       	mov	r18, r11
     c2a:	2e 7e       	andi	r18, 0xEE	; 238
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <vfprintf+0x2ce>
     c2e:	7a 2c       	mov	r7, r10
     c30:	2b 2d       	mov	r18, r11
     c32:	03 c0       	rjmp	.+6      	; 0xc3a <vfprintf+0x2d0>
     c34:	7a 2c       	mov	r7, r10
     c36:	01 c0       	rjmp	.+2      	; 0xc3a <vfprintf+0x2d0>
     c38:	75 2c       	mov	r7, r5
     c3a:	24 ff       	sbrs	r18, 4
     c3c:	0d c0       	rjmp	.+26     	; 0xc58 <vfprintf+0x2ee>
     c3e:	fe 01       	movw	r30, r28
     c40:	ea 0d       	add	r30, r10
     c42:	f1 1d       	adc	r31, r1
     c44:	80 81       	ld	r24, Z
     c46:	80 33       	cpi	r24, 0x30	; 48
     c48:	11 f4       	brne	.+4      	; 0xc4e <vfprintf+0x2e4>
     c4a:	29 7e       	andi	r18, 0xE9	; 233
     c4c:	09 c0       	rjmp	.+18     	; 0xc60 <vfprintf+0x2f6>
     c4e:	22 ff       	sbrs	r18, 2
     c50:	06 c0       	rjmp	.+12     	; 0xc5e <vfprintf+0x2f4>
     c52:	73 94       	inc	r7
     c54:	73 94       	inc	r7
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <vfprintf+0x2f6>
     c58:	82 2f       	mov	r24, r18
     c5a:	86 78       	andi	r24, 0x86	; 134
     c5c:	09 f0       	breq	.+2      	; 0xc60 <vfprintf+0x2f6>
     c5e:	73 94       	inc	r7
     c60:	23 fd       	sbrc	r18, 3
     c62:	12 c0       	rjmp	.+36     	; 0xc88 <vfprintf+0x31e>
     c64:	20 ff       	sbrs	r18, 0
     c66:	06 c0       	rjmp	.+12     	; 0xc74 <vfprintf+0x30a>
     c68:	5a 2c       	mov	r5, r10
     c6a:	73 14       	cp	r7, r3
     c6c:	18 f4       	brcc	.+6      	; 0xc74 <vfprintf+0x30a>
     c6e:	53 0c       	add	r5, r3
     c70:	57 18       	sub	r5, r7
     c72:	73 2c       	mov	r7, r3
     c74:	73 14       	cp	r7, r3
     c76:	60 f4       	brcc	.+24     	; 0xc90 <vfprintf+0x326>
     c78:	b7 01       	movw	r22, r14
     c7a:	80 e2       	ldi	r24, 0x20	; 32
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	2c 87       	std	Y+12, r18	; 0x0c
     c80:	c0 d1       	rcall	.+896    	; 0x1002 <fputc>
     c82:	73 94       	inc	r7
     c84:	2c 85       	ldd	r18, Y+12	; 0x0c
     c86:	f6 cf       	rjmp	.-20     	; 0xc74 <vfprintf+0x30a>
     c88:	73 14       	cp	r7, r3
     c8a:	10 f4       	brcc	.+4      	; 0xc90 <vfprintf+0x326>
     c8c:	37 18       	sub	r3, r7
     c8e:	01 c0       	rjmp	.+2      	; 0xc92 <vfprintf+0x328>
     c90:	31 2c       	mov	r3, r1
     c92:	24 ff       	sbrs	r18, 4
     c94:	11 c0       	rjmp	.+34     	; 0xcb8 <vfprintf+0x34e>
     c96:	b7 01       	movw	r22, r14
     c98:	80 e3       	ldi	r24, 0x30	; 48
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	2c 87       	std	Y+12, r18	; 0x0c
     c9e:	b1 d1       	rcall	.+866    	; 0x1002 <fputc>
     ca0:	2c 85       	ldd	r18, Y+12	; 0x0c
     ca2:	22 ff       	sbrs	r18, 2
     ca4:	16 c0       	rjmp	.+44     	; 0xcd2 <vfprintf+0x368>
     ca6:	21 ff       	sbrs	r18, 1
     ca8:	03 c0       	rjmp	.+6      	; 0xcb0 <vfprintf+0x346>
     caa:	88 e5       	ldi	r24, 0x58	; 88
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	02 c0       	rjmp	.+4      	; 0xcb4 <vfprintf+0x34a>
     cb0:	88 e7       	ldi	r24, 0x78	; 120
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	b7 01       	movw	r22, r14
     cb6:	0c c0       	rjmp	.+24     	; 0xcd0 <vfprintf+0x366>
     cb8:	82 2f       	mov	r24, r18
     cba:	86 78       	andi	r24, 0x86	; 134
     cbc:	51 f0       	breq	.+20     	; 0xcd2 <vfprintf+0x368>
     cbe:	21 fd       	sbrc	r18, 1
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <vfprintf+0x35c>
     cc2:	80 e2       	ldi	r24, 0x20	; 32
     cc4:	01 c0       	rjmp	.+2      	; 0xcc8 <vfprintf+0x35e>
     cc6:	8b e2       	ldi	r24, 0x2B	; 43
     cc8:	27 fd       	sbrc	r18, 7
     cca:	8d e2       	ldi	r24, 0x2D	; 45
     ccc:	b7 01       	movw	r22, r14
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	98 d1       	rcall	.+816    	; 0x1002 <fputc>
     cd2:	a5 14       	cp	r10, r5
     cd4:	30 f4       	brcc	.+12     	; 0xce2 <vfprintf+0x378>
     cd6:	b7 01       	movw	r22, r14
     cd8:	80 e3       	ldi	r24, 0x30	; 48
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	92 d1       	rcall	.+804    	; 0x1002 <fputc>
     cde:	5a 94       	dec	r5
     ce0:	f8 cf       	rjmp	.-16     	; 0xcd2 <vfprintf+0x368>
     ce2:	aa 94       	dec	r10
     ce4:	f4 01       	movw	r30, r8
     ce6:	ea 0d       	add	r30, r10
     ce8:	f1 1d       	adc	r31, r1
     cea:	80 81       	ld	r24, Z
     cec:	b7 01       	movw	r22, r14
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	88 d1       	rcall	.+784    	; 0x1002 <fputc>
     cf2:	a1 10       	cpse	r10, r1
     cf4:	f6 cf       	rjmp	.-20     	; 0xce2 <vfprintf+0x378>
     cf6:	33 20       	and	r3, r3
     cf8:	09 f4       	brne	.+2      	; 0xcfc <vfprintf+0x392>
     cfa:	5d ce       	rjmp	.-838    	; 0x9b6 <vfprintf+0x4c>
     cfc:	b7 01       	movw	r22, r14
     cfe:	80 e2       	ldi	r24, 0x20	; 32
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	7f d1       	rcall	.+766    	; 0x1002 <fputc>
     d04:	3a 94       	dec	r3
     d06:	f7 cf       	rjmp	.-18     	; 0xcf6 <vfprintf+0x38c>
     d08:	f7 01       	movw	r30, r14
     d0a:	86 81       	ldd	r24, Z+6	; 0x06
     d0c:	97 81       	ldd	r25, Z+7	; 0x07
     d0e:	02 c0       	rjmp	.+4      	; 0xd14 <vfprintf+0x3aa>
     d10:	8f ef       	ldi	r24, 0xFF	; 255
     d12:	9f ef       	ldi	r25, 0xFF	; 255
     d14:	2c 96       	adiw	r28, 0x0c	; 12
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	1f 91       	pop	r17
     d26:	0f 91       	pop	r16
     d28:	ff 90       	pop	r15
     d2a:	ef 90       	pop	r14
     d2c:	df 90       	pop	r13
     d2e:	cf 90       	pop	r12
     d30:	bf 90       	pop	r11
     d32:	af 90       	pop	r10
     d34:	9f 90       	pop	r9
     d36:	8f 90       	pop	r8
     d38:	7f 90       	pop	r7
     d3a:	6f 90       	pop	r6
     d3c:	5f 90       	pop	r5
     d3e:	4f 90       	pop	r4
     d40:	3f 90       	pop	r3
     d42:	2f 90       	pop	r2
     d44:	08 95       	ret

00000d46 <calloc>:
     d46:	0f 93       	push	r16
     d48:	1f 93       	push	r17
     d4a:	cf 93       	push	r28
     d4c:	df 93       	push	r29
     d4e:	86 9f       	mul	r24, r22
     d50:	80 01       	movw	r16, r0
     d52:	87 9f       	mul	r24, r23
     d54:	10 0d       	add	r17, r0
     d56:	96 9f       	mul	r25, r22
     d58:	10 0d       	add	r17, r0
     d5a:	11 24       	eor	r1, r1
     d5c:	c8 01       	movw	r24, r16
     d5e:	0d d0       	rcall	.+26     	; 0xd7a <malloc>
     d60:	ec 01       	movw	r28, r24
     d62:	00 97       	sbiw	r24, 0x00	; 0
     d64:	21 f0       	breq	.+8      	; 0xd6e <calloc+0x28>
     d66:	a8 01       	movw	r20, r16
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	70 e0       	ldi	r23, 0x00	; 0
     d6c:	38 d1       	rcall	.+624    	; 0xfde <memset>
     d6e:	ce 01       	movw	r24, r28
     d70:	df 91       	pop	r29
     d72:	cf 91       	pop	r28
     d74:	1f 91       	pop	r17
     d76:	0f 91       	pop	r16
     d78:	08 95       	ret

00000d7a <malloc>:
     d7a:	cf 93       	push	r28
     d7c:	df 93       	push	r29
     d7e:	82 30       	cpi	r24, 0x02	; 2
     d80:	91 05       	cpc	r25, r1
     d82:	10 f4       	brcc	.+4      	; 0xd88 <malloc+0xe>
     d84:	82 e0       	ldi	r24, 0x02	; 2
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	e0 91 01 03 	lds	r30, 0x0301
     d8c:	f0 91 02 03 	lds	r31, 0x0302
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	a0 e0       	ldi	r26, 0x00	; 0
     d96:	b0 e0       	ldi	r27, 0x00	; 0
     d98:	30 97       	sbiw	r30, 0x00	; 0
     d9a:	39 f1       	breq	.+78     	; 0xdea <malloc+0x70>
     d9c:	40 81       	ld	r20, Z
     d9e:	51 81       	ldd	r21, Z+1	; 0x01
     da0:	48 17       	cp	r20, r24
     da2:	59 07       	cpc	r21, r25
     da4:	b8 f0       	brcs	.+46     	; 0xdd4 <malloc+0x5a>
     da6:	48 17       	cp	r20, r24
     da8:	59 07       	cpc	r21, r25
     daa:	71 f4       	brne	.+28     	; 0xdc8 <malloc+0x4e>
     dac:	82 81       	ldd	r24, Z+2	; 0x02
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	10 97       	sbiw	r26, 0x00	; 0
     db2:	29 f0       	breq	.+10     	; 0xdbe <malloc+0x44>
     db4:	13 96       	adiw	r26, 0x03	; 3
     db6:	9c 93       	st	X, r25
     db8:	8e 93       	st	-X, r24
     dba:	12 97       	sbiw	r26, 0x02	; 2
     dbc:	2c c0       	rjmp	.+88     	; 0xe16 <malloc+0x9c>
     dbe:	90 93 02 03 	sts	0x0302, r25
     dc2:	80 93 01 03 	sts	0x0301, r24
     dc6:	27 c0       	rjmp	.+78     	; 0xe16 <malloc+0x9c>
     dc8:	21 15       	cp	r18, r1
     dca:	31 05       	cpc	r19, r1
     dcc:	31 f0       	breq	.+12     	; 0xdda <malloc+0x60>
     dce:	42 17       	cp	r20, r18
     dd0:	53 07       	cpc	r21, r19
     dd2:	18 f0       	brcs	.+6      	; 0xdda <malloc+0x60>
     dd4:	a9 01       	movw	r20, r18
     dd6:	db 01       	movw	r26, r22
     dd8:	01 c0       	rjmp	.+2      	; 0xddc <malloc+0x62>
     dda:	ef 01       	movw	r28, r30
     ddc:	9a 01       	movw	r18, r20
     dde:	bd 01       	movw	r22, r26
     de0:	df 01       	movw	r26, r30
     de2:	02 80       	ldd	r0, Z+2	; 0x02
     de4:	f3 81       	ldd	r31, Z+3	; 0x03
     de6:	e0 2d       	mov	r30, r0
     de8:	d7 cf       	rjmp	.-82     	; 0xd98 <malloc+0x1e>
     dea:	21 15       	cp	r18, r1
     dec:	31 05       	cpc	r19, r1
     dee:	f9 f0       	breq	.+62     	; 0xe2e <malloc+0xb4>
     df0:	28 1b       	sub	r18, r24
     df2:	39 0b       	sbc	r19, r25
     df4:	24 30       	cpi	r18, 0x04	; 4
     df6:	31 05       	cpc	r19, r1
     df8:	80 f4       	brcc	.+32     	; 0xe1a <malloc+0xa0>
     dfa:	8a 81       	ldd	r24, Y+2	; 0x02
     dfc:	9b 81       	ldd	r25, Y+3	; 0x03
     dfe:	61 15       	cp	r22, r1
     e00:	71 05       	cpc	r23, r1
     e02:	21 f0       	breq	.+8      	; 0xe0c <malloc+0x92>
     e04:	fb 01       	movw	r30, r22
     e06:	93 83       	std	Z+3, r25	; 0x03
     e08:	82 83       	std	Z+2, r24	; 0x02
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <malloc+0x9a>
     e0c:	90 93 02 03 	sts	0x0302, r25
     e10:	80 93 01 03 	sts	0x0301, r24
     e14:	fe 01       	movw	r30, r28
     e16:	32 96       	adiw	r30, 0x02	; 2
     e18:	44 c0       	rjmp	.+136    	; 0xea2 <malloc+0x128>
     e1a:	fe 01       	movw	r30, r28
     e1c:	e2 0f       	add	r30, r18
     e1e:	f3 1f       	adc	r31, r19
     e20:	81 93       	st	Z+, r24
     e22:	91 93       	st	Z+, r25
     e24:	22 50       	subi	r18, 0x02	; 2
     e26:	31 09       	sbc	r19, r1
     e28:	39 83       	std	Y+1, r19	; 0x01
     e2a:	28 83       	st	Y, r18
     e2c:	3a c0       	rjmp	.+116    	; 0xea2 <malloc+0x128>
     e2e:	20 91 ff 02 	lds	r18, 0x02FF
     e32:	30 91 00 03 	lds	r19, 0x0300
     e36:	23 2b       	or	r18, r19
     e38:	41 f4       	brne	.+16     	; 0xe4a <malloc+0xd0>
     e3a:	20 91 02 02 	lds	r18, 0x0202
     e3e:	30 91 03 02 	lds	r19, 0x0203
     e42:	30 93 00 03 	sts	0x0300, r19
     e46:	20 93 ff 02 	sts	0x02FF, r18
     e4a:	20 91 00 02 	lds	r18, 0x0200
     e4e:	30 91 01 02 	lds	r19, 0x0201
     e52:	21 15       	cp	r18, r1
     e54:	31 05       	cpc	r19, r1
     e56:	41 f4       	brne	.+16     	; 0xe68 <malloc+0xee>
     e58:	2d b7       	in	r18, 0x3d	; 61
     e5a:	3e b7       	in	r19, 0x3e	; 62
     e5c:	40 91 04 02 	lds	r20, 0x0204
     e60:	50 91 05 02 	lds	r21, 0x0205
     e64:	24 1b       	sub	r18, r20
     e66:	35 0b       	sbc	r19, r21
     e68:	e0 91 ff 02 	lds	r30, 0x02FF
     e6c:	f0 91 00 03 	lds	r31, 0x0300
     e70:	e2 17       	cp	r30, r18
     e72:	f3 07       	cpc	r31, r19
     e74:	a0 f4       	brcc	.+40     	; 0xe9e <malloc+0x124>
     e76:	2e 1b       	sub	r18, r30
     e78:	3f 0b       	sbc	r19, r31
     e7a:	28 17       	cp	r18, r24
     e7c:	39 07       	cpc	r19, r25
     e7e:	78 f0       	brcs	.+30     	; 0xe9e <malloc+0x124>
     e80:	ac 01       	movw	r20, r24
     e82:	4e 5f       	subi	r20, 0xFE	; 254
     e84:	5f 4f       	sbci	r21, 0xFF	; 255
     e86:	24 17       	cp	r18, r20
     e88:	35 07       	cpc	r19, r21
     e8a:	48 f0       	brcs	.+18     	; 0xe9e <malloc+0x124>
     e8c:	4e 0f       	add	r20, r30
     e8e:	5f 1f       	adc	r21, r31
     e90:	50 93 00 03 	sts	0x0300, r21
     e94:	40 93 ff 02 	sts	0x02FF, r20
     e98:	81 93       	st	Z+, r24
     e9a:	91 93       	st	Z+, r25
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <malloc+0x128>
     e9e:	e0 e0       	ldi	r30, 0x00	; 0
     ea0:	f0 e0       	ldi	r31, 0x00	; 0
     ea2:	cf 01       	movw	r24, r30
     ea4:	df 91       	pop	r29
     ea6:	cf 91       	pop	r28
     ea8:	08 95       	ret

00000eaa <free>:
     eaa:	cf 93       	push	r28
     eac:	df 93       	push	r29
     eae:	00 97       	sbiw	r24, 0x00	; 0
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <free+0xa>
     eb2:	87 c0       	rjmp	.+270    	; 0xfc2 <free+0x118>
     eb4:	fc 01       	movw	r30, r24
     eb6:	32 97       	sbiw	r30, 0x02	; 2
     eb8:	13 82       	std	Z+3, r1	; 0x03
     eba:	12 82       	std	Z+2, r1	; 0x02
     ebc:	c0 91 01 03 	lds	r28, 0x0301
     ec0:	d0 91 02 03 	lds	r29, 0x0302
     ec4:	20 97       	sbiw	r28, 0x00	; 0
     ec6:	81 f4       	brne	.+32     	; 0xee8 <free+0x3e>
     ec8:	20 81       	ld	r18, Z
     eca:	31 81       	ldd	r19, Z+1	; 0x01
     ecc:	28 0f       	add	r18, r24
     ece:	39 1f       	adc	r19, r25
     ed0:	80 91 ff 02 	lds	r24, 0x02FF
     ed4:	90 91 00 03 	lds	r25, 0x0300
     ed8:	82 17       	cp	r24, r18
     eda:	93 07       	cpc	r25, r19
     edc:	79 f5       	brne	.+94     	; 0xf3c <free+0x92>
     ede:	f0 93 00 03 	sts	0x0300, r31
     ee2:	e0 93 ff 02 	sts	0x02FF, r30
     ee6:	6d c0       	rjmp	.+218    	; 0xfc2 <free+0x118>
     ee8:	de 01       	movw	r26, r28
     eea:	20 e0       	ldi	r18, 0x00	; 0
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	ae 17       	cp	r26, r30
     ef0:	bf 07       	cpc	r27, r31
     ef2:	50 f4       	brcc	.+20     	; 0xf08 <free+0x5e>
     ef4:	12 96       	adiw	r26, 0x02	; 2
     ef6:	4d 91       	ld	r20, X+
     ef8:	5c 91       	ld	r21, X
     efa:	13 97       	sbiw	r26, 0x03	; 3
     efc:	9d 01       	movw	r18, r26
     efe:	41 15       	cp	r20, r1
     f00:	51 05       	cpc	r21, r1
     f02:	09 f1       	breq	.+66     	; 0xf46 <free+0x9c>
     f04:	da 01       	movw	r26, r20
     f06:	f3 cf       	rjmp	.-26     	; 0xeee <free+0x44>
     f08:	b3 83       	std	Z+3, r27	; 0x03
     f0a:	a2 83       	std	Z+2, r26	; 0x02
     f0c:	40 81       	ld	r20, Z
     f0e:	51 81       	ldd	r21, Z+1	; 0x01
     f10:	84 0f       	add	r24, r20
     f12:	95 1f       	adc	r25, r21
     f14:	8a 17       	cp	r24, r26
     f16:	9b 07       	cpc	r25, r27
     f18:	71 f4       	brne	.+28     	; 0xf36 <free+0x8c>
     f1a:	8d 91       	ld	r24, X+
     f1c:	9c 91       	ld	r25, X
     f1e:	11 97       	sbiw	r26, 0x01	; 1
     f20:	84 0f       	add	r24, r20
     f22:	95 1f       	adc	r25, r21
     f24:	02 96       	adiw	r24, 0x02	; 2
     f26:	91 83       	std	Z+1, r25	; 0x01
     f28:	80 83       	st	Z, r24
     f2a:	12 96       	adiw	r26, 0x02	; 2
     f2c:	8d 91       	ld	r24, X+
     f2e:	9c 91       	ld	r25, X
     f30:	13 97       	sbiw	r26, 0x03	; 3
     f32:	93 83       	std	Z+3, r25	; 0x03
     f34:	82 83       	std	Z+2, r24	; 0x02
     f36:	21 15       	cp	r18, r1
     f38:	31 05       	cpc	r19, r1
     f3a:	29 f4       	brne	.+10     	; 0xf46 <free+0x9c>
     f3c:	f0 93 02 03 	sts	0x0302, r31
     f40:	e0 93 01 03 	sts	0x0301, r30
     f44:	3e c0       	rjmp	.+124    	; 0xfc2 <free+0x118>
     f46:	d9 01       	movw	r26, r18
     f48:	13 96       	adiw	r26, 0x03	; 3
     f4a:	fc 93       	st	X, r31
     f4c:	ee 93       	st	-X, r30
     f4e:	12 97       	sbiw	r26, 0x02	; 2
     f50:	4d 91       	ld	r20, X+
     f52:	5d 91       	ld	r21, X+
     f54:	a4 0f       	add	r26, r20
     f56:	b5 1f       	adc	r27, r21
     f58:	ea 17       	cp	r30, r26
     f5a:	fb 07       	cpc	r31, r27
     f5c:	79 f4       	brne	.+30     	; 0xf7c <free+0xd2>
     f5e:	80 81       	ld	r24, Z
     f60:	91 81       	ldd	r25, Z+1	; 0x01
     f62:	84 0f       	add	r24, r20
     f64:	95 1f       	adc	r25, r21
     f66:	02 96       	adiw	r24, 0x02	; 2
     f68:	d9 01       	movw	r26, r18
     f6a:	11 96       	adiw	r26, 0x01	; 1
     f6c:	9c 93       	st	X, r25
     f6e:	8e 93       	st	-X, r24
     f70:	82 81       	ldd	r24, Z+2	; 0x02
     f72:	93 81       	ldd	r25, Z+3	; 0x03
     f74:	13 96       	adiw	r26, 0x03	; 3
     f76:	9c 93       	st	X, r25
     f78:	8e 93       	st	-X, r24
     f7a:	12 97       	sbiw	r26, 0x02	; 2
     f7c:	e0 e0       	ldi	r30, 0x00	; 0
     f7e:	f0 e0       	ldi	r31, 0x00	; 0
     f80:	8a 81       	ldd	r24, Y+2	; 0x02
     f82:	9b 81       	ldd	r25, Y+3	; 0x03
     f84:	00 97       	sbiw	r24, 0x00	; 0
     f86:	19 f0       	breq	.+6      	; 0xf8e <free+0xe4>
     f88:	fe 01       	movw	r30, r28
     f8a:	ec 01       	movw	r28, r24
     f8c:	f9 cf       	rjmp	.-14     	; 0xf80 <free+0xd6>
     f8e:	ce 01       	movw	r24, r28
     f90:	02 96       	adiw	r24, 0x02	; 2
     f92:	28 81       	ld	r18, Y
     f94:	39 81       	ldd	r19, Y+1	; 0x01
     f96:	82 0f       	add	r24, r18
     f98:	93 1f       	adc	r25, r19
     f9a:	20 91 ff 02 	lds	r18, 0x02FF
     f9e:	30 91 00 03 	lds	r19, 0x0300
     fa2:	28 17       	cp	r18, r24
     fa4:	39 07       	cpc	r19, r25
     fa6:	69 f4       	brne	.+26     	; 0xfc2 <free+0x118>
     fa8:	30 97       	sbiw	r30, 0x00	; 0
     faa:	29 f4       	brne	.+10     	; 0xfb6 <free+0x10c>
     fac:	10 92 02 03 	sts	0x0302, r1
     fb0:	10 92 01 03 	sts	0x0301, r1
     fb4:	02 c0       	rjmp	.+4      	; 0xfba <free+0x110>
     fb6:	13 82       	std	Z+3, r1	; 0x03
     fb8:	12 82       	std	Z+2, r1	; 0x02
     fba:	d0 93 00 03 	sts	0x0300, r29
     fbe:	c0 93 ff 02 	sts	0x02FF, r28
     fc2:	df 91       	pop	r29
     fc4:	cf 91       	pop	r28
     fc6:	08 95       	ret

00000fc8 <strnlen_P>:
     fc8:	fc 01       	movw	r30, r24
     fca:	05 90       	lpm	r0, Z+
     fcc:	61 50       	subi	r22, 0x01	; 1
     fce:	70 40       	sbci	r23, 0x00	; 0
     fd0:	01 10       	cpse	r0, r1
     fd2:	d8 f7       	brcc	.-10     	; 0xfca <strnlen_P+0x2>
     fd4:	80 95       	com	r24
     fd6:	90 95       	com	r25
     fd8:	8e 0f       	add	r24, r30
     fda:	9f 1f       	adc	r25, r31
     fdc:	08 95       	ret

00000fde <memset>:
     fde:	dc 01       	movw	r26, r24
     fe0:	01 c0       	rjmp	.+2      	; 0xfe4 <memset+0x6>
     fe2:	6d 93       	st	X+, r22
     fe4:	41 50       	subi	r20, 0x01	; 1
     fe6:	50 40       	sbci	r21, 0x00	; 0
     fe8:	e0 f7       	brcc	.-8      	; 0xfe2 <memset+0x4>
     fea:	08 95       	ret

00000fec <strnlen>:
     fec:	fc 01       	movw	r30, r24
     fee:	61 50       	subi	r22, 0x01	; 1
     ff0:	70 40       	sbci	r23, 0x00	; 0
     ff2:	01 90       	ld	r0, Z+
     ff4:	01 10       	cpse	r0, r1
     ff6:	d8 f7       	brcc	.-10     	; 0xfee <strnlen+0x2>
     ff8:	80 95       	com	r24
     ffa:	90 95       	com	r25
     ffc:	8e 0f       	add	r24, r30
     ffe:	9f 1f       	adc	r25, r31
    1000:	08 95       	ret

00001002 <fputc>:
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	18 2f       	mov	r17, r24
    100c:	09 2f       	mov	r16, r25
    100e:	eb 01       	movw	r28, r22
    1010:	8b 81       	ldd	r24, Y+3	; 0x03
    1012:	81 fd       	sbrc	r24, 1
    1014:	03 c0       	rjmp	.+6      	; 0x101c <fputc+0x1a>
    1016:	8f ef       	ldi	r24, 0xFF	; 255
    1018:	9f ef       	ldi	r25, 0xFF	; 255
    101a:	20 c0       	rjmp	.+64     	; 0x105c <fputc+0x5a>
    101c:	82 ff       	sbrs	r24, 2
    101e:	10 c0       	rjmp	.+32     	; 0x1040 <fputc+0x3e>
    1020:	4e 81       	ldd	r20, Y+6	; 0x06
    1022:	5f 81       	ldd	r21, Y+7	; 0x07
    1024:	2c 81       	ldd	r18, Y+4	; 0x04
    1026:	3d 81       	ldd	r19, Y+5	; 0x05
    1028:	42 17       	cp	r20, r18
    102a:	53 07       	cpc	r21, r19
    102c:	7c f4       	brge	.+30     	; 0x104c <fputc+0x4a>
    102e:	e8 81       	ld	r30, Y
    1030:	f9 81       	ldd	r31, Y+1	; 0x01
    1032:	9f 01       	movw	r18, r30
    1034:	2f 5f       	subi	r18, 0xFF	; 255
    1036:	3f 4f       	sbci	r19, 0xFF	; 255
    1038:	39 83       	std	Y+1, r19	; 0x01
    103a:	28 83       	st	Y, r18
    103c:	10 83       	st	Z, r17
    103e:	06 c0       	rjmp	.+12     	; 0x104c <fputc+0x4a>
    1040:	e8 85       	ldd	r30, Y+8	; 0x08
    1042:	f9 85       	ldd	r31, Y+9	; 0x09
    1044:	81 2f       	mov	r24, r17
    1046:	19 95       	eicall
    1048:	89 2b       	or	r24, r25
    104a:	29 f7       	brne	.-54     	; 0x1016 <fputc+0x14>
    104c:	2e 81       	ldd	r18, Y+6	; 0x06
    104e:	3f 81       	ldd	r19, Y+7	; 0x07
    1050:	2f 5f       	subi	r18, 0xFF	; 255
    1052:	3f 4f       	sbci	r19, 0xFF	; 255
    1054:	3f 83       	std	Y+7, r19	; 0x07
    1056:	2e 83       	std	Y+6, r18	; 0x06
    1058:	81 2f       	mov	r24, r17
    105a:	90 2f       	mov	r25, r16
    105c:	df 91       	pop	r29
    105e:	cf 91       	pop	r28
    1060:	1f 91       	pop	r17
    1062:	0f 91       	pop	r16
    1064:	08 95       	ret

00001066 <__ultoa_invert>:
    1066:	fa 01       	movw	r30, r20
    1068:	aa 27       	eor	r26, r26
    106a:	28 30       	cpi	r18, 0x08	; 8
    106c:	51 f1       	breq	.+84     	; 0x10c2 <__ultoa_invert+0x5c>
    106e:	20 31       	cpi	r18, 0x10	; 16
    1070:	81 f1       	breq	.+96     	; 0x10d2 <__ultoa_invert+0x6c>
    1072:	e8 94       	clt
    1074:	6f 93       	push	r22
    1076:	6e 7f       	andi	r22, 0xFE	; 254
    1078:	6e 5f       	subi	r22, 0xFE	; 254
    107a:	7f 4f       	sbci	r23, 0xFF	; 255
    107c:	8f 4f       	sbci	r24, 0xFF	; 255
    107e:	9f 4f       	sbci	r25, 0xFF	; 255
    1080:	af 4f       	sbci	r26, 0xFF	; 255
    1082:	b1 e0       	ldi	r27, 0x01	; 1
    1084:	3e d0       	rcall	.+124    	; 0x1102 <__ultoa_invert+0x9c>
    1086:	b4 e0       	ldi	r27, 0x04	; 4
    1088:	3c d0       	rcall	.+120    	; 0x1102 <__ultoa_invert+0x9c>
    108a:	67 0f       	add	r22, r23
    108c:	78 1f       	adc	r23, r24
    108e:	89 1f       	adc	r24, r25
    1090:	9a 1f       	adc	r25, r26
    1092:	a1 1d       	adc	r26, r1
    1094:	68 0f       	add	r22, r24
    1096:	79 1f       	adc	r23, r25
    1098:	8a 1f       	adc	r24, r26
    109a:	91 1d       	adc	r25, r1
    109c:	a1 1d       	adc	r26, r1
    109e:	6a 0f       	add	r22, r26
    10a0:	71 1d       	adc	r23, r1
    10a2:	81 1d       	adc	r24, r1
    10a4:	91 1d       	adc	r25, r1
    10a6:	a1 1d       	adc	r26, r1
    10a8:	20 d0       	rcall	.+64     	; 0x10ea <__ultoa_invert+0x84>
    10aa:	09 f4       	brne	.+2      	; 0x10ae <__ultoa_invert+0x48>
    10ac:	68 94       	set
    10ae:	3f 91       	pop	r19
    10b0:	2a e0       	ldi	r18, 0x0A	; 10
    10b2:	26 9f       	mul	r18, r22
    10b4:	11 24       	eor	r1, r1
    10b6:	30 19       	sub	r19, r0
    10b8:	30 5d       	subi	r19, 0xD0	; 208
    10ba:	31 93       	st	Z+, r19
    10bc:	de f6       	brtc	.-74     	; 0x1074 <__ultoa_invert+0xe>
    10be:	cf 01       	movw	r24, r30
    10c0:	08 95       	ret
    10c2:	46 2f       	mov	r20, r22
    10c4:	47 70       	andi	r20, 0x07	; 7
    10c6:	40 5d       	subi	r20, 0xD0	; 208
    10c8:	41 93       	st	Z+, r20
    10ca:	b3 e0       	ldi	r27, 0x03	; 3
    10cc:	0f d0       	rcall	.+30     	; 0x10ec <__ultoa_invert+0x86>
    10ce:	c9 f7       	brne	.-14     	; 0x10c2 <__ultoa_invert+0x5c>
    10d0:	f6 cf       	rjmp	.-20     	; 0x10be <__ultoa_invert+0x58>
    10d2:	46 2f       	mov	r20, r22
    10d4:	4f 70       	andi	r20, 0x0F	; 15
    10d6:	40 5d       	subi	r20, 0xD0	; 208
    10d8:	4a 33       	cpi	r20, 0x3A	; 58
    10da:	18 f0       	brcs	.+6      	; 0x10e2 <__ultoa_invert+0x7c>
    10dc:	49 5d       	subi	r20, 0xD9	; 217
    10de:	31 fd       	sbrc	r19, 1
    10e0:	40 52       	subi	r20, 0x20	; 32
    10e2:	41 93       	st	Z+, r20
    10e4:	02 d0       	rcall	.+4      	; 0x10ea <__ultoa_invert+0x84>
    10e6:	a9 f7       	brne	.-22     	; 0x10d2 <__ultoa_invert+0x6c>
    10e8:	ea cf       	rjmp	.-44     	; 0x10be <__ultoa_invert+0x58>
    10ea:	b4 e0       	ldi	r27, 0x04	; 4
    10ec:	a6 95       	lsr	r26
    10ee:	97 95       	ror	r25
    10f0:	87 95       	ror	r24
    10f2:	77 95       	ror	r23
    10f4:	67 95       	ror	r22
    10f6:	ba 95       	dec	r27
    10f8:	c9 f7       	brne	.-14     	; 0x10ec <__ultoa_invert+0x86>
    10fa:	00 97       	sbiw	r24, 0x00	; 0
    10fc:	61 05       	cpc	r22, r1
    10fe:	71 05       	cpc	r23, r1
    1100:	08 95       	ret
    1102:	9b 01       	movw	r18, r22
    1104:	ac 01       	movw	r20, r24
    1106:	0a 2e       	mov	r0, r26
    1108:	06 94       	lsr	r0
    110a:	57 95       	ror	r21
    110c:	47 95       	ror	r20
    110e:	37 95       	ror	r19
    1110:	27 95       	ror	r18
    1112:	ba 95       	dec	r27
    1114:	c9 f7       	brne	.-14     	; 0x1108 <__ultoa_invert+0xa2>
    1116:	62 0f       	add	r22, r18
    1118:	73 1f       	adc	r23, r19
    111a:	84 1f       	adc	r24, r20
    111c:	95 1f       	adc	r25, r21
    111e:	a0 1d       	adc	r26, r0
    1120:	08 95       	ret

00001122 <_exit>:
    1122:	f8 94       	cli

00001124 <__stop_program>:
    1124:	ff cf       	rjmp	.-2      	; 0x1124 <__stop_program>
