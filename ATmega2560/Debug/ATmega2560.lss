
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c0  00800200  000011d0  00001264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002c0  008002c0  00001324  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001324  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000270  00000000  00000000  00001380  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b5f  00000000  00000000  000015f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c97  00000000  00000000  0000314f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001077  00000000  00000000  00003de6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000514  00000000  00000000  00004e60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000062d  00000000  00000000  00005374  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000981  00000000  00000000  000059a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001e8  00000000  00000000  00006322  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e0 ed       	ldi	r30, 0xD0	; 208
      fc:	f1 e1       	ldi	r31, 0x11	; 17
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 3c       	cpi	r26, 0xC0	; 192
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a0 ec       	ldi	r26, 0xC0	; 192
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a5 3d       	cpi	r26, 0xD5	; 213
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	24 d0       	rcall	.+72     	; 0x168 <main>
     120:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <adc_init>:
#include "adc.h"

void adc_init(){
	
	// Division factor 128
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
     126:	ea e7       	ldi	r30, 0x7A	; 122
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	80 81       	ld	r24, Z
     12c:	87 68       	ori	r24, 0x87	; 135
     12e:	80 83       	st	Z, r24
	
	/*We find max voltage to be 1.1 V
	Internal 1.1 V Voltage Reference with external capacitor at AREF pin  ->  REFS1 = 1 REFS0 = 0 
	*/  
	ADMUX |= (1 << REFS0);
     130:	ec e7       	ldi	r30, 0x7C	; 124
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	80 64       	ori	r24, 0x40	; 64
     138:	80 83       	st	Z, r24
	//ADMUX &= ~(1 << REFS1);
	ADMUX |= (1 << REFS1);
     13a:	80 81       	ld	r24, Z
     13c:	80 68       	ori	r24, 0x80	; 128
     13e:	80 83       	st	Z, r24
     140:	08 95       	ret

00000142 <adc_read>:
	
	
}

uint16_t adc_read(uint8_t ch){ //IR set to ADC0 = PF0
	ADMUX |= (ch & 0x03);
     142:	ec e7       	ldi	r30, 0x7C	; 124
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	90 81       	ld	r25, Z
     148:	83 70       	andi	r24, 0x03	; 3
     14a:	98 2b       	or	r25, r24
     14c:	90 83       	st	Z, r25
	ADCSRA |= (1 << ADSC);
     14e:	ea e7       	ldi	r30, 0x7A	; 122
     150:	f0 e0       	ldi	r31, 0x00	; 0
     152:	80 81       	ld	r24, Z
     154:	80 64       	ori	r24, 0x40	; 64
     156:	80 83       	st	Z, r24
	
	while((ADCSRA & (1 << ADSC))){}
     158:	80 81       	ld	r24, Z
     15a:	86 fd       	sbrc	r24, 6
     15c:	fd cf       	rjmp	.-6      	; 0x158 <adc_read+0x16>

	return ADC; //sexy premade code
     15e:	80 91 78 00 	lds	r24, 0x0078
     162:	90 91 79 00 	lds	r25, 0x0079
     166:	08 95       	ret

00000168 <main>:
check if header files are included in their respective c files, and if they should be
to avoid "implicit declaration of function*/



int main(void){
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	cd b7       	in	r28, 0x3d	; 61
     16e:	de b7       	in	r29, 0x3e	; 62
     170:	2b 97       	sbiw	r28, 0x0b	; 11
     172:	0f b6       	in	r0, 0x3f	; 63
     174:	f8 94       	cli
     176:	de bf       	out	0x3e, r29	; 62
     178:	0f be       	out	0x3f, r0	; 63
     17a:	cd bf       	out	0x3d, r28	; 61
		PORTB = 0;
		_delay_ms(500);
	}*/
	
	
	MCUCR |= (1 << SRE);
     17c:	85 b7       	in	r24, 0x35	; 53
     17e:	80 68       	ori	r24, 0x80	; 128
     180:	85 bf       	out	0x35, r24	; 53
	uart_Init(MYUBRR);
     182:	87 e6       	ldi	r24, 0x67	; 103
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	2c d2       	rcall	.+1112   	; 0x5e0 <uart_Init>
	//
	
	
	can_init(MODE_NORMAL);
     188:	80 e0       	ldi	r24, 0x00	; 0
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	37 d0       	rcall	.+110    	; 0x1fc <can_init>
	pwm_init();
     18e:	7f d1       	rcall	.+766    	; 0x48e <pwm_init>
	adc_init();
     190:	ca df       	rcall	.-108    	; 0x126 <adc_init>

	DDRE |= (1 << 3); //studass PWM bandaid that can be removed? 
     192:	6b 9a       	sbi	0x0d, 3	; 13

	//uint16_t count = 0;
	
	
	int high = adc_read(0x00);
     194:	80 e0       	ldi	r24, 0x00	; 0
     196:	d5 df       	rcall	.-86     	; 0x142 <adc_read>
     198:	6c 01       	movw	r12, r24
	int low = adc_read(0x00);
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	d2 df       	rcall	.-92     	; 0x142 <adc_read>
     19e:	7c 01       	movw	r14, r24
	

	timer_init();
     1a0:	f6 d1       	rcall	.+1004   	; 0x58e <timer_init>
		
		if(adc > high)
			high = adc;
		if(adc < low)
			low = adc;
		printf("\nIR VALUE: %d\tHighest: %d\tLowest: %d\tUnblocked: %d\talt_blocked: %d\n", adc, high, low, ir_unblocked(), ir_alt_unblocked());
     1a2:	0f 2e       	mov	r0, r31
     1a4:	f8 e0       	ldi	r31, 0x08	; 8
     1a6:	af 2e       	mov	r10, r31
     1a8:	f2 e0       	ldi	r31, 0x02	; 2
     1aa:	bf 2e       	mov	r11, r31
     1ac:	f0 2d       	mov	r31, r0
	timer_init();
	
	while(1){
		
		
		canjoy_recieve();
     1ae:	ce 01       	movw	r24, r28
     1b0:	01 96       	adiw	r24, 0x01	; 1
     1b2:	d7 d0       	rcall	.+430    	; 0x362 <canjoy_recieve>
		pwm_joystick_pulse(canjoy_joystick_x());
     1b4:	14 d1       	rcall	.+552    	; 0x3de <canjoy_joystick_x>
     1b6:	b3 d1       	rcall	.+870    	; 0x51e <pwm_joystick_pulse>
		int adc = adc_read(PF1);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	c3 df       	rcall	.-122    	; 0x142 <adc_read>
     1bc:	8c 01       	movw	r16, r24
     1be:	c8 16       	cp	r12, r24
     1c0:	d9 06       	cpc	r13, r25
     1c2:	0c f4       	brge	.+2      	; 0x1c6 <main+0x5e>
     1c4:	6c 01       	movw	r12, r24
     1c6:	0e 15       	cp	r16, r14
     1c8:	1f 05       	cpc	r17, r15
     1ca:	0c f4       	brge	.+2      	; 0x1ce <main+0x66>
     1cc:	78 01       	movw	r14, r16
		
		if(adc > high)
			high = adc;
		if(adc < low)
			low = adc;
		printf("\nIR VALUE: %d\tHighest: %d\tLowest: %d\tUnblocked: %d\talt_blocked: %d\n", adc, high, low, ir_unblocked(), ir_alt_unblocked());
     1ce:	0b d1       	rcall	.+534    	; 0x3e6 <ir_alt_unblocked>
     1d0:	98 2e       	mov	r9, r24
     1d2:	89 2e       	mov	r8, r25
     1d4:	19 d1       	rcall	.+562    	; 0x408 <ir_unblocked>
     1d6:	8f 92       	push	r8
     1d8:	9f 92       	push	r9
     1da:	9f 93       	push	r25
     1dc:	8f 93       	push	r24
     1de:	ff 92       	push	r15
     1e0:	ef 92       	push	r14
     1e2:	df 92       	push	r13
     1e4:	cf 92       	push	r12
     1e6:	1f 93       	push	r17
     1e8:	0f 93       	push	r16
     1ea:	bf 92       	push	r11
     1ec:	af 92       	push	r10
     1ee:	d4 d3       	rcall	.+1960   	; 0x998 <printf>
     1f0:	0f b6       	in	r0, 0x3f	; 63
     1f2:	f8 94       	cli
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	0f be       	out	0x3f, r0	; 63
     1f8:	cd bf       	out	0x3d, r28	; 61
     1fa:	d9 cf       	rjmp	.-78     	; 0x1ae <main+0x46>

000001fc <can_init>:
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	ec 01       	movw	r28, r24
     202:	32 d1       	rcall	.+612    	; 0x468 <mcp2515_init>
     204:	4f ef       	ldi	r20, 0xFF	; 255
     206:	50 e0       	ldi	r21, 0x00	; 0
     208:	60 e6       	ldi	r22, 0x60	; 96
     20a:	70 e0       	ldi	r23, 0x00	; 0
     20c:	80 e6       	ldi	r24, 0x60	; 96
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	12 d1       	rcall	.+548    	; 0x436 <mcp2515_bit_modify>
     212:	4f ef       	ldi	r20, 0xFF	; 255
     214:	50 e0       	ldi	r21, 0x00	; 0
     216:	60 e6       	ldi	r22, 0x60	; 96
     218:	70 e0       	ldi	r23, 0x00	; 0
     21a:	80 e7       	ldi	r24, 0x70	; 112
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	0b d1       	rcall	.+534    	; 0x436 <mcp2515_bit_modify>
     220:	ae 01       	movw	r20, r28
     222:	60 ee       	ldi	r22, 0xE0	; 224
     224:	70 e0       	ldi	r23, 0x00	; 0
     226:	8f e0       	ldi	r24, 0x0F	; 15
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	05 d1       	rcall	.+522    	; 0x436 <mcp2515_bit_modify>
     22c:	69 98       	cbi	0x0d, 1	; 13
     22e:	df 91       	pop	r29
     230:	cf 91       	pop	r28
     232:	08 95       	ret

00000234 <can_poll_interrupt>:
}


uint8_t can_poll_interrupt(){
	
	while(!(PINE & (1 << PE1))){}
     234:	61 9b       	sbis	0x0c, 1	; 12
     236:	fe cf       	rjmp	.-4      	; 0x234 <can_poll_interrupt>
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     238:	8c e2       	ldi	r24, 0x2C	; 44
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	f0 d0       	rcall	.+480    	; 0x41e <mcp2515_read>
     23e:	80 fd       	sbrc	r24, 0
     240:	07 c0       	rjmp	.+14     	; 0x250 <can_poll_interrupt+0x1c>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
	}
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     242:	8c e2       	ldi	r24, 0x2C	; 44
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	eb d0       	rcall	.+470    	; 0x41e <mcp2515_read>
     248:	81 ff       	sbrs	r24, 1
     24a:	04 c0       	rjmp	.+8      	; 0x254 <can_poll_interrupt+0x20>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
     24c:	80 e7       	ldi	r24, 0x70	; 112
     24e:	08 95       	ret
	
	while(!(PINE & (1 << PE1))){}
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
     250:	80 e6       	ldi	r24, 0x60	; 96
     252:	08 95       	ret
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
	}
	return -1;
     254:	8f ef       	ldi	r24, 0xFF	; 255
}
     256:	08 95       	ret

00000258 <can_recieve>:
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}

can_message can_recieve(can_message* msg){
     258:	7f 92       	push	r7
     25a:	8f 92       	push	r8
     25c:	9f 92       	push	r9
     25e:	af 92       	push	r10
     260:	bf 92       	push	r11
     262:	cf 92       	push	r12
     264:	df 92       	push	r13
     266:	ef 92       	push	r14
     268:	ff 92       	push	r15
     26a:	0f 93       	push	r16
     26c:	1f 93       	push	r17
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	cd b7       	in	r28, 0x3d	; 61
     274:	de b7       	in	r29, 0x3e	; 62
     276:	2b 97       	sbiw	r28, 0x0b	; 11
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	f8 94       	cli
     27c:	de bf       	out	0x3e, r29	; 62
     27e:	0f be       	out	0x3f, r0	; 63
     280:	cd bf       	out	0x3d, r28	; 61
     282:	6c 01       	movw	r12, r24
	can_message m;
	
	uint8_t buffer_select = can_poll_interrupt();
     284:	d7 df       	rcall	.-82     	; 0x234 <can_poll_interrupt>
     286:	98 2e       	mov	r9, r24
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
     288:	08 2f       	mov	r16, r24
     28a:	10 e0       	ldi	r17, 0x00	; 0
     28c:	c8 01       	movw	r24, r16
     28e:	01 96       	adiw	r24, 0x01	; 1
     290:	c6 d0       	rcall	.+396    	; 0x41e <mcp2515_read>
     292:	7c 01       	movw	r14, r24
     294:	c8 01       	movw	r24, r16
     296:	02 96       	adiw	r24, 0x02	; 2
     298:	c2 d0       	rcall	.+388    	; 0x41e <mcp2515_read>
     29a:	95 95       	asr	r25
     29c:	87 95       	ror	r24
     29e:	95 95       	asr	r25
     2a0:	87 95       	ror	r24
     2a2:	95 95       	asr	r25
     2a4:	87 95       	ror	r24
     2a6:	95 95       	asr	r25
     2a8:	87 95       	ror	r24
     2aa:	95 95       	asr	r25
     2ac:	87 95       	ror	r24
     2ae:	ee 0c       	add	r14, r14
     2b0:	ff 1c       	adc	r15, r15
     2b2:	ee 0c       	add	r14, r14
     2b4:	ff 1c       	adc	r15, r15
     2b6:	ee 0c       	add	r14, r14
     2b8:	ff 1c       	adc	r15, r15
     2ba:	5c 01       	movw	r10, r24
     2bc:	ae 28       	or	r10, r14
     2be:	bf 28       	or	r11, r15
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
     2c0:	c8 01       	movw	r24, r16
     2c2:	05 96       	adiw	r24, 0x05	; 5
     2c4:	ac d0       	rcall	.+344    	; 0x41e <mcp2515_read>
     2c6:	8f 70       	andi	r24, 0x0F	; 15
     2c8:	78 2e       	mov	r7, r24
	
	for(uint8_t i = 0; i < m.length; i++){
     2ca:	a9 f0       	breq	.+42     	; 0x2f6 <can_recieve+0x9e>
     2cc:	8e 01       	movw	r16, r28
     2ce:	0c 5f       	subi	r16, 0xFC	; 252
     2d0:	1f 4f       	sbci	r17, 0xFF	; 255
     2d2:	81 2c       	mov	r8, r1
     2d4:	ce 01       	movw	r24, r28
     2d6:	80 95       	com	r24
     2d8:	90 95       	com	r25
     2da:	03 96       	adiw	r24, 0x03	; 3
     2dc:	7c 01       	movw	r14, r24
     2de:	e9 0c       	add	r14, r9
     2e0:	f1 1c       	adc	r15, r1
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
     2e2:	c7 01       	movw	r24, r14
     2e4:	80 0f       	add	r24, r16
     2e6:	91 1f       	adc	r25, r17
     2e8:	9a d0       	rcall	.+308    	; 0x41e <mcp2515_read>
     2ea:	f8 01       	movw	r30, r16
     2ec:	81 93       	st	Z+, r24
     2ee:	8f 01       	movw	r16, r30
	uint8_t buffer_select = can_poll_interrupt();
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
	
	for(uint8_t i = 0; i < m.length; i++){
     2f0:	83 94       	inc	r8
     2f2:	87 10       	cpse	r8, r7
     2f4:	f6 cf       	rjmp	.-20     	; 0x2e2 <can_recieve+0x8a>
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	
	switch(buffer_select){
     2f6:	f0 e6       	ldi	r31, 0x60	; 96
     2f8:	9f 16       	cp	r9, r31
     2fa:	21 f0       	breq	.+8      	; 0x304 <can_recieve+0xac>
     2fc:	80 e7       	ldi	r24, 0x70	; 112
     2fe:	98 16       	cp	r9, r24
     300:	49 f0       	breq	.+18     	; 0x314 <can_recieve+0xbc>
     302:	0f c0       	rjmp	.+30     	; 0x322 <can_recieve+0xca>
		case MCP_RXB0CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
     304:	40 e0       	ldi	r20, 0x00	; 0
     306:	50 e0       	ldi	r21, 0x00	; 0
     308:	61 e0       	ldi	r22, 0x01	; 1
     30a:	70 e0       	ldi	r23, 0x00	; 0
     30c:	8c e2       	ldi	r24, 0x2C	; 44
     30e:	90 e0       	ldi	r25, 0x00	; 0
     310:	92 d0       	rcall	.+292    	; 0x436 <mcp2515_bit_modify>
		break;
     312:	07 c0       	rjmp	.+14     	; 0x322 <can_recieve+0xca>
		case MCP_RXB1CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
     314:	40 e0       	ldi	r20, 0x00	; 0
     316:	50 e0       	ldi	r21, 0x00	; 0
     318:	62 e0       	ldi	r22, 0x02	; 2
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	8c e2       	ldi	r24, 0x2C	; 44
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	8a d0       	rcall	.+276    	; 0x436 <mcp2515_bit_modify>
		break;
	}
	
	return m;
     322:	ba 82       	std	Y+2, r11	; 0x02
     324:	a9 82       	std	Y+1, r10	; 0x01
     326:	7b 82       	std	Y+3, r7	; 0x03
     328:	8b e0       	ldi	r24, 0x0B	; 11
     32a:	fe 01       	movw	r30, r28
     32c:	31 96       	adiw	r30, 0x01	; 1
     32e:	d6 01       	movw	r26, r12
     330:	01 90       	ld	r0, Z+
     332:	0d 92       	st	X+, r0
     334:	8a 95       	dec	r24
     336:	e1 f7       	brne	.-8      	; 0x330 <can_recieve+0xd8>
}
     338:	c6 01       	movw	r24, r12
     33a:	2b 96       	adiw	r28, 0x0b	; 11
     33c:	0f b6       	in	r0, 0x3f	; 63
     33e:	f8 94       	cli
     340:	de bf       	out	0x3e, r29	; 62
     342:	0f be       	out	0x3f, r0	; 63
     344:	cd bf       	out	0x3d, r28	; 61
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	1f 91       	pop	r17
     34c:	0f 91       	pop	r16
     34e:	ff 90       	pop	r15
     350:	ef 90       	pop	r14
     352:	df 90       	pop	r13
     354:	cf 90       	pop	r12
     356:	bf 90       	pop	r11
     358:	af 90       	pop	r10
     35a:	9f 90       	pop	r9
     35c:	8f 90       	pop	r8
     35e:	7f 90       	pop	r7
     360:	08 95       	ret

00000362 <canjoy_recieve>:
	
	can_transmit(&joy, 0x30);
}


can_message canjoy_recieve(){
     362:	ef 92       	push	r14
     364:	ff 92       	push	r15
     366:	0f 93       	push	r16
     368:	1f 93       	push	r17
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	ec 01       	movw	r28, r24
	
	can_message joy = can_recieve();
     370:	73 df       	rcall	.-282    	; 0x258 <can_recieve>
     372:	ea 80       	ldd	r14, Y+2	; 0x02
     374:	fb 80       	ldd	r15, Y+3	; 0x03
     376:	0c 81       	ldd	r16, Y+4	; 0x04
     378:	1d 81       	ldd	r17, Y+5	; 0x05
     37a:	7e 81       	ldd	r23, Y+6	; 0x06
     37c:	6f 81       	ldd	r22, Y+7	; 0x07
     37e:	58 85       	ldd	r21, Y+8	; 0x08
     380:	49 85       	ldd	r20, Y+9	; 0x09
	
	if(joy.id == CANJOY_ID){
     382:	28 81       	ld	r18, Y
     384:	39 81       	ldd	r19, Y+1	; 0x01
     386:	80 91 06 02 	lds	r24, 0x0206
     38a:	90 91 07 02 	lds	r25, 0x0207
     38e:	28 17       	cp	r18, r24
     390:	39 07       	cpc	r19, r25
     392:	89 f4       	brne	.+34     	; 0x3b6 <canjoy_recieve+0x54>
		//printf("CORRECT ID\n");		
		canjoy_msg = joy;
     394:	8b e0       	ldi	r24, 0x0B	; 11
     396:	fe 01       	movw	r30, r28
     398:	a0 ec       	ldi	r26, 0xC0	; 192
     39a:	b2 e0       	ldi	r27, 0x02	; 2
     39c:	01 90       	ld	r0, Z+
     39e:	0d 92       	st	X+, r0
     3a0:	8a 95       	dec	r24
     3a2:	e1 f7       	brne	.-8      	; 0x39c <canjoy_recieve+0x3a>
		return joy;
     3a4:	ea 82       	std	Y+2, r14	; 0x02
     3a6:	fb 82       	std	Y+3, r15	; 0x03
     3a8:	0c 83       	std	Y+4, r16	; 0x04
     3aa:	1d 83       	std	Y+5, r17	; 0x05
     3ac:	7e 83       	std	Y+6, r23	; 0x06
     3ae:	6f 83       	std	Y+7, r22	; 0x07
     3b0:	58 87       	std	Y+8, r21	; 0x08
     3b2:	49 87       	std	Y+9, r20	; 0x09
     3b4:	0c c0       	rjmp	.+24     	; 0x3ce <canjoy_recieve+0x6c>
	}
	printf("WRONG ID\n");
     3b6:	8c e4       	ldi	r24, 0x4C	; 76
     3b8:	92 e0       	ldi	r25, 0x02	; 2
     3ba:	ff d2       	rcall	.+1534   	; 0x9ba <puts>
	joy.data[2] = 0;
	joy.data[3] = 0;
	joy.data[4] = 0;
	joy.data[5] = 0;
	joy.data[6] = 0;
	return joy;
     3bc:	87 e0       	ldi	r24, 0x07	; 7
     3be:	8a 83       	std	Y+2, r24	; 0x02
     3c0:	8b 83       	std	Y+3, r24	; 0x03
     3c2:	1c 82       	std	Y+4, r1	; 0x04
     3c4:	1d 82       	std	Y+5, r1	; 0x05
     3c6:	1e 82       	std	Y+6, r1	; 0x06
     3c8:	1f 82       	std	Y+7, r1	; 0x07
     3ca:	18 86       	std	Y+8, r1	; 0x08
     3cc:	19 86       	std	Y+9, r1	; 0x09
}
     3ce:	ce 01       	movw	r24, r28
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	ff 90       	pop	r15
     3da:	ef 90       	pop	r14
     3dc:	08 95       	ret

000003de <canjoy_joystick_x>:

int canjoy_joystick_x(){
	return canjoy_msg.data[0];
     3de:	80 91 c3 02 	lds	r24, 0x02C3
}
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	08 95       	ret

000003e6 <ir_alt_unblocked>:



int ir_alt_unblocked(){
	
	if(adc_read(ADC0D) > HIGH){
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	ac de       	rcall	.-680    	; 0x142 <adc_read>
     3ea:	85 3f       	cpi	r24, 0xF5	; 245
     3ec:	91 40       	sbci	r25, 0x01	; 1
     3ee:	30 f4       	brcc	.+12     	; 0x3fc <ir_alt_unblocked+0x16>
		return 1;
	}
	if(adc_read(ADC0D) < LOW){
     3f0:	80 e0       	ldi	r24, 0x00	; 0
     3f2:	a7 de       	rcall	.-690    	; 0x142 <adc_read>
     3f4:	84 36       	cpi	r24, 0x64	; 100
     3f6:	91 05       	cpc	r25, r1
     3f8:	20 f0       	brcs	.+8      	; 0x402 <ir_alt_unblocked+0x1c>
     3fa:	08 95       	ret


int ir_alt_unblocked(){
	
	if(adc_read(ADC0D) > HIGH){
		return 1;
     3fc:	81 e0       	ldi	r24, 0x01	; 1
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	08 95       	ret
	}
	if(adc_read(ADC0D) < LOW){
		return 0;
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     406:	08 95       	ret

00000408 <ir_unblocked>:

int ir_unblocked(){
	
	if(adc_read(IR_PIN) > MID){
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	9b de       	rcall	.-714    	; 0x142 <adc_read>
     40c:	21 e0       	ldi	r18, 0x01	; 1
     40e:	30 e0       	ldi	r19, 0x00	; 0
     410:	8d 32       	cpi	r24, 0x2D	; 45
     412:	91 40       	sbci	r25, 0x01	; 1
     414:	10 f4       	brcc	.+4      	; 0x41a <ir_unblocked+0x12>
     416:	20 e0       	ldi	r18, 0x00	; 0
     418:	30 e0       	ldi	r19, 0x00	; 0
	}
	else
		return 0;
		
	
}
     41a:	c9 01       	movw	r24, r18
     41c:	08 95       	ret

0000041e <mcp2515_read>:
}

void mcp2515_request_to_send(int buffer_select){
	PORTB &= ~(1 << MCP2515_CS);
	spi_write(buffer_select);
	PORTB |= (1 << MCP2515_CS);
     41e:	cf 93       	push	r28
     420:	c8 2f       	mov	r28, r24
     422:	28 98       	cbi	0x05, 0	; 5
     424:	83 e0       	ldi	r24, 0x03	; 3
     426:	ac d0       	rcall	.+344    	; 0x580 <spi_write>
     428:	8c 2f       	mov	r24, r28
     42a:	aa d0       	rcall	.+340    	; 0x580 <spi_write>
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	a8 d0       	rcall	.+336    	; 0x580 <spi_write>
     430:	28 9a       	sbi	0x05, 0	; 5
     432:	cf 91       	pop	r28
     434:	08 95       	ret

00000436 <mcp2515_bit_modify>:
}

void mcp2515_bit_modify(int address, int mask, int data){
     436:	1f 93       	push	r17
     438:	cf 93       	push	r28
     43a:	df 93       	push	r29
     43c:	18 2f       	mov	r17, r24
     43e:	d6 2f       	mov	r29, r22
     440:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << MCP2515_CS);
     442:	28 98       	cbi	0x05, 0	; 5
	
	spi_write(MCP_BITMOD);
     444:	85 e0       	ldi	r24, 0x05	; 5
     446:	9c d0       	rcall	.+312    	; 0x580 <spi_write>
	spi_write(address);
     448:	81 2f       	mov	r24, r17
     44a:	9a d0       	rcall	.+308    	; 0x580 <spi_write>
	spi_write(mask);
     44c:	8d 2f       	mov	r24, r29
     44e:	98 d0       	rcall	.+304    	; 0x580 <spi_write>
	spi_write(data);
     450:	8c 2f       	mov	r24, r28
     452:	96 d0       	rcall	.+300    	; 0x580 <spi_write>

	PORTB |= (1 << MCP2515_CS);
     454:	28 9a       	sbi	0x05, 0	; 5
	
}
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	1f 91       	pop	r17
     45c:	08 95       	ret

0000045e <mcp2515_reset>:

void mcp2515_reset(){
	PORTB &= ~(1 << MCP2515_CS);
     45e:	28 98       	cbi	0x05, 0	; 5
	spi_write(MCP_RESET);
     460:	80 ec       	ldi	r24, 0xC0	; 192
     462:	8e d0       	rcall	.+284    	; 0x580 <spi_write>
	PORTB |= (1 << MCP2515_CS);
     464:	28 9a       	sbi	0x05, 0	; 5
     466:	08 95       	ret

00000468 <mcp2515_init>:
#include "SPI.h"
#include "mcp2515_define.h"


int mcp2515_init(){
	spi_init();
     468:	84 d0       	rcall	.+264    	; 0x572 <spi_init>
	mcp2515_reset();
     46a:	f9 df       	rcall	.-14     	; 0x45e <mcp2515_reset>
	
	uint8_t val = mcp2515_read(MCP_CANSTAT);
     46c:	8e e0       	ldi	r24, 0x0E	; 14
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	d6 df       	rcall	.-84     	; 0x41e <mcp2515_read>
	if((val & MODE_MASK) != MODE_CONFIG){
     472:	80 7e       	andi	r24, 0xE0	; 224
     474:	99 27       	eor	r25, r25
     476:	80 38       	cpi	r24, 0x80	; 128
     478:	91 05       	cpc	r25, r1
     47a:	31 f0       	breq	.+12     	; 0x488 <mcp2515_init+0x20>
		printf("ERROR: MCP2515 is NOT in config mode after reset!\n");
     47c:	85 e5       	ldi	r24, 0x55	; 85
     47e:	92 e0       	ldi	r25, 0x02	; 2
     480:	9c d2       	rcall	.+1336   	; 0x9ba <puts>
		return 1;
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	08 95       	ret
	}
	return 0;
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	90 e0       	ldi	r25, 0x00	; 0
}
     48c:	08 95       	ret

0000048e <pwm_init>:

void pwm_set_value(uint16_t val){
	OCR3A = val;
}

void pwm_set_servo(int16_t val){
     48e:	6b 9a       	sbi	0x0d, 3	; 13
     490:	73 9a       	sbi	0x0e, 3	; 14
     492:	a0 e9       	ldi	r26, 0x90	; 144
     494:	b0 e0       	ldi	r27, 0x00	; 0
     496:	1c 92       	st	X, r1
     498:	e1 e9       	ldi	r30, 0x91	; 145
     49a:	f0 e0       	ldi	r31, 0x00	; 0
     49c:	10 82       	st	Z, r1
     49e:	10 92 92 00 	sts	0x0092, r1
     4a2:	8c 91       	ld	r24, X
     4a4:	8e 7f       	andi	r24, 0xFE	; 254
     4a6:	8c 93       	st	X, r24
     4a8:	8c 91       	ld	r24, X
     4aa:	82 60       	ori	r24, 0x02	; 2
     4ac:	8c 93       	st	X, r24
     4ae:	80 81       	ld	r24, Z
     4b0:	88 60       	ori	r24, 0x08	; 8
     4b2:	80 83       	st	Z, r24
     4b4:	80 81       	ld	r24, Z
     4b6:	80 61       	ori	r24, 0x10	; 16
     4b8:	80 83       	st	Z, r24
     4ba:	8c 91       	ld	r24, X
     4bc:	8c 93       	st	X, r24
     4be:	8c 91       	ld	r24, X
     4c0:	80 68       	ori	r24, 0x80	; 128
     4c2:	8c 93       	st	X, r24
     4c4:	80 81       	ld	r24, Z
     4c6:	83 60       	ori	r24, 0x03	; 3
     4c8:	80 83       	st	Z, r24
     4ca:	80 81       	ld	r24, Z
     4cc:	8b 7f       	andi	r24, 0xFB	; 251
     4ce:	80 83       	st	Z, r24
     4d0:	88 e8       	ldi	r24, 0x88	; 136
     4d2:	93 e1       	ldi	r25, 0x13	; 19
     4d4:	90 93 97 00 	sts	0x0097, r25
     4d8:	80 93 96 00 	sts	0x0096, r24
     4dc:	87 e7       	ldi	r24, 0x77	; 119
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	90 93 99 00 	sts	0x0099, r25
     4e4:	80 93 98 00 	sts	0x0098, r24
     4e8:	08 95       	ret

000004ea <pwm_set_pulse>:
	//delete and remove from header
}

void pwm_set_pulse(int16_t val){
	
	if(val >= P_MAX)
     4ea:	8d 30       	cpi	r24, 0x0D	; 13
     4ec:	22 e0       	ldi	r18, 0x02	; 2
     4ee:	92 07       	cpc	r25, r18
     4f0:	3c f0       	brlt	.+14     	; 0x500 <pwm_set_pulse+0x16>
	//printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     4f2:	8d e0       	ldi	r24, 0x0D	; 13
     4f4:	92 e0       	ldi	r25, 0x02	; 2
     4f6:	90 93 99 00 	sts	0x0099, r25
     4fa:	80 93 98 00 	sts	0x0098, r24
     4fe:	08 95       	ret

void pwm_set_pulse(int16_t val){
	
	if(val >= P_MAX)
		pwm_set_value(P_MAX);
	else if(val < P_MIN)
     500:	81 3e       	cpi	r24, 0xE1	; 225
     502:	91 05       	cpc	r25, r1
     504:	3c f4       	brge	.+14     	; 0x514 <pwm_set_pulse+0x2a>
	//printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     506:	81 ee       	ldi	r24, 0xE1	; 225
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	90 93 99 00 	sts	0x0099, r25
     50e:	80 93 98 00 	sts	0x0098, r24
     512:	08 95       	ret
     514:	90 93 99 00 	sts	0x0099, r25
     518:	80 93 98 00 	sts	0x0098, r24
     51c:	08 95       	ret

0000051e <pwm_joystick_pulse>:


//uses joystick_x_value() which returns between 0 and 255
void pwm_joystick_pulse(int16_t val){
	
	if((val > 255) || (val < 0)){
     51e:	8f 3f       	cpi	r24, 0xFF	; 255
     520:	91 05       	cpc	r25, r1
     522:	99 f0       	breq	.+38     	; 0x54a <pwm_joystick_pulse+0x2c>
     524:	90 f0       	brcs	.+36     	; 0x54a <pwm_joystick_pulse+0x2c>
		printf("ERROR: pwm_joystick_pulse input val = %d out of range!\n", val);
     526:	9f 93       	push	r25
     528:	8f 93       	push	r24
     52a:	87 e8       	ldi	r24, 0x87	; 135
     52c:	92 e0       	ldi	r25, 0x02	; 2
     52e:	9f 93       	push	r25
     530:	8f 93       	push	r24
     532:	32 d2       	rcall	.+1124   	; 0x998 <printf>
	//printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     534:	87 e7       	ldi	r24, 0x77	; 119
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	90 93 99 00 	sts	0x0099, r25
     53c:	80 93 98 00 	sts	0x0098, r24
     540:	0f 90       	pop	r0
     542:	0f 90       	pop	r0
     544:	0f 90       	pop	r0
     546:	0f 90       	pop	r0
     548:	08 95       	ret
		pwm_set_value(P_MID);
		return;
	}
	else{
		
		uint16_t pulse_width = (val * (300/255.0)) + P_MIN;
     54a:	bc 01       	movw	r22, r24
     54c:	88 27       	eor	r24, r24
     54e:	77 fd       	sbrc	r23, 7
     550:	80 95       	com	r24
     552:	98 2f       	mov	r25, r24
     554:	e8 d0       	rcall	.+464    	; 0x726 <__floatsisf>
     556:	27 e9       	ldi	r18, 0x97	; 151
     558:	36 e9       	ldi	r19, 0x96	; 150
     55a:	46 e9       	ldi	r20, 0x96	; 150
     55c:	5f e3       	ldi	r21, 0x3F	; 63
     55e:	6f d1       	rcall	.+734    	; 0x83e <__mulsf3>
     560:	20 e0       	ldi	r18, 0x00	; 0
     562:	30 e0       	ldi	r19, 0x00	; 0
     564:	41 e6       	ldi	r20, 0x61	; 97
     566:	53 e4       	ldi	r21, 0x43	; 67
     568:	4c d0       	rcall	.+152    	; 0x602 <__addsf3>
     56a:	af d0       	rcall	.+350    	; 0x6ca <__fixunssfsi>
		
		//printf("\nPulse converted from %d to %d\t P_RESOLUTION = %d\n", val, pulse_width, P_RESOLUTION);
		pwm_set_pulse(pulse_width);
     56c:	cb 01       	movw	r24, r22
     56e:	bd cf       	rjmp	.-134    	; 0x4ea <pwm_set_pulse>
     570:	08 95       	ret

00000572 <spi_init>:
#include "SPI.h"
#include <avr/io.h>

void spi_init(){
			//SI out		SS out		SCK out
	DDRB |= ( 1 << PB2) | (1 << PB0) | (1 << PB1);
     572:	84 b1       	in	r24, 0x04	; 4
     574:	87 60       	ori	r24, 0x07	; 7
     576:	84 b9       	out	0x04, r24	; 4
	//SO in
	DDRB &= ~(1 << PB3);
     578:	23 98       	cbi	0x04, 3	; 4
	
	//								 frequency / 16
	SPCR= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     57a:	81 e5       	ldi	r24, 0x51	; 81
     57c:	8c bd       	out	0x2c, r24	; 44
     57e:	08 95       	ret

00000580 <spi_write>:

//both read and write
int spi_write(char data){
	//SPDR = data;
	//while(!(SPSR & (1<<SPIF)));
	SPDR = data;
     580:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     582:	0d b4       	in	r0, 0x2d	; 45
     584:	07 fe       	sbrs	r0, 7
     586:	fd cf       	rjmp	.-6      	; 0x582 <spi_write+0x2>
	return SPDR;
     588:	8e b5       	in	r24, 0x2e	; 46
}
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	08 95       	ret

0000058e <timer_init>:

int time_tick = 0;
int time_tick_max = 0;
void timer_init() {
	
	TCCR4A = 0;
     58e:	a0 ea       	ldi	r26, 0xA0	; 160
     590:	b0 e0       	ldi	r27, 0x00	; 0
     592:	1c 92       	st	X, r1
	TCCR4B = 0;
     594:	e1 ea       	ldi	r30, 0xA1	; 161
     596:	f0 e0       	ldi	r31, 0x00	; 0
     598:	10 82       	st	Z, r1
	
	//CS4{2:0}   = 101  prescaler set to 1024
	TCCR4B |=  (1<<CS42) | (1<<CS40);
     59a:	80 81       	ld	r24, Z
     59c:	85 60       	ori	r24, 0x05	; 5
     59e:	80 83       	st	Z, r24
	TCCR4B &= ~(1<<CS41);
     5a0:	80 81       	ld	r24, Z
     5a2:	8d 7f       	andi	r24, 0xFD	; 253
     5a4:	80 83       	st	Z, r24
	
	//0100 -> Mode CTC -> TOP = OCRnA
	TCCR4A &= ~(1<<WGM40);
     5a6:	8c 91       	ld	r24, X
     5a8:	8e 7f       	andi	r24, 0xFE	; 254
     5aa:	8c 93       	st	X, r24
	TCCR4A &= ~(1<<WGM41);
     5ac:	8c 91       	ld	r24, X
     5ae:	8d 7f       	andi	r24, 0xFD	; 253
     5b0:	8c 93       	st	X, r24
	TCCR4B |=  (1<<WGM42);
     5b2:	80 81       	ld	r24, Z
     5b4:	88 60       	ori	r24, 0x08	; 8
     5b6:	80 83       	st	Z, r24
	TCCR4B &= ~(1<<WGM43);
     5b8:	80 81       	ld	r24, Z
     5ba:	8f 7e       	andi	r24, 0xEF	; 239
     5bc:	80 83       	st	Z, r24
     5be:	08 95       	ret

000005c0 <uart_Transmit>:
}

void uart_Transmit( unsigned char data ){
	
	//Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
     5c0:	e0 ec       	ldi	r30, 0xC0	; 192
     5c2:	f0 e0       	ldi	r31, 0x00	; 0
     5c4:	90 81       	ld	r25, Z
     5c6:	95 ff       	sbrs	r25, 5
     5c8:	fd cf       	rjmp	.-6      	; 0x5c4 <uart_Transmit+0x4>
	
	//Put data into buffer, sends the data
	UDR0 = data;
     5ca:	80 93 c6 00 	sts	0x00C6, r24
     5ce:	08 95       	ret

000005d0 <uart_Receive>:

unsigned char uart_Receive(void){
	
	//Wait for data to be received
	
	while( !(UCSR0A & (1<<RXC0)) );
     5d0:	e0 ec       	ldi	r30, 0xC0	; 192
     5d2:	f0 e0       	ldi	r31, 0x00	; 0
     5d4:	80 81       	ld	r24, Z
     5d6:	88 23       	and	r24, r24
     5d8:	ec f7       	brge	.-6      	; 0x5d4 <uart_Receive+0x4>
	
	//Get and return received data from buffer
	
	return UDR0;
     5da:	80 91 c6 00 	lds	r24, 0x00C6
}
     5de:	08 95       	ret

000005e0 <uart_Init>:
#include "uart.h"

void uart_Init(unsigned int ubrr){
	
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     5e0:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     5e4:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     5e8:	88 e1       	ldi	r24, 0x18	; 24
     5ea:	80 93 c1 00 	sts	0x00C1, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C = (1 << 7)|(3<<UCSZ00);//here, 7 replaces URSEL0 from ATmega162 project
     5ee:	86 e8       	ldi	r24, 0x86	; 134
     5f0:	80 93 c2 00 	sts	0x00C2, r24
	
	fdevopen(uart_Transmit, uart_Receive);
     5f4:	68 ee       	ldi	r22, 0xE8	; 232
     5f6:	72 e0       	ldi	r23, 0x02	; 2
     5f8:	80 ee       	ldi	r24, 0xE0	; 224
     5fa:	92 e0       	ldi	r25, 0x02	; 2
     5fc:	83 c1       	rjmp	.+774    	; 0x904 <fdevopen>
     5fe:	08 95       	ret

00000600 <__subsf3>:
     600:	50 58       	subi	r21, 0x80	; 128

00000602 <__addsf3>:
     602:	bb 27       	eor	r27, r27
     604:	aa 27       	eor	r26, r26
     606:	0e d0       	rcall	.+28     	; 0x624 <__addsf3x>
     608:	e0 c0       	rjmp	.+448    	; 0x7ca <__fp_round>
     60a:	d1 d0       	rcall	.+418    	; 0x7ae <__fp_pscA>
     60c:	30 f0       	brcs	.+12     	; 0x61a <__addsf3+0x18>
     60e:	d6 d0       	rcall	.+428    	; 0x7bc <__fp_pscB>
     610:	20 f0       	brcs	.+8      	; 0x61a <__addsf3+0x18>
     612:	31 f4       	brne	.+12     	; 0x620 <__addsf3+0x1e>
     614:	9f 3f       	cpi	r25, 0xFF	; 255
     616:	11 f4       	brne	.+4      	; 0x61c <__addsf3+0x1a>
     618:	1e f4       	brtc	.+6      	; 0x620 <__addsf3+0x1e>
     61a:	c6 c0       	rjmp	.+396    	; 0x7a8 <__fp_nan>
     61c:	0e f4       	brtc	.+2      	; 0x620 <__addsf3+0x1e>
     61e:	e0 95       	com	r30
     620:	e7 fb       	bst	r30, 7
     622:	bc c0       	rjmp	.+376    	; 0x79c <__fp_inf>

00000624 <__addsf3x>:
     624:	e9 2f       	mov	r30, r25
     626:	e2 d0       	rcall	.+452    	; 0x7ec <__fp_split3>
     628:	80 f3       	brcs	.-32     	; 0x60a <__addsf3+0x8>
     62a:	ba 17       	cp	r27, r26
     62c:	62 07       	cpc	r22, r18
     62e:	73 07       	cpc	r23, r19
     630:	84 07       	cpc	r24, r20
     632:	95 07       	cpc	r25, r21
     634:	18 f0       	brcs	.+6      	; 0x63c <__addsf3x+0x18>
     636:	71 f4       	brne	.+28     	; 0x654 <__addsf3x+0x30>
     638:	9e f5       	brtc	.+102    	; 0x6a0 <__addsf3x+0x7c>
     63a:	fa c0       	rjmp	.+500    	; 0x830 <__fp_zero>
     63c:	0e f4       	brtc	.+2      	; 0x640 <__addsf3x+0x1c>
     63e:	e0 95       	com	r30
     640:	0b 2e       	mov	r0, r27
     642:	ba 2f       	mov	r27, r26
     644:	a0 2d       	mov	r26, r0
     646:	0b 01       	movw	r0, r22
     648:	b9 01       	movw	r22, r18
     64a:	90 01       	movw	r18, r0
     64c:	0c 01       	movw	r0, r24
     64e:	ca 01       	movw	r24, r20
     650:	a0 01       	movw	r20, r0
     652:	11 24       	eor	r1, r1
     654:	ff 27       	eor	r31, r31
     656:	59 1b       	sub	r21, r25
     658:	99 f0       	breq	.+38     	; 0x680 <__addsf3x+0x5c>
     65a:	59 3f       	cpi	r21, 0xF9	; 249
     65c:	50 f4       	brcc	.+20     	; 0x672 <__addsf3x+0x4e>
     65e:	50 3e       	cpi	r21, 0xE0	; 224
     660:	68 f1       	brcs	.+90     	; 0x6bc <__addsf3x+0x98>
     662:	1a 16       	cp	r1, r26
     664:	f0 40       	sbci	r31, 0x00	; 0
     666:	a2 2f       	mov	r26, r18
     668:	23 2f       	mov	r18, r19
     66a:	34 2f       	mov	r19, r20
     66c:	44 27       	eor	r20, r20
     66e:	58 5f       	subi	r21, 0xF8	; 248
     670:	f3 cf       	rjmp	.-26     	; 0x658 <__addsf3x+0x34>
     672:	46 95       	lsr	r20
     674:	37 95       	ror	r19
     676:	27 95       	ror	r18
     678:	a7 95       	ror	r26
     67a:	f0 40       	sbci	r31, 0x00	; 0
     67c:	53 95       	inc	r21
     67e:	c9 f7       	brne	.-14     	; 0x672 <__addsf3x+0x4e>
     680:	7e f4       	brtc	.+30     	; 0x6a0 <__addsf3x+0x7c>
     682:	1f 16       	cp	r1, r31
     684:	ba 0b       	sbc	r27, r26
     686:	62 0b       	sbc	r22, r18
     688:	73 0b       	sbc	r23, r19
     68a:	84 0b       	sbc	r24, r20
     68c:	ba f0       	brmi	.+46     	; 0x6bc <__addsf3x+0x98>
     68e:	91 50       	subi	r25, 0x01	; 1
     690:	a1 f0       	breq	.+40     	; 0x6ba <__addsf3x+0x96>
     692:	ff 0f       	add	r31, r31
     694:	bb 1f       	adc	r27, r27
     696:	66 1f       	adc	r22, r22
     698:	77 1f       	adc	r23, r23
     69a:	88 1f       	adc	r24, r24
     69c:	c2 f7       	brpl	.-16     	; 0x68e <__addsf3x+0x6a>
     69e:	0e c0       	rjmp	.+28     	; 0x6bc <__addsf3x+0x98>
     6a0:	ba 0f       	add	r27, r26
     6a2:	62 1f       	adc	r22, r18
     6a4:	73 1f       	adc	r23, r19
     6a6:	84 1f       	adc	r24, r20
     6a8:	48 f4       	brcc	.+18     	; 0x6bc <__addsf3x+0x98>
     6aa:	87 95       	ror	r24
     6ac:	77 95       	ror	r23
     6ae:	67 95       	ror	r22
     6b0:	b7 95       	ror	r27
     6b2:	f7 95       	ror	r31
     6b4:	9e 3f       	cpi	r25, 0xFE	; 254
     6b6:	08 f0       	brcs	.+2      	; 0x6ba <__addsf3x+0x96>
     6b8:	b3 cf       	rjmp	.-154    	; 0x620 <__addsf3+0x1e>
     6ba:	93 95       	inc	r25
     6bc:	88 0f       	add	r24, r24
     6be:	08 f0       	brcs	.+2      	; 0x6c2 <__addsf3x+0x9e>
     6c0:	99 27       	eor	r25, r25
     6c2:	ee 0f       	add	r30, r30
     6c4:	97 95       	ror	r25
     6c6:	87 95       	ror	r24
     6c8:	08 95       	ret

000006ca <__fixunssfsi>:
     6ca:	98 d0       	rcall	.+304    	; 0x7fc <__fp_splitA>
     6cc:	88 f0       	brcs	.+34     	; 0x6f0 <__fixunssfsi+0x26>
     6ce:	9f 57       	subi	r25, 0x7F	; 127
     6d0:	90 f0       	brcs	.+36     	; 0x6f6 <__fixunssfsi+0x2c>
     6d2:	b9 2f       	mov	r27, r25
     6d4:	99 27       	eor	r25, r25
     6d6:	b7 51       	subi	r27, 0x17	; 23
     6d8:	a0 f0       	brcs	.+40     	; 0x702 <__fixunssfsi+0x38>
     6da:	d1 f0       	breq	.+52     	; 0x710 <__fixunssfsi+0x46>
     6dc:	66 0f       	add	r22, r22
     6de:	77 1f       	adc	r23, r23
     6e0:	88 1f       	adc	r24, r24
     6e2:	99 1f       	adc	r25, r25
     6e4:	1a f0       	brmi	.+6      	; 0x6ec <__fixunssfsi+0x22>
     6e6:	ba 95       	dec	r27
     6e8:	c9 f7       	brne	.-14     	; 0x6dc <__fixunssfsi+0x12>
     6ea:	12 c0       	rjmp	.+36     	; 0x710 <__fixunssfsi+0x46>
     6ec:	b1 30       	cpi	r27, 0x01	; 1
     6ee:	81 f0       	breq	.+32     	; 0x710 <__fixunssfsi+0x46>
     6f0:	9f d0       	rcall	.+318    	; 0x830 <__fp_zero>
     6f2:	b1 e0       	ldi	r27, 0x01	; 1
     6f4:	08 95       	ret
     6f6:	9c c0       	rjmp	.+312    	; 0x830 <__fp_zero>
     6f8:	67 2f       	mov	r22, r23
     6fa:	78 2f       	mov	r23, r24
     6fc:	88 27       	eor	r24, r24
     6fe:	b8 5f       	subi	r27, 0xF8	; 248
     700:	39 f0       	breq	.+14     	; 0x710 <__fixunssfsi+0x46>
     702:	b9 3f       	cpi	r27, 0xF9	; 249
     704:	cc f3       	brlt	.-14     	; 0x6f8 <__fixunssfsi+0x2e>
     706:	86 95       	lsr	r24
     708:	77 95       	ror	r23
     70a:	67 95       	ror	r22
     70c:	b3 95       	inc	r27
     70e:	d9 f7       	brne	.-10     	; 0x706 <__fixunssfsi+0x3c>
     710:	3e f4       	brtc	.+14     	; 0x720 <__fixunssfsi+0x56>
     712:	90 95       	com	r25
     714:	80 95       	com	r24
     716:	70 95       	com	r23
     718:	61 95       	neg	r22
     71a:	7f 4f       	sbci	r23, 0xFF	; 255
     71c:	8f 4f       	sbci	r24, 0xFF	; 255
     71e:	9f 4f       	sbci	r25, 0xFF	; 255
     720:	08 95       	ret

00000722 <__floatunsisf>:
     722:	e8 94       	clt
     724:	09 c0       	rjmp	.+18     	; 0x738 <__floatsisf+0x12>

00000726 <__floatsisf>:
     726:	97 fb       	bst	r25, 7
     728:	3e f4       	brtc	.+14     	; 0x738 <__floatsisf+0x12>
     72a:	90 95       	com	r25
     72c:	80 95       	com	r24
     72e:	70 95       	com	r23
     730:	61 95       	neg	r22
     732:	7f 4f       	sbci	r23, 0xFF	; 255
     734:	8f 4f       	sbci	r24, 0xFF	; 255
     736:	9f 4f       	sbci	r25, 0xFF	; 255
     738:	99 23       	and	r25, r25
     73a:	a9 f0       	breq	.+42     	; 0x766 <__floatsisf+0x40>
     73c:	f9 2f       	mov	r31, r25
     73e:	96 e9       	ldi	r25, 0x96	; 150
     740:	bb 27       	eor	r27, r27
     742:	93 95       	inc	r25
     744:	f6 95       	lsr	r31
     746:	87 95       	ror	r24
     748:	77 95       	ror	r23
     74a:	67 95       	ror	r22
     74c:	b7 95       	ror	r27
     74e:	f1 11       	cpse	r31, r1
     750:	f8 cf       	rjmp	.-16     	; 0x742 <__floatsisf+0x1c>
     752:	fa f4       	brpl	.+62     	; 0x792 <__floatsisf+0x6c>
     754:	bb 0f       	add	r27, r27
     756:	11 f4       	brne	.+4      	; 0x75c <__floatsisf+0x36>
     758:	60 ff       	sbrs	r22, 0
     75a:	1b c0       	rjmp	.+54     	; 0x792 <__floatsisf+0x6c>
     75c:	6f 5f       	subi	r22, 0xFF	; 255
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	8f 4f       	sbci	r24, 0xFF	; 255
     762:	9f 4f       	sbci	r25, 0xFF	; 255
     764:	16 c0       	rjmp	.+44     	; 0x792 <__floatsisf+0x6c>
     766:	88 23       	and	r24, r24
     768:	11 f0       	breq	.+4      	; 0x76e <__floatsisf+0x48>
     76a:	96 e9       	ldi	r25, 0x96	; 150
     76c:	11 c0       	rjmp	.+34     	; 0x790 <__floatsisf+0x6a>
     76e:	77 23       	and	r23, r23
     770:	21 f0       	breq	.+8      	; 0x77a <__floatsisf+0x54>
     772:	9e e8       	ldi	r25, 0x8E	; 142
     774:	87 2f       	mov	r24, r23
     776:	76 2f       	mov	r23, r22
     778:	05 c0       	rjmp	.+10     	; 0x784 <__floatsisf+0x5e>
     77a:	66 23       	and	r22, r22
     77c:	71 f0       	breq	.+28     	; 0x79a <__floatsisf+0x74>
     77e:	96 e8       	ldi	r25, 0x86	; 134
     780:	86 2f       	mov	r24, r22
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	60 e0       	ldi	r22, 0x00	; 0
     786:	2a f0       	brmi	.+10     	; 0x792 <__floatsisf+0x6c>
     788:	9a 95       	dec	r25
     78a:	66 0f       	add	r22, r22
     78c:	77 1f       	adc	r23, r23
     78e:	88 1f       	adc	r24, r24
     790:	da f7       	brpl	.-10     	; 0x788 <__floatsisf+0x62>
     792:	88 0f       	add	r24, r24
     794:	96 95       	lsr	r25
     796:	87 95       	ror	r24
     798:	97 f9       	bld	r25, 7
     79a:	08 95       	ret

0000079c <__fp_inf>:
     79c:	97 f9       	bld	r25, 7
     79e:	9f 67       	ori	r25, 0x7F	; 127
     7a0:	80 e8       	ldi	r24, 0x80	; 128
     7a2:	70 e0       	ldi	r23, 0x00	; 0
     7a4:	60 e0       	ldi	r22, 0x00	; 0
     7a6:	08 95       	ret

000007a8 <__fp_nan>:
     7a8:	9f ef       	ldi	r25, 0xFF	; 255
     7aa:	80 ec       	ldi	r24, 0xC0	; 192
     7ac:	08 95       	ret

000007ae <__fp_pscA>:
     7ae:	00 24       	eor	r0, r0
     7b0:	0a 94       	dec	r0
     7b2:	16 16       	cp	r1, r22
     7b4:	17 06       	cpc	r1, r23
     7b6:	18 06       	cpc	r1, r24
     7b8:	09 06       	cpc	r0, r25
     7ba:	08 95       	ret

000007bc <__fp_pscB>:
     7bc:	00 24       	eor	r0, r0
     7be:	0a 94       	dec	r0
     7c0:	12 16       	cp	r1, r18
     7c2:	13 06       	cpc	r1, r19
     7c4:	14 06       	cpc	r1, r20
     7c6:	05 06       	cpc	r0, r21
     7c8:	08 95       	ret

000007ca <__fp_round>:
     7ca:	09 2e       	mov	r0, r25
     7cc:	03 94       	inc	r0
     7ce:	00 0c       	add	r0, r0
     7d0:	11 f4       	brne	.+4      	; 0x7d6 <__fp_round+0xc>
     7d2:	88 23       	and	r24, r24
     7d4:	52 f0       	brmi	.+20     	; 0x7ea <__fp_round+0x20>
     7d6:	bb 0f       	add	r27, r27
     7d8:	40 f4       	brcc	.+16     	; 0x7ea <__fp_round+0x20>
     7da:	bf 2b       	or	r27, r31
     7dc:	11 f4       	brne	.+4      	; 0x7e2 <__fp_round+0x18>
     7de:	60 ff       	sbrs	r22, 0
     7e0:	04 c0       	rjmp	.+8      	; 0x7ea <__fp_round+0x20>
     7e2:	6f 5f       	subi	r22, 0xFF	; 255
     7e4:	7f 4f       	sbci	r23, 0xFF	; 255
     7e6:	8f 4f       	sbci	r24, 0xFF	; 255
     7e8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ea:	08 95       	ret

000007ec <__fp_split3>:
     7ec:	57 fd       	sbrc	r21, 7
     7ee:	90 58       	subi	r25, 0x80	; 128
     7f0:	44 0f       	add	r20, r20
     7f2:	55 1f       	adc	r21, r21
     7f4:	59 f0       	breq	.+22     	; 0x80c <__fp_splitA+0x10>
     7f6:	5f 3f       	cpi	r21, 0xFF	; 255
     7f8:	71 f0       	breq	.+28     	; 0x816 <__fp_splitA+0x1a>
     7fa:	47 95       	ror	r20

000007fc <__fp_splitA>:
     7fc:	88 0f       	add	r24, r24
     7fe:	97 fb       	bst	r25, 7
     800:	99 1f       	adc	r25, r25
     802:	61 f0       	breq	.+24     	; 0x81c <__fp_splitA+0x20>
     804:	9f 3f       	cpi	r25, 0xFF	; 255
     806:	79 f0       	breq	.+30     	; 0x826 <__fp_splitA+0x2a>
     808:	87 95       	ror	r24
     80a:	08 95       	ret
     80c:	12 16       	cp	r1, r18
     80e:	13 06       	cpc	r1, r19
     810:	14 06       	cpc	r1, r20
     812:	55 1f       	adc	r21, r21
     814:	f2 cf       	rjmp	.-28     	; 0x7fa <__fp_split3+0xe>
     816:	46 95       	lsr	r20
     818:	f1 df       	rcall	.-30     	; 0x7fc <__fp_splitA>
     81a:	08 c0       	rjmp	.+16     	; 0x82c <__fp_splitA+0x30>
     81c:	16 16       	cp	r1, r22
     81e:	17 06       	cpc	r1, r23
     820:	18 06       	cpc	r1, r24
     822:	99 1f       	adc	r25, r25
     824:	f1 cf       	rjmp	.-30     	; 0x808 <__fp_splitA+0xc>
     826:	86 95       	lsr	r24
     828:	71 05       	cpc	r23, r1
     82a:	61 05       	cpc	r22, r1
     82c:	08 94       	sec
     82e:	08 95       	ret

00000830 <__fp_zero>:
     830:	e8 94       	clt

00000832 <__fp_szero>:
     832:	bb 27       	eor	r27, r27
     834:	66 27       	eor	r22, r22
     836:	77 27       	eor	r23, r23
     838:	cb 01       	movw	r24, r22
     83a:	97 f9       	bld	r25, 7
     83c:	08 95       	ret

0000083e <__mulsf3>:
     83e:	0b d0       	rcall	.+22     	; 0x856 <__mulsf3x>
     840:	c4 cf       	rjmp	.-120    	; 0x7ca <__fp_round>
     842:	b5 df       	rcall	.-150    	; 0x7ae <__fp_pscA>
     844:	28 f0       	brcs	.+10     	; 0x850 <__mulsf3+0x12>
     846:	ba df       	rcall	.-140    	; 0x7bc <__fp_pscB>
     848:	18 f0       	brcs	.+6      	; 0x850 <__mulsf3+0x12>
     84a:	95 23       	and	r25, r21
     84c:	09 f0       	breq	.+2      	; 0x850 <__mulsf3+0x12>
     84e:	a6 cf       	rjmp	.-180    	; 0x79c <__fp_inf>
     850:	ab cf       	rjmp	.-170    	; 0x7a8 <__fp_nan>
     852:	11 24       	eor	r1, r1
     854:	ee cf       	rjmp	.-36     	; 0x832 <__fp_szero>

00000856 <__mulsf3x>:
     856:	ca df       	rcall	.-108    	; 0x7ec <__fp_split3>
     858:	a0 f3       	brcs	.-24     	; 0x842 <__mulsf3+0x4>

0000085a <__mulsf3_pse>:
     85a:	95 9f       	mul	r25, r21
     85c:	d1 f3       	breq	.-12     	; 0x852 <__mulsf3+0x14>
     85e:	95 0f       	add	r25, r21
     860:	50 e0       	ldi	r21, 0x00	; 0
     862:	55 1f       	adc	r21, r21
     864:	62 9f       	mul	r22, r18
     866:	f0 01       	movw	r30, r0
     868:	72 9f       	mul	r23, r18
     86a:	bb 27       	eor	r27, r27
     86c:	f0 0d       	add	r31, r0
     86e:	b1 1d       	adc	r27, r1
     870:	63 9f       	mul	r22, r19
     872:	aa 27       	eor	r26, r26
     874:	f0 0d       	add	r31, r0
     876:	b1 1d       	adc	r27, r1
     878:	aa 1f       	adc	r26, r26
     87a:	64 9f       	mul	r22, r20
     87c:	66 27       	eor	r22, r22
     87e:	b0 0d       	add	r27, r0
     880:	a1 1d       	adc	r26, r1
     882:	66 1f       	adc	r22, r22
     884:	82 9f       	mul	r24, r18
     886:	22 27       	eor	r18, r18
     888:	b0 0d       	add	r27, r0
     88a:	a1 1d       	adc	r26, r1
     88c:	62 1f       	adc	r22, r18
     88e:	73 9f       	mul	r23, r19
     890:	b0 0d       	add	r27, r0
     892:	a1 1d       	adc	r26, r1
     894:	62 1f       	adc	r22, r18
     896:	83 9f       	mul	r24, r19
     898:	a0 0d       	add	r26, r0
     89a:	61 1d       	adc	r22, r1
     89c:	22 1f       	adc	r18, r18
     89e:	74 9f       	mul	r23, r20
     8a0:	33 27       	eor	r19, r19
     8a2:	a0 0d       	add	r26, r0
     8a4:	61 1d       	adc	r22, r1
     8a6:	23 1f       	adc	r18, r19
     8a8:	84 9f       	mul	r24, r20
     8aa:	60 0d       	add	r22, r0
     8ac:	21 1d       	adc	r18, r1
     8ae:	82 2f       	mov	r24, r18
     8b0:	76 2f       	mov	r23, r22
     8b2:	6a 2f       	mov	r22, r26
     8b4:	11 24       	eor	r1, r1
     8b6:	9f 57       	subi	r25, 0x7F	; 127
     8b8:	50 40       	sbci	r21, 0x00	; 0
     8ba:	8a f0       	brmi	.+34     	; 0x8de <__mulsf3_pse+0x84>
     8bc:	e1 f0       	breq	.+56     	; 0x8f6 <__mulsf3_pse+0x9c>
     8be:	88 23       	and	r24, r24
     8c0:	4a f0       	brmi	.+18     	; 0x8d4 <__mulsf3_pse+0x7a>
     8c2:	ee 0f       	add	r30, r30
     8c4:	ff 1f       	adc	r31, r31
     8c6:	bb 1f       	adc	r27, r27
     8c8:	66 1f       	adc	r22, r22
     8ca:	77 1f       	adc	r23, r23
     8cc:	88 1f       	adc	r24, r24
     8ce:	91 50       	subi	r25, 0x01	; 1
     8d0:	50 40       	sbci	r21, 0x00	; 0
     8d2:	a9 f7       	brne	.-22     	; 0x8be <__mulsf3_pse+0x64>
     8d4:	9e 3f       	cpi	r25, 0xFE	; 254
     8d6:	51 05       	cpc	r21, r1
     8d8:	70 f0       	brcs	.+28     	; 0x8f6 <__mulsf3_pse+0x9c>
     8da:	60 cf       	rjmp	.-320    	; 0x79c <__fp_inf>
     8dc:	aa cf       	rjmp	.-172    	; 0x832 <__fp_szero>
     8de:	5f 3f       	cpi	r21, 0xFF	; 255
     8e0:	ec f3       	brlt	.-6      	; 0x8dc <__mulsf3_pse+0x82>
     8e2:	98 3e       	cpi	r25, 0xE8	; 232
     8e4:	dc f3       	brlt	.-10     	; 0x8dc <__mulsf3_pse+0x82>
     8e6:	86 95       	lsr	r24
     8e8:	77 95       	ror	r23
     8ea:	67 95       	ror	r22
     8ec:	b7 95       	ror	r27
     8ee:	f7 95       	ror	r31
     8f0:	e7 95       	ror	r30
     8f2:	9f 5f       	subi	r25, 0xFF	; 255
     8f4:	c1 f7       	brne	.-16     	; 0x8e6 <__mulsf3_pse+0x8c>
     8f6:	fe 2b       	or	r31, r30
     8f8:	88 0f       	add	r24, r24
     8fa:	91 1d       	adc	r25, r1
     8fc:	96 95       	lsr	r25
     8fe:	87 95       	ror	r24
     900:	97 f9       	bld	r25, 7
     902:	08 95       	ret

00000904 <fdevopen>:
     904:	0f 93       	push	r16
     906:	1f 93       	push	r17
     908:	cf 93       	push	r28
     90a:	df 93       	push	r29
     90c:	ec 01       	movw	r28, r24
     90e:	8b 01       	movw	r16, r22
     910:	00 97       	sbiw	r24, 0x00	; 0
     912:	31 f4       	brne	.+12     	; 0x920 <fdevopen+0x1c>
     914:	61 15       	cp	r22, r1
     916:	71 05       	cpc	r23, r1
     918:	19 f4       	brne	.+6      	; 0x920 <fdevopen+0x1c>
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	37 c0       	rjmp	.+110    	; 0x98e <fdevopen+0x8a>
     920:	6e e0       	ldi	r22, 0x0E	; 14
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	63 d2       	rcall	.+1222   	; 0xdf0 <calloc>
     92a:	fc 01       	movw	r30, r24
     92c:	00 97       	sbiw	r24, 0x00	; 0
     92e:	a9 f3       	breq	.-22     	; 0x91a <fdevopen+0x16>
     930:	80 e8       	ldi	r24, 0x80	; 128
     932:	83 83       	std	Z+3, r24	; 0x03
     934:	01 15       	cp	r16, r1
     936:	11 05       	cpc	r17, r1
     938:	71 f0       	breq	.+28     	; 0x956 <fdevopen+0x52>
     93a:	13 87       	std	Z+11, r17	; 0x0b
     93c:	02 87       	std	Z+10, r16	; 0x0a
     93e:	81 e8       	ldi	r24, 0x81	; 129
     940:	83 83       	std	Z+3, r24	; 0x03
     942:	80 91 cb 02 	lds	r24, 0x02CB
     946:	90 91 cc 02 	lds	r25, 0x02CC
     94a:	89 2b       	or	r24, r25
     94c:	21 f4       	brne	.+8      	; 0x956 <fdevopen+0x52>
     94e:	f0 93 cc 02 	sts	0x02CC, r31
     952:	e0 93 cb 02 	sts	0x02CB, r30
     956:	20 97       	sbiw	r28, 0x00	; 0
     958:	c9 f0       	breq	.+50     	; 0x98c <fdevopen+0x88>
     95a:	d1 87       	std	Z+9, r29	; 0x09
     95c:	c0 87       	std	Z+8, r28	; 0x08
     95e:	83 81       	ldd	r24, Z+3	; 0x03
     960:	82 60       	ori	r24, 0x02	; 2
     962:	83 83       	std	Z+3, r24	; 0x03
     964:	80 91 cd 02 	lds	r24, 0x02CD
     968:	90 91 ce 02 	lds	r25, 0x02CE
     96c:	89 2b       	or	r24, r25
     96e:	71 f4       	brne	.+28     	; 0x98c <fdevopen+0x88>
     970:	f0 93 ce 02 	sts	0x02CE, r31
     974:	e0 93 cd 02 	sts	0x02CD, r30
     978:	80 91 cf 02 	lds	r24, 0x02CF
     97c:	90 91 d0 02 	lds	r25, 0x02D0
     980:	89 2b       	or	r24, r25
     982:	21 f4       	brne	.+8      	; 0x98c <fdevopen+0x88>
     984:	f0 93 d0 02 	sts	0x02D0, r31
     988:	e0 93 cf 02 	sts	0x02CF, r30
     98c:	cf 01       	movw	r24, r30
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	1f 91       	pop	r17
     994:	0f 91       	pop	r16
     996:	08 95       	ret

00000998 <printf>:
     998:	cf 93       	push	r28
     99a:	df 93       	push	r29
     99c:	cd b7       	in	r28, 0x3d	; 61
     99e:	de b7       	in	r29, 0x3e	; 62
     9a0:	fe 01       	movw	r30, r28
     9a2:	36 96       	adiw	r30, 0x06	; 6
     9a4:	61 91       	ld	r22, Z+
     9a6:	71 91       	ld	r23, Z+
     9a8:	af 01       	movw	r20, r30
     9aa:	80 91 cd 02 	lds	r24, 0x02CD
     9ae:	90 91 ce 02 	lds	r25, 0x02CE
     9b2:	30 d0       	rcall	.+96     	; 0xa14 <vfprintf>
     9b4:	df 91       	pop	r29
     9b6:	cf 91       	pop	r28
     9b8:	08 95       	ret

000009ba <puts>:
     9ba:	0f 93       	push	r16
     9bc:	1f 93       	push	r17
     9be:	cf 93       	push	r28
     9c0:	df 93       	push	r29
     9c2:	e0 91 cd 02 	lds	r30, 0x02CD
     9c6:	f0 91 ce 02 	lds	r31, 0x02CE
     9ca:	23 81       	ldd	r18, Z+3	; 0x03
     9cc:	21 ff       	sbrs	r18, 1
     9ce:	1b c0       	rjmp	.+54     	; 0xa06 <puts+0x4c>
     9d0:	ec 01       	movw	r28, r24
     9d2:	00 e0       	ldi	r16, 0x00	; 0
     9d4:	10 e0       	ldi	r17, 0x00	; 0
     9d6:	89 91       	ld	r24, Y+
     9d8:	60 91 cd 02 	lds	r22, 0x02CD
     9dc:	70 91 ce 02 	lds	r23, 0x02CE
     9e0:	db 01       	movw	r26, r22
     9e2:	18 96       	adiw	r26, 0x08	; 8
     9e4:	ed 91       	ld	r30, X+
     9e6:	fc 91       	ld	r31, X
     9e8:	19 97       	sbiw	r26, 0x09	; 9
     9ea:	88 23       	and	r24, r24
     9ec:	31 f0       	breq	.+12     	; 0x9fa <puts+0x40>
     9ee:	19 95       	eicall
     9f0:	89 2b       	or	r24, r25
     9f2:	89 f3       	breq	.-30     	; 0x9d6 <puts+0x1c>
     9f4:	0f ef       	ldi	r16, 0xFF	; 255
     9f6:	1f ef       	ldi	r17, 0xFF	; 255
     9f8:	ee cf       	rjmp	.-36     	; 0x9d6 <puts+0x1c>
     9fa:	8a e0       	ldi	r24, 0x0A	; 10
     9fc:	19 95       	eicall
     9fe:	89 2b       	or	r24, r25
     a00:	11 f4       	brne	.+4      	; 0xa06 <puts+0x4c>
     a02:	c8 01       	movw	r24, r16
     a04:	02 c0       	rjmp	.+4      	; 0xa0a <puts+0x50>
     a06:	8f ef       	ldi	r24, 0xFF	; 255
     a08:	9f ef       	ldi	r25, 0xFF	; 255
     a0a:	df 91       	pop	r29
     a0c:	cf 91       	pop	r28
     a0e:	1f 91       	pop	r17
     a10:	0f 91       	pop	r16
     a12:	08 95       	ret

00000a14 <vfprintf>:
     a14:	2f 92       	push	r2
     a16:	3f 92       	push	r3
     a18:	4f 92       	push	r4
     a1a:	5f 92       	push	r5
     a1c:	6f 92       	push	r6
     a1e:	7f 92       	push	r7
     a20:	8f 92       	push	r8
     a22:	9f 92       	push	r9
     a24:	af 92       	push	r10
     a26:	bf 92       	push	r11
     a28:	cf 92       	push	r12
     a2a:	df 92       	push	r13
     a2c:	ef 92       	push	r14
     a2e:	ff 92       	push	r15
     a30:	0f 93       	push	r16
     a32:	1f 93       	push	r17
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
     a38:	cd b7       	in	r28, 0x3d	; 61
     a3a:	de b7       	in	r29, 0x3e	; 62
     a3c:	2c 97       	sbiw	r28, 0x0c	; 12
     a3e:	0f b6       	in	r0, 0x3f	; 63
     a40:	f8 94       	cli
     a42:	de bf       	out	0x3e, r29	; 62
     a44:	0f be       	out	0x3f, r0	; 63
     a46:	cd bf       	out	0x3d, r28	; 61
     a48:	7c 01       	movw	r14, r24
     a4a:	6b 01       	movw	r12, r22
     a4c:	8a 01       	movw	r16, r20
     a4e:	fc 01       	movw	r30, r24
     a50:	17 82       	std	Z+7, r1	; 0x07
     a52:	16 82       	std	Z+6, r1	; 0x06
     a54:	83 81       	ldd	r24, Z+3	; 0x03
     a56:	81 ff       	sbrs	r24, 1
     a58:	b0 c1       	rjmp	.+864    	; 0xdba <vfprintf+0x3a6>
     a5a:	ce 01       	movw	r24, r28
     a5c:	01 96       	adiw	r24, 0x01	; 1
     a5e:	4c 01       	movw	r8, r24
     a60:	f7 01       	movw	r30, r14
     a62:	93 81       	ldd	r25, Z+3	; 0x03
     a64:	f6 01       	movw	r30, r12
     a66:	93 fd       	sbrc	r25, 3
     a68:	85 91       	lpm	r24, Z+
     a6a:	93 ff       	sbrs	r25, 3
     a6c:	81 91       	ld	r24, Z+
     a6e:	6f 01       	movw	r12, r30
     a70:	88 23       	and	r24, r24
     a72:	09 f4       	brne	.+2      	; 0xa76 <vfprintf+0x62>
     a74:	9e c1       	rjmp	.+828    	; 0xdb2 <vfprintf+0x39e>
     a76:	85 32       	cpi	r24, 0x25	; 37
     a78:	39 f4       	brne	.+14     	; 0xa88 <vfprintf+0x74>
     a7a:	93 fd       	sbrc	r25, 3
     a7c:	85 91       	lpm	r24, Z+
     a7e:	93 ff       	sbrs	r25, 3
     a80:	81 91       	ld	r24, Z+
     a82:	6f 01       	movw	r12, r30
     a84:	85 32       	cpi	r24, 0x25	; 37
     a86:	21 f4       	brne	.+8      	; 0xa90 <vfprintf+0x7c>
     a88:	b7 01       	movw	r22, r14
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	0f d3       	rcall	.+1566   	; 0x10ac <fputc>
     a8e:	e8 cf       	rjmp	.-48     	; 0xa60 <vfprintf+0x4c>
     a90:	51 2c       	mov	r5, r1
     a92:	31 2c       	mov	r3, r1
     a94:	20 e0       	ldi	r18, 0x00	; 0
     a96:	20 32       	cpi	r18, 0x20	; 32
     a98:	a0 f4       	brcc	.+40     	; 0xac2 <vfprintf+0xae>
     a9a:	8b 32       	cpi	r24, 0x2B	; 43
     a9c:	69 f0       	breq	.+26     	; 0xab8 <vfprintf+0xa4>
     a9e:	30 f4       	brcc	.+12     	; 0xaac <vfprintf+0x98>
     aa0:	80 32       	cpi	r24, 0x20	; 32
     aa2:	59 f0       	breq	.+22     	; 0xaba <vfprintf+0xa6>
     aa4:	83 32       	cpi	r24, 0x23	; 35
     aa6:	69 f4       	brne	.+26     	; 0xac2 <vfprintf+0xae>
     aa8:	20 61       	ori	r18, 0x10	; 16
     aaa:	2c c0       	rjmp	.+88     	; 0xb04 <vfprintf+0xf0>
     aac:	8d 32       	cpi	r24, 0x2D	; 45
     aae:	39 f0       	breq	.+14     	; 0xabe <vfprintf+0xaa>
     ab0:	80 33       	cpi	r24, 0x30	; 48
     ab2:	39 f4       	brne	.+14     	; 0xac2 <vfprintf+0xae>
     ab4:	21 60       	ori	r18, 0x01	; 1
     ab6:	26 c0       	rjmp	.+76     	; 0xb04 <vfprintf+0xf0>
     ab8:	22 60       	ori	r18, 0x02	; 2
     aba:	24 60       	ori	r18, 0x04	; 4
     abc:	23 c0       	rjmp	.+70     	; 0xb04 <vfprintf+0xf0>
     abe:	28 60       	ori	r18, 0x08	; 8
     ac0:	21 c0       	rjmp	.+66     	; 0xb04 <vfprintf+0xf0>
     ac2:	27 fd       	sbrc	r18, 7
     ac4:	27 c0       	rjmp	.+78     	; 0xb14 <vfprintf+0x100>
     ac6:	30 ed       	ldi	r19, 0xD0	; 208
     ac8:	38 0f       	add	r19, r24
     aca:	3a 30       	cpi	r19, 0x0A	; 10
     acc:	78 f4       	brcc	.+30     	; 0xaec <vfprintf+0xd8>
     ace:	26 ff       	sbrs	r18, 6
     ad0:	06 c0       	rjmp	.+12     	; 0xade <vfprintf+0xca>
     ad2:	fa e0       	ldi	r31, 0x0A	; 10
     ad4:	5f 9e       	mul	r5, r31
     ad6:	30 0d       	add	r19, r0
     ad8:	11 24       	eor	r1, r1
     ada:	53 2e       	mov	r5, r19
     adc:	13 c0       	rjmp	.+38     	; 0xb04 <vfprintf+0xf0>
     ade:	8a e0       	ldi	r24, 0x0A	; 10
     ae0:	38 9e       	mul	r3, r24
     ae2:	30 0d       	add	r19, r0
     ae4:	11 24       	eor	r1, r1
     ae6:	33 2e       	mov	r3, r19
     ae8:	20 62       	ori	r18, 0x20	; 32
     aea:	0c c0       	rjmp	.+24     	; 0xb04 <vfprintf+0xf0>
     aec:	8e 32       	cpi	r24, 0x2E	; 46
     aee:	21 f4       	brne	.+8      	; 0xaf8 <vfprintf+0xe4>
     af0:	26 fd       	sbrc	r18, 6
     af2:	5f c1       	rjmp	.+702    	; 0xdb2 <vfprintf+0x39e>
     af4:	20 64       	ori	r18, 0x40	; 64
     af6:	06 c0       	rjmp	.+12     	; 0xb04 <vfprintf+0xf0>
     af8:	8c 36       	cpi	r24, 0x6C	; 108
     afa:	11 f4       	brne	.+4      	; 0xb00 <vfprintf+0xec>
     afc:	20 68       	ori	r18, 0x80	; 128
     afe:	02 c0       	rjmp	.+4      	; 0xb04 <vfprintf+0xf0>
     b00:	88 36       	cpi	r24, 0x68	; 104
     b02:	41 f4       	brne	.+16     	; 0xb14 <vfprintf+0x100>
     b04:	f6 01       	movw	r30, r12
     b06:	93 fd       	sbrc	r25, 3
     b08:	85 91       	lpm	r24, Z+
     b0a:	93 ff       	sbrs	r25, 3
     b0c:	81 91       	ld	r24, Z+
     b0e:	6f 01       	movw	r12, r30
     b10:	81 11       	cpse	r24, r1
     b12:	c1 cf       	rjmp	.-126    	; 0xa96 <vfprintf+0x82>
     b14:	98 2f       	mov	r25, r24
     b16:	9f 7d       	andi	r25, 0xDF	; 223
     b18:	95 54       	subi	r25, 0x45	; 69
     b1a:	93 30       	cpi	r25, 0x03	; 3
     b1c:	28 f4       	brcc	.+10     	; 0xb28 <vfprintf+0x114>
     b1e:	0c 5f       	subi	r16, 0xFC	; 252
     b20:	1f 4f       	sbci	r17, 0xFF	; 255
     b22:	ff e3       	ldi	r31, 0x3F	; 63
     b24:	f9 83       	std	Y+1, r31	; 0x01
     b26:	0d c0       	rjmp	.+26     	; 0xb42 <vfprintf+0x12e>
     b28:	83 36       	cpi	r24, 0x63	; 99
     b2a:	31 f0       	breq	.+12     	; 0xb38 <vfprintf+0x124>
     b2c:	83 37       	cpi	r24, 0x73	; 115
     b2e:	71 f0       	breq	.+28     	; 0xb4c <vfprintf+0x138>
     b30:	83 35       	cpi	r24, 0x53	; 83
     b32:	09 f0       	breq	.+2      	; 0xb36 <vfprintf+0x122>
     b34:	57 c0       	rjmp	.+174    	; 0xbe4 <vfprintf+0x1d0>
     b36:	21 c0       	rjmp	.+66     	; 0xb7a <vfprintf+0x166>
     b38:	f8 01       	movw	r30, r16
     b3a:	80 81       	ld	r24, Z
     b3c:	89 83       	std	Y+1, r24	; 0x01
     b3e:	0e 5f       	subi	r16, 0xFE	; 254
     b40:	1f 4f       	sbci	r17, 0xFF	; 255
     b42:	44 24       	eor	r4, r4
     b44:	43 94       	inc	r4
     b46:	51 2c       	mov	r5, r1
     b48:	54 01       	movw	r10, r8
     b4a:	14 c0       	rjmp	.+40     	; 0xb74 <vfprintf+0x160>
     b4c:	38 01       	movw	r6, r16
     b4e:	f2 e0       	ldi	r31, 0x02	; 2
     b50:	6f 0e       	add	r6, r31
     b52:	71 1c       	adc	r7, r1
     b54:	f8 01       	movw	r30, r16
     b56:	a0 80       	ld	r10, Z
     b58:	b1 80       	ldd	r11, Z+1	; 0x01
     b5a:	26 ff       	sbrs	r18, 6
     b5c:	03 c0       	rjmp	.+6      	; 0xb64 <vfprintf+0x150>
     b5e:	65 2d       	mov	r22, r5
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	02 c0       	rjmp	.+4      	; 0xb68 <vfprintf+0x154>
     b64:	6f ef       	ldi	r22, 0xFF	; 255
     b66:	7f ef       	ldi	r23, 0xFF	; 255
     b68:	c5 01       	movw	r24, r10
     b6a:	2c 87       	std	Y+12, r18	; 0x0c
     b6c:	94 d2       	rcall	.+1320   	; 0x1096 <strnlen>
     b6e:	2c 01       	movw	r4, r24
     b70:	83 01       	movw	r16, r6
     b72:	2c 85       	ldd	r18, Y+12	; 0x0c
     b74:	2f 77       	andi	r18, 0x7F	; 127
     b76:	22 2e       	mov	r2, r18
     b78:	16 c0       	rjmp	.+44     	; 0xba6 <vfprintf+0x192>
     b7a:	38 01       	movw	r6, r16
     b7c:	f2 e0       	ldi	r31, 0x02	; 2
     b7e:	6f 0e       	add	r6, r31
     b80:	71 1c       	adc	r7, r1
     b82:	f8 01       	movw	r30, r16
     b84:	a0 80       	ld	r10, Z
     b86:	b1 80       	ldd	r11, Z+1	; 0x01
     b88:	26 ff       	sbrs	r18, 6
     b8a:	03 c0       	rjmp	.+6      	; 0xb92 <vfprintf+0x17e>
     b8c:	65 2d       	mov	r22, r5
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	02 c0       	rjmp	.+4      	; 0xb96 <vfprintf+0x182>
     b92:	6f ef       	ldi	r22, 0xFF	; 255
     b94:	7f ef       	ldi	r23, 0xFF	; 255
     b96:	c5 01       	movw	r24, r10
     b98:	2c 87       	std	Y+12, r18	; 0x0c
     b9a:	6b d2       	rcall	.+1238   	; 0x1072 <strnlen_P>
     b9c:	2c 01       	movw	r4, r24
     b9e:	2c 85       	ldd	r18, Y+12	; 0x0c
     ba0:	20 68       	ori	r18, 0x80	; 128
     ba2:	22 2e       	mov	r2, r18
     ba4:	83 01       	movw	r16, r6
     ba6:	23 fc       	sbrc	r2, 3
     ba8:	19 c0       	rjmp	.+50     	; 0xbdc <vfprintf+0x1c8>
     baa:	83 2d       	mov	r24, r3
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	48 16       	cp	r4, r24
     bb0:	59 06       	cpc	r5, r25
     bb2:	a0 f4       	brcc	.+40     	; 0xbdc <vfprintf+0x1c8>
     bb4:	b7 01       	movw	r22, r14
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	78 d2       	rcall	.+1264   	; 0x10ac <fputc>
     bbc:	3a 94       	dec	r3
     bbe:	f5 cf       	rjmp	.-22     	; 0xbaa <vfprintf+0x196>
     bc0:	f5 01       	movw	r30, r10
     bc2:	27 fc       	sbrc	r2, 7
     bc4:	85 91       	lpm	r24, Z+
     bc6:	27 fe       	sbrs	r2, 7
     bc8:	81 91       	ld	r24, Z+
     bca:	5f 01       	movw	r10, r30
     bcc:	b7 01       	movw	r22, r14
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	6d d2       	rcall	.+1242   	; 0x10ac <fputc>
     bd2:	31 10       	cpse	r3, r1
     bd4:	3a 94       	dec	r3
     bd6:	f1 e0       	ldi	r31, 0x01	; 1
     bd8:	4f 1a       	sub	r4, r31
     bda:	51 08       	sbc	r5, r1
     bdc:	41 14       	cp	r4, r1
     bde:	51 04       	cpc	r5, r1
     be0:	79 f7       	brne	.-34     	; 0xbc0 <vfprintf+0x1ac>
     be2:	de c0       	rjmp	.+444    	; 0xda0 <vfprintf+0x38c>
     be4:	84 36       	cpi	r24, 0x64	; 100
     be6:	11 f0       	breq	.+4      	; 0xbec <vfprintf+0x1d8>
     be8:	89 36       	cpi	r24, 0x69	; 105
     bea:	31 f5       	brne	.+76     	; 0xc38 <vfprintf+0x224>
     bec:	f8 01       	movw	r30, r16
     bee:	27 ff       	sbrs	r18, 7
     bf0:	07 c0       	rjmp	.+14     	; 0xc00 <vfprintf+0x1ec>
     bf2:	60 81       	ld	r22, Z
     bf4:	71 81       	ldd	r23, Z+1	; 0x01
     bf6:	82 81       	ldd	r24, Z+2	; 0x02
     bf8:	93 81       	ldd	r25, Z+3	; 0x03
     bfa:	0c 5f       	subi	r16, 0xFC	; 252
     bfc:	1f 4f       	sbci	r17, 0xFF	; 255
     bfe:	08 c0       	rjmp	.+16     	; 0xc10 <vfprintf+0x1fc>
     c00:	60 81       	ld	r22, Z
     c02:	71 81       	ldd	r23, Z+1	; 0x01
     c04:	88 27       	eor	r24, r24
     c06:	77 fd       	sbrc	r23, 7
     c08:	80 95       	com	r24
     c0a:	98 2f       	mov	r25, r24
     c0c:	0e 5f       	subi	r16, 0xFE	; 254
     c0e:	1f 4f       	sbci	r17, 0xFF	; 255
     c10:	2f 76       	andi	r18, 0x6F	; 111
     c12:	b2 2e       	mov	r11, r18
     c14:	97 ff       	sbrs	r25, 7
     c16:	09 c0       	rjmp	.+18     	; 0xc2a <vfprintf+0x216>
     c18:	90 95       	com	r25
     c1a:	80 95       	com	r24
     c1c:	70 95       	com	r23
     c1e:	61 95       	neg	r22
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	8f 4f       	sbci	r24, 0xFF	; 255
     c24:	9f 4f       	sbci	r25, 0xFF	; 255
     c26:	20 68       	ori	r18, 0x80	; 128
     c28:	b2 2e       	mov	r11, r18
     c2a:	2a e0       	ldi	r18, 0x0A	; 10
     c2c:	30 e0       	ldi	r19, 0x00	; 0
     c2e:	a4 01       	movw	r20, r8
     c30:	6f d2       	rcall	.+1246   	; 0x1110 <__ultoa_invert>
     c32:	a8 2e       	mov	r10, r24
     c34:	a8 18       	sub	r10, r8
     c36:	43 c0       	rjmp	.+134    	; 0xcbe <vfprintf+0x2aa>
     c38:	85 37       	cpi	r24, 0x75	; 117
     c3a:	29 f4       	brne	.+10     	; 0xc46 <vfprintf+0x232>
     c3c:	2f 7e       	andi	r18, 0xEF	; 239
     c3e:	b2 2e       	mov	r11, r18
     c40:	2a e0       	ldi	r18, 0x0A	; 10
     c42:	30 e0       	ldi	r19, 0x00	; 0
     c44:	25 c0       	rjmp	.+74     	; 0xc90 <vfprintf+0x27c>
     c46:	f2 2f       	mov	r31, r18
     c48:	f9 7f       	andi	r31, 0xF9	; 249
     c4a:	bf 2e       	mov	r11, r31
     c4c:	8f 36       	cpi	r24, 0x6F	; 111
     c4e:	c1 f0       	breq	.+48     	; 0xc80 <vfprintf+0x26c>
     c50:	18 f4       	brcc	.+6      	; 0xc58 <vfprintf+0x244>
     c52:	88 35       	cpi	r24, 0x58	; 88
     c54:	79 f0       	breq	.+30     	; 0xc74 <vfprintf+0x260>
     c56:	ad c0       	rjmp	.+346    	; 0xdb2 <vfprintf+0x39e>
     c58:	80 37       	cpi	r24, 0x70	; 112
     c5a:	19 f0       	breq	.+6      	; 0xc62 <vfprintf+0x24e>
     c5c:	88 37       	cpi	r24, 0x78	; 120
     c5e:	21 f0       	breq	.+8      	; 0xc68 <vfprintf+0x254>
     c60:	a8 c0       	rjmp	.+336    	; 0xdb2 <vfprintf+0x39e>
     c62:	2f 2f       	mov	r18, r31
     c64:	20 61       	ori	r18, 0x10	; 16
     c66:	b2 2e       	mov	r11, r18
     c68:	b4 fe       	sbrs	r11, 4
     c6a:	0d c0       	rjmp	.+26     	; 0xc86 <vfprintf+0x272>
     c6c:	8b 2d       	mov	r24, r11
     c6e:	84 60       	ori	r24, 0x04	; 4
     c70:	b8 2e       	mov	r11, r24
     c72:	09 c0       	rjmp	.+18     	; 0xc86 <vfprintf+0x272>
     c74:	24 ff       	sbrs	r18, 4
     c76:	0a c0       	rjmp	.+20     	; 0xc8c <vfprintf+0x278>
     c78:	9f 2f       	mov	r25, r31
     c7a:	96 60       	ori	r25, 0x06	; 6
     c7c:	b9 2e       	mov	r11, r25
     c7e:	06 c0       	rjmp	.+12     	; 0xc8c <vfprintf+0x278>
     c80:	28 e0       	ldi	r18, 0x08	; 8
     c82:	30 e0       	ldi	r19, 0x00	; 0
     c84:	05 c0       	rjmp	.+10     	; 0xc90 <vfprintf+0x27c>
     c86:	20 e1       	ldi	r18, 0x10	; 16
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	02 c0       	rjmp	.+4      	; 0xc90 <vfprintf+0x27c>
     c8c:	20 e1       	ldi	r18, 0x10	; 16
     c8e:	32 e0       	ldi	r19, 0x02	; 2
     c90:	f8 01       	movw	r30, r16
     c92:	b7 fe       	sbrs	r11, 7
     c94:	07 c0       	rjmp	.+14     	; 0xca4 <vfprintf+0x290>
     c96:	60 81       	ld	r22, Z
     c98:	71 81       	ldd	r23, Z+1	; 0x01
     c9a:	82 81       	ldd	r24, Z+2	; 0x02
     c9c:	93 81       	ldd	r25, Z+3	; 0x03
     c9e:	0c 5f       	subi	r16, 0xFC	; 252
     ca0:	1f 4f       	sbci	r17, 0xFF	; 255
     ca2:	06 c0       	rjmp	.+12     	; 0xcb0 <vfprintf+0x29c>
     ca4:	60 81       	ld	r22, Z
     ca6:	71 81       	ldd	r23, Z+1	; 0x01
     ca8:	80 e0       	ldi	r24, 0x00	; 0
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	0e 5f       	subi	r16, 0xFE	; 254
     cae:	1f 4f       	sbci	r17, 0xFF	; 255
     cb0:	a4 01       	movw	r20, r8
     cb2:	2e d2       	rcall	.+1116   	; 0x1110 <__ultoa_invert>
     cb4:	a8 2e       	mov	r10, r24
     cb6:	a8 18       	sub	r10, r8
     cb8:	fb 2d       	mov	r31, r11
     cba:	ff 77       	andi	r31, 0x7F	; 127
     cbc:	bf 2e       	mov	r11, r31
     cbe:	b6 fe       	sbrs	r11, 6
     cc0:	0b c0       	rjmp	.+22     	; 0xcd8 <vfprintf+0x2c4>
     cc2:	2b 2d       	mov	r18, r11
     cc4:	2e 7f       	andi	r18, 0xFE	; 254
     cc6:	a5 14       	cp	r10, r5
     cc8:	50 f4       	brcc	.+20     	; 0xcde <vfprintf+0x2ca>
     cca:	b4 fe       	sbrs	r11, 4
     ccc:	0a c0       	rjmp	.+20     	; 0xce2 <vfprintf+0x2ce>
     cce:	b2 fc       	sbrc	r11, 2
     cd0:	08 c0       	rjmp	.+16     	; 0xce2 <vfprintf+0x2ce>
     cd2:	2b 2d       	mov	r18, r11
     cd4:	2e 7e       	andi	r18, 0xEE	; 238
     cd6:	05 c0       	rjmp	.+10     	; 0xce2 <vfprintf+0x2ce>
     cd8:	7a 2c       	mov	r7, r10
     cda:	2b 2d       	mov	r18, r11
     cdc:	03 c0       	rjmp	.+6      	; 0xce4 <vfprintf+0x2d0>
     cde:	7a 2c       	mov	r7, r10
     ce0:	01 c0       	rjmp	.+2      	; 0xce4 <vfprintf+0x2d0>
     ce2:	75 2c       	mov	r7, r5
     ce4:	24 ff       	sbrs	r18, 4
     ce6:	0d c0       	rjmp	.+26     	; 0xd02 <vfprintf+0x2ee>
     ce8:	fe 01       	movw	r30, r28
     cea:	ea 0d       	add	r30, r10
     cec:	f1 1d       	adc	r31, r1
     cee:	80 81       	ld	r24, Z
     cf0:	80 33       	cpi	r24, 0x30	; 48
     cf2:	11 f4       	brne	.+4      	; 0xcf8 <vfprintf+0x2e4>
     cf4:	29 7e       	andi	r18, 0xE9	; 233
     cf6:	09 c0       	rjmp	.+18     	; 0xd0a <vfprintf+0x2f6>
     cf8:	22 ff       	sbrs	r18, 2
     cfa:	06 c0       	rjmp	.+12     	; 0xd08 <vfprintf+0x2f4>
     cfc:	73 94       	inc	r7
     cfe:	73 94       	inc	r7
     d00:	04 c0       	rjmp	.+8      	; 0xd0a <vfprintf+0x2f6>
     d02:	82 2f       	mov	r24, r18
     d04:	86 78       	andi	r24, 0x86	; 134
     d06:	09 f0       	breq	.+2      	; 0xd0a <vfprintf+0x2f6>
     d08:	73 94       	inc	r7
     d0a:	23 fd       	sbrc	r18, 3
     d0c:	12 c0       	rjmp	.+36     	; 0xd32 <vfprintf+0x31e>
     d0e:	20 ff       	sbrs	r18, 0
     d10:	06 c0       	rjmp	.+12     	; 0xd1e <vfprintf+0x30a>
     d12:	5a 2c       	mov	r5, r10
     d14:	73 14       	cp	r7, r3
     d16:	18 f4       	brcc	.+6      	; 0xd1e <vfprintf+0x30a>
     d18:	53 0c       	add	r5, r3
     d1a:	57 18       	sub	r5, r7
     d1c:	73 2c       	mov	r7, r3
     d1e:	73 14       	cp	r7, r3
     d20:	60 f4       	brcc	.+24     	; 0xd3a <vfprintf+0x326>
     d22:	b7 01       	movw	r22, r14
     d24:	80 e2       	ldi	r24, 0x20	; 32
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	2c 87       	std	Y+12, r18	; 0x0c
     d2a:	c0 d1       	rcall	.+896    	; 0x10ac <fputc>
     d2c:	73 94       	inc	r7
     d2e:	2c 85       	ldd	r18, Y+12	; 0x0c
     d30:	f6 cf       	rjmp	.-20     	; 0xd1e <vfprintf+0x30a>
     d32:	73 14       	cp	r7, r3
     d34:	10 f4       	brcc	.+4      	; 0xd3a <vfprintf+0x326>
     d36:	37 18       	sub	r3, r7
     d38:	01 c0       	rjmp	.+2      	; 0xd3c <vfprintf+0x328>
     d3a:	31 2c       	mov	r3, r1
     d3c:	24 ff       	sbrs	r18, 4
     d3e:	11 c0       	rjmp	.+34     	; 0xd62 <vfprintf+0x34e>
     d40:	b7 01       	movw	r22, r14
     d42:	80 e3       	ldi	r24, 0x30	; 48
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	2c 87       	std	Y+12, r18	; 0x0c
     d48:	b1 d1       	rcall	.+866    	; 0x10ac <fputc>
     d4a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d4c:	22 ff       	sbrs	r18, 2
     d4e:	16 c0       	rjmp	.+44     	; 0xd7c <vfprintf+0x368>
     d50:	21 ff       	sbrs	r18, 1
     d52:	03 c0       	rjmp	.+6      	; 0xd5a <vfprintf+0x346>
     d54:	88 e5       	ldi	r24, 0x58	; 88
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <vfprintf+0x34a>
     d5a:	88 e7       	ldi	r24, 0x78	; 120
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	b7 01       	movw	r22, r14
     d60:	0c c0       	rjmp	.+24     	; 0xd7a <vfprintf+0x366>
     d62:	82 2f       	mov	r24, r18
     d64:	86 78       	andi	r24, 0x86	; 134
     d66:	51 f0       	breq	.+20     	; 0xd7c <vfprintf+0x368>
     d68:	21 fd       	sbrc	r18, 1
     d6a:	02 c0       	rjmp	.+4      	; 0xd70 <vfprintf+0x35c>
     d6c:	80 e2       	ldi	r24, 0x20	; 32
     d6e:	01 c0       	rjmp	.+2      	; 0xd72 <vfprintf+0x35e>
     d70:	8b e2       	ldi	r24, 0x2B	; 43
     d72:	27 fd       	sbrc	r18, 7
     d74:	8d e2       	ldi	r24, 0x2D	; 45
     d76:	b7 01       	movw	r22, r14
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	98 d1       	rcall	.+816    	; 0x10ac <fputc>
     d7c:	a5 14       	cp	r10, r5
     d7e:	30 f4       	brcc	.+12     	; 0xd8c <vfprintf+0x378>
     d80:	b7 01       	movw	r22, r14
     d82:	80 e3       	ldi	r24, 0x30	; 48
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	92 d1       	rcall	.+804    	; 0x10ac <fputc>
     d88:	5a 94       	dec	r5
     d8a:	f8 cf       	rjmp	.-16     	; 0xd7c <vfprintf+0x368>
     d8c:	aa 94       	dec	r10
     d8e:	f4 01       	movw	r30, r8
     d90:	ea 0d       	add	r30, r10
     d92:	f1 1d       	adc	r31, r1
     d94:	80 81       	ld	r24, Z
     d96:	b7 01       	movw	r22, r14
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	88 d1       	rcall	.+784    	; 0x10ac <fputc>
     d9c:	a1 10       	cpse	r10, r1
     d9e:	f6 cf       	rjmp	.-20     	; 0xd8c <vfprintf+0x378>
     da0:	33 20       	and	r3, r3
     da2:	09 f4       	brne	.+2      	; 0xda6 <vfprintf+0x392>
     da4:	5d ce       	rjmp	.-838    	; 0xa60 <vfprintf+0x4c>
     da6:	b7 01       	movw	r22, r14
     da8:	80 e2       	ldi	r24, 0x20	; 32
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	7f d1       	rcall	.+766    	; 0x10ac <fputc>
     dae:	3a 94       	dec	r3
     db0:	f7 cf       	rjmp	.-18     	; 0xda0 <vfprintf+0x38c>
     db2:	f7 01       	movw	r30, r14
     db4:	86 81       	ldd	r24, Z+6	; 0x06
     db6:	97 81       	ldd	r25, Z+7	; 0x07
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <vfprintf+0x3aa>
     dba:	8f ef       	ldi	r24, 0xFF	; 255
     dbc:	9f ef       	ldi	r25, 0xFF	; 255
     dbe:	2c 96       	adiw	r28, 0x0c	; 12
     dc0:	0f b6       	in	r0, 0x3f	; 63
     dc2:	f8 94       	cli
     dc4:	de bf       	out	0x3e, r29	; 62
     dc6:	0f be       	out	0x3f, r0	; 63
     dc8:	cd bf       	out	0x3d, r28	; 61
     dca:	df 91       	pop	r29
     dcc:	cf 91       	pop	r28
     dce:	1f 91       	pop	r17
     dd0:	0f 91       	pop	r16
     dd2:	ff 90       	pop	r15
     dd4:	ef 90       	pop	r14
     dd6:	df 90       	pop	r13
     dd8:	cf 90       	pop	r12
     dda:	bf 90       	pop	r11
     ddc:	af 90       	pop	r10
     dde:	9f 90       	pop	r9
     de0:	8f 90       	pop	r8
     de2:	7f 90       	pop	r7
     de4:	6f 90       	pop	r6
     de6:	5f 90       	pop	r5
     de8:	4f 90       	pop	r4
     dea:	3f 90       	pop	r3
     dec:	2f 90       	pop	r2
     dee:	08 95       	ret

00000df0 <calloc>:
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	cf 93       	push	r28
     df6:	df 93       	push	r29
     df8:	86 9f       	mul	r24, r22
     dfa:	80 01       	movw	r16, r0
     dfc:	87 9f       	mul	r24, r23
     dfe:	10 0d       	add	r17, r0
     e00:	96 9f       	mul	r25, r22
     e02:	10 0d       	add	r17, r0
     e04:	11 24       	eor	r1, r1
     e06:	c8 01       	movw	r24, r16
     e08:	0d d0       	rcall	.+26     	; 0xe24 <malloc>
     e0a:	ec 01       	movw	r28, r24
     e0c:	00 97       	sbiw	r24, 0x00	; 0
     e0e:	21 f0       	breq	.+8      	; 0xe18 <calloc+0x28>
     e10:	a8 01       	movw	r20, r16
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	38 d1       	rcall	.+624    	; 0x1088 <memset>
     e18:	ce 01       	movw	r24, r28
     e1a:	df 91       	pop	r29
     e1c:	cf 91       	pop	r28
     e1e:	1f 91       	pop	r17
     e20:	0f 91       	pop	r16
     e22:	08 95       	ret

00000e24 <malloc>:
     e24:	cf 93       	push	r28
     e26:	df 93       	push	r29
     e28:	82 30       	cpi	r24, 0x02	; 2
     e2a:	91 05       	cpc	r25, r1
     e2c:	10 f4       	brcc	.+4      	; 0xe32 <malloc+0xe>
     e2e:	82 e0       	ldi	r24, 0x02	; 2
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	e0 91 d3 02 	lds	r30, 0x02D3
     e36:	f0 91 d4 02 	lds	r31, 0x02D4
     e3a:	20 e0       	ldi	r18, 0x00	; 0
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	a0 e0       	ldi	r26, 0x00	; 0
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	30 97       	sbiw	r30, 0x00	; 0
     e44:	39 f1       	breq	.+78     	; 0xe94 <malloc+0x70>
     e46:	40 81       	ld	r20, Z
     e48:	51 81       	ldd	r21, Z+1	; 0x01
     e4a:	48 17       	cp	r20, r24
     e4c:	59 07       	cpc	r21, r25
     e4e:	b8 f0       	brcs	.+46     	; 0xe7e <malloc+0x5a>
     e50:	48 17       	cp	r20, r24
     e52:	59 07       	cpc	r21, r25
     e54:	71 f4       	brne	.+28     	; 0xe72 <malloc+0x4e>
     e56:	82 81       	ldd	r24, Z+2	; 0x02
     e58:	93 81       	ldd	r25, Z+3	; 0x03
     e5a:	10 97       	sbiw	r26, 0x00	; 0
     e5c:	29 f0       	breq	.+10     	; 0xe68 <malloc+0x44>
     e5e:	13 96       	adiw	r26, 0x03	; 3
     e60:	9c 93       	st	X, r25
     e62:	8e 93       	st	-X, r24
     e64:	12 97       	sbiw	r26, 0x02	; 2
     e66:	2c c0       	rjmp	.+88     	; 0xec0 <malloc+0x9c>
     e68:	90 93 d4 02 	sts	0x02D4, r25
     e6c:	80 93 d3 02 	sts	0x02D3, r24
     e70:	27 c0       	rjmp	.+78     	; 0xec0 <malloc+0x9c>
     e72:	21 15       	cp	r18, r1
     e74:	31 05       	cpc	r19, r1
     e76:	31 f0       	breq	.+12     	; 0xe84 <malloc+0x60>
     e78:	42 17       	cp	r20, r18
     e7a:	53 07       	cpc	r21, r19
     e7c:	18 f0       	brcs	.+6      	; 0xe84 <malloc+0x60>
     e7e:	a9 01       	movw	r20, r18
     e80:	db 01       	movw	r26, r22
     e82:	01 c0       	rjmp	.+2      	; 0xe86 <malloc+0x62>
     e84:	ef 01       	movw	r28, r30
     e86:	9a 01       	movw	r18, r20
     e88:	bd 01       	movw	r22, r26
     e8a:	df 01       	movw	r26, r30
     e8c:	02 80       	ldd	r0, Z+2	; 0x02
     e8e:	f3 81       	ldd	r31, Z+3	; 0x03
     e90:	e0 2d       	mov	r30, r0
     e92:	d7 cf       	rjmp	.-82     	; 0xe42 <malloc+0x1e>
     e94:	21 15       	cp	r18, r1
     e96:	31 05       	cpc	r19, r1
     e98:	f9 f0       	breq	.+62     	; 0xed8 <malloc+0xb4>
     e9a:	28 1b       	sub	r18, r24
     e9c:	39 0b       	sbc	r19, r25
     e9e:	24 30       	cpi	r18, 0x04	; 4
     ea0:	31 05       	cpc	r19, r1
     ea2:	80 f4       	brcc	.+32     	; 0xec4 <malloc+0xa0>
     ea4:	8a 81       	ldd	r24, Y+2	; 0x02
     ea6:	9b 81       	ldd	r25, Y+3	; 0x03
     ea8:	61 15       	cp	r22, r1
     eaa:	71 05       	cpc	r23, r1
     eac:	21 f0       	breq	.+8      	; 0xeb6 <malloc+0x92>
     eae:	fb 01       	movw	r30, r22
     eb0:	93 83       	std	Z+3, r25	; 0x03
     eb2:	82 83       	std	Z+2, r24	; 0x02
     eb4:	04 c0       	rjmp	.+8      	; 0xebe <malloc+0x9a>
     eb6:	90 93 d4 02 	sts	0x02D4, r25
     eba:	80 93 d3 02 	sts	0x02D3, r24
     ebe:	fe 01       	movw	r30, r28
     ec0:	32 96       	adiw	r30, 0x02	; 2
     ec2:	44 c0       	rjmp	.+136    	; 0xf4c <malloc+0x128>
     ec4:	fe 01       	movw	r30, r28
     ec6:	e2 0f       	add	r30, r18
     ec8:	f3 1f       	adc	r31, r19
     eca:	81 93       	st	Z+, r24
     ecc:	91 93       	st	Z+, r25
     ece:	22 50       	subi	r18, 0x02	; 2
     ed0:	31 09       	sbc	r19, r1
     ed2:	39 83       	std	Y+1, r19	; 0x01
     ed4:	28 83       	st	Y, r18
     ed6:	3a c0       	rjmp	.+116    	; 0xf4c <malloc+0x128>
     ed8:	20 91 d1 02 	lds	r18, 0x02D1
     edc:	30 91 d2 02 	lds	r19, 0x02D2
     ee0:	23 2b       	or	r18, r19
     ee2:	41 f4       	brne	.+16     	; 0xef4 <malloc+0xd0>
     ee4:	20 91 02 02 	lds	r18, 0x0202
     ee8:	30 91 03 02 	lds	r19, 0x0203
     eec:	30 93 d2 02 	sts	0x02D2, r19
     ef0:	20 93 d1 02 	sts	0x02D1, r18
     ef4:	20 91 00 02 	lds	r18, 0x0200
     ef8:	30 91 01 02 	lds	r19, 0x0201
     efc:	21 15       	cp	r18, r1
     efe:	31 05       	cpc	r19, r1
     f00:	41 f4       	brne	.+16     	; 0xf12 <malloc+0xee>
     f02:	2d b7       	in	r18, 0x3d	; 61
     f04:	3e b7       	in	r19, 0x3e	; 62
     f06:	40 91 04 02 	lds	r20, 0x0204
     f0a:	50 91 05 02 	lds	r21, 0x0205
     f0e:	24 1b       	sub	r18, r20
     f10:	35 0b       	sbc	r19, r21
     f12:	e0 91 d1 02 	lds	r30, 0x02D1
     f16:	f0 91 d2 02 	lds	r31, 0x02D2
     f1a:	e2 17       	cp	r30, r18
     f1c:	f3 07       	cpc	r31, r19
     f1e:	a0 f4       	brcc	.+40     	; 0xf48 <malloc+0x124>
     f20:	2e 1b       	sub	r18, r30
     f22:	3f 0b       	sbc	r19, r31
     f24:	28 17       	cp	r18, r24
     f26:	39 07       	cpc	r19, r25
     f28:	78 f0       	brcs	.+30     	; 0xf48 <malloc+0x124>
     f2a:	ac 01       	movw	r20, r24
     f2c:	4e 5f       	subi	r20, 0xFE	; 254
     f2e:	5f 4f       	sbci	r21, 0xFF	; 255
     f30:	24 17       	cp	r18, r20
     f32:	35 07       	cpc	r19, r21
     f34:	48 f0       	brcs	.+18     	; 0xf48 <malloc+0x124>
     f36:	4e 0f       	add	r20, r30
     f38:	5f 1f       	adc	r21, r31
     f3a:	50 93 d2 02 	sts	0x02D2, r21
     f3e:	40 93 d1 02 	sts	0x02D1, r20
     f42:	81 93       	st	Z+, r24
     f44:	91 93       	st	Z+, r25
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <malloc+0x128>
     f48:	e0 e0       	ldi	r30, 0x00	; 0
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	cf 01       	movw	r24, r30
     f4e:	df 91       	pop	r29
     f50:	cf 91       	pop	r28
     f52:	08 95       	ret

00000f54 <free>:
     f54:	cf 93       	push	r28
     f56:	df 93       	push	r29
     f58:	00 97       	sbiw	r24, 0x00	; 0
     f5a:	09 f4       	brne	.+2      	; 0xf5e <free+0xa>
     f5c:	87 c0       	rjmp	.+270    	; 0x106c <free+0x118>
     f5e:	fc 01       	movw	r30, r24
     f60:	32 97       	sbiw	r30, 0x02	; 2
     f62:	13 82       	std	Z+3, r1	; 0x03
     f64:	12 82       	std	Z+2, r1	; 0x02
     f66:	c0 91 d3 02 	lds	r28, 0x02D3
     f6a:	d0 91 d4 02 	lds	r29, 0x02D4
     f6e:	20 97       	sbiw	r28, 0x00	; 0
     f70:	81 f4       	brne	.+32     	; 0xf92 <free+0x3e>
     f72:	20 81       	ld	r18, Z
     f74:	31 81       	ldd	r19, Z+1	; 0x01
     f76:	28 0f       	add	r18, r24
     f78:	39 1f       	adc	r19, r25
     f7a:	80 91 d1 02 	lds	r24, 0x02D1
     f7e:	90 91 d2 02 	lds	r25, 0x02D2
     f82:	82 17       	cp	r24, r18
     f84:	93 07       	cpc	r25, r19
     f86:	79 f5       	brne	.+94     	; 0xfe6 <free+0x92>
     f88:	f0 93 d2 02 	sts	0x02D2, r31
     f8c:	e0 93 d1 02 	sts	0x02D1, r30
     f90:	6d c0       	rjmp	.+218    	; 0x106c <free+0x118>
     f92:	de 01       	movw	r26, r28
     f94:	20 e0       	ldi	r18, 0x00	; 0
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	ae 17       	cp	r26, r30
     f9a:	bf 07       	cpc	r27, r31
     f9c:	50 f4       	brcc	.+20     	; 0xfb2 <free+0x5e>
     f9e:	12 96       	adiw	r26, 0x02	; 2
     fa0:	4d 91       	ld	r20, X+
     fa2:	5c 91       	ld	r21, X
     fa4:	13 97       	sbiw	r26, 0x03	; 3
     fa6:	9d 01       	movw	r18, r26
     fa8:	41 15       	cp	r20, r1
     faa:	51 05       	cpc	r21, r1
     fac:	09 f1       	breq	.+66     	; 0xff0 <free+0x9c>
     fae:	da 01       	movw	r26, r20
     fb0:	f3 cf       	rjmp	.-26     	; 0xf98 <free+0x44>
     fb2:	b3 83       	std	Z+3, r27	; 0x03
     fb4:	a2 83       	std	Z+2, r26	; 0x02
     fb6:	40 81       	ld	r20, Z
     fb8:	51 81       	ldd	r21, Z+1	; 0x01
     fba:	84 0f       	add	r24, r20
     fbc:	95 1f       	adc	r25, r21
     fbe:	8a 17       	cp	r24, r26
     fc0:	9b 07       	cpc	r25, r27
     fc2:	71 f4       	brne	.+28     	; 0xfe0 <free+0x8c>
     fc4:	8d 91       	ld	r24, X+
     fc6:	9c 91       	ld	r25, X
     fc8:	11 97       	sbiw	r26, 0x01	; 1
     fca:	84 0f       	add	r24, r20
     fcc:	95 1f       	adc	r25, r21
     fce:	02 96       	adiw	r24, 0x02	; 2
     fd0:	91 83       	std	Z+1, r25	; 0x01
     fd2:	80 83       	st	Z, r24
     fd4:	12 96       	adiw	r26, 0x02	; 2
     fd6:	8d 91       	ld	r24, X+
     fd8:	9c 91       	ld	r25, X
     fda:	13 97       	sbiw	r26, 0x03	; 3
     fdc:	93 83       	std	Z+3, r25	; 0x03
     fde:	82 83       	std	Z+2, r24	; 0x02
     fe0:	21 15       	cp	r18, r1
     fe2:	31 05       	cpc	r19, r1
     fe4:	29 f4       	brne	.+10     	; 0xff0 <free+0x9c>
     fe6:	f0 93 d4 02 	sts	0x02D4, r31
     fea:	e0 93 d3 02 	sts	0x02D3, r30
     fee:	3e c0       	rjmp	.+124    	; 0x106c <free+0x118>
     ff0:	d9 01       	movw	r26, r18
     ff2:	13 96       	adiw	r26, 0x03	; 3
     ff4:	fc 93       	st	X, r31
     ff6:	ee 93       	st	-X, r30
     ff8:	12 97       	sbiw	r26, 0x02	; 2
     ffa:	4d 91       	ld	r20, X+
     ffc:	5d 91       	ld	r21, X+
     ffe:	a4 0f       	add	r26, r20
    1000:	b5 1f       	adc	r27, r21
    1002:	ea 17       	cp	r30, r26
    1004:	fb 07       	cpc	r31, r27
    1006:	79 f4       	brne	.+30     	; 0x1026 <free+0xd2>
    1008:	80 81       	ld	r24, Z
    100a:	91 81       	ldd	r25, Z+1	; 0x01
    100c:	84 0f       	add	r24, r20
    100e:	95 1f       	adc	r25, r21
    1010:	02 96       	adiw	r24, 0x02	; 2
    1012:	d9 01       	movw	r26, r18
    1014:	11 96       	adiw	r26, 0x01	; 1
    1016:	9c 93       	st	X, r25
    1018:	8e 93       	st	-X, r24
    101a:	82 81       	ldd	r24, Z+2	; 0x02
    101c:	93 81       	ldd	r25, Z+3	; 0x03
    101e:	13 96       	adiw	r26, 0x03	; 3
    1020:	9c 93       	st	X, r25
    1022:	8e 93       	st	-X, r24
    1024:	12 97       	sbiw	r26, 0x02	; 2
    1026:	e0 e0       	ldi	r30, 0x00	; 0
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	8a 81       	ldd	r24, Y+2	; 0x02
    102c:	9b 81       	ldd	r25, Y+3	; 0x03
    102e:	00 97       	sbiw	r24, 0x00	; 0
    1030:	19 f0       	breq	.+6      	; 0x1038 <free+0xe4>
    1032:	fe 01       	movw	r30, r28
    1034:	ec 01       	movw	r28, r24
    1036:	f9 cf       	rjmp	.-14     	; 0x102a <free+0xd6>
    1038:	ce 01       	movw	r24, r28
    103a:	02 96       	adiw	r24, 0x02	; 2
    103c:	28 81       	ld	r18, Y
    103e:	39 81       	ldd	r19, Y+1	; 0x01
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	20 91 d1 02 	lds	r18, 0x02D1
    1048:	30 91 d2 02 	lds	r19, 0x02D2
    104c:	28 17       	cp	r18, r24
    104e:	39 07       	cpc	r19, r25
    1050:	69 f4       	brne	.+26     	; 0x106c <free+0x118>
    1052:	30 97       	sbiw	r30, 0x00	; 0
    1054:	29 f4       	brne	.+10     	; 0x1060 <free+0x10c>
    1056:	10 92 d4 02 	sts	0x02D4, r1
    105a:	10 92 d3 02 	sts	0x02D3, r1
    105e:	02 c0       	rjmp	.+4      	; 0x1064 <free+0x110>
    1060:	13 82       	std	Z+3, r1	; 0x03
    1062:	12 82       	std	Z+2, r1	; 0x02
    1064:	d0 93 d2 02 	sts	0x02D2, r29
    1068:	c0 93 d1 02 	sts	0x02D1, r28
    106c:	df 91       	pop	r29
    106e:	cf 91       	pop	r28
    1070:	08 95       	ret

00001072 <strnlen_P>:
    1072:	fc 01       	movw	r30, r24
    1074:	05 90       	lpm	r0, Z+
    1076:	61 50       	subi	r22, 0x01	; 1
    1078:	70 40       	sbci	r23, 0x00	; 0
    107a:	01 10       	cpse	r0, r1
    107c:	d8 f7       	brcc	.-10     	; 0x1074 <strnlen_P+0x2>
    107e:	80 95       	com	r24
    1080:	90 95       	com	r25
    1082:	8e 0f       	add	r24, r30
    1084:	9f 1f       	adc	r25, r31
    1086:	08 95       	ret

00001088 <memset>:
    1088:	dc 01       	movw	r26, r24
    108a:	01 c0       	rjmp	.+2      	; 0x108e <memset+0x6>
    108c:	6d 93       	st	X+, r22
    108e:	41 50       	subi	r20, 0x01	; 1
    1090:	50 40       	sbci	r21, 0x00	; 0
    1092:	e0 f7       	brcc	.-8      	; 0x108c <memset+0x4>
    1094:	08 95       	ret

00001096 <strnlen>:
    1096:	fc 01       	movw	r30, r24
    1098:	61 50       	subi	r22, 0x01	; 1
    109a:	70 40       	sbci	r23, 0x00	; 0
    109c:	01 90       	ld	r0, Z+
    109e:	01 10       	cpse	r0, r1
    10a0:	d8 f7       	brcc	.-10     	; 0x1098 <strnlen+0x2>
    10a2:	80 95       	com	r24
    10a4:	90 95       	com	r25
    10a6:	8e 0f       	add	r24, r30
    10a8:	9f 1f       	adc	r25, r31
    10aa:	08 95       	ret

000010ac <fputc>:
    10ac:	0f 93       	push	r16
    10ae:	1f 93       	push	r17
    10b0:	cf 93       	push	r28
    10b2:	df 93       	push	r29
    10b4:	18 2f       	mov	r17, r24
    10b6:	09 2f       	mov	r16, r25
    10b8:	eb 01       	movw	r28, r22
    10ba:	8b 81       	ldd	r24, Y+3	; 0x03
    10bc:	81 fd       	sbrc	r24, 1
    10be:	03 c0       	rjmp	.+6      	; 0x10c6 <fputc+0x1a>
    10c0:	8f ef       	ldi	r24, 0xFF	; 255
    10c2:	9f ef       	ldi	r25, 0xFF	; 255
    10c4:	20 c0       	rjmp	.+64     	; 0x1106 <fputc+0x5a>
    10c6:	82 ff       	sbrs	r24, 2
    10c8:	10 c0       	rjmp	.+32     	; 0x10ea <fputc+0x3e>
    10ca:	4e 81       	ldd	r20, Y+6	; 0x06
    10cc:	5f 81       	ldd	r21, Y+7	; 0x07
    10ce:	2c 81       	ldd	r18, Y+4	; 0x04
    10d0:	3d 81       	ldd	r19, Y+5	; 0x05
    10d2:	42 17       	cp	r20, r18
    10d4:	53 07       	cpc	r21, r19
    10d6:	7c f4       	brge	.+30     	; 0x10f6 <fputc+0x4a>
    10d8:	e8 81       	ld	r30, Y
    10da:	f9 81       	ldd	r31, Y+1	; 0x01
    10dc:	9f 01       	movw	r18, r30
    10de:	2f 5f       	subi	r18, 0xFF	; 255
    10e0:	3f 4f       	sbci	r19, 0xFF	; 255
    10e2:	39 83       	std	Y+1, r19	; 0x01
    10e4:	28 83       	st	Y, r18
    10e6:	10 83       	st	Z, r17
    10e8:	06 c0       	rjmp	.+12     	; 0x10f6 <fputc+0x4a>
    10ea:	e8 85       	ldd	r30, Y+8	; 0x08
    10ec:	f9 85       	ldd	r31, Y+9	; 0x09
    10ee:	81 2f       	mov	r24, r17
    10f0:	19 95       	eicall
    10f2:	89 2b       	or	r24, r25
    10f4:	29 f7       	brne	.-54     	; 0x10c0 <fputc+0x14>
    10f6:	2e 81       	ldd	r18, Y+6	; 0x06
    10f8:	3f 81       	ldd	r19, Y+7	; 0x07
    10fa:	2f 5f       	subi	r18, 0xFF	; 255
    10fc:	3f 4f       	sbci	r19, 0xFF	; 255
    10fe:	3f 83       	std	Y+7, r19	; 0x07
    1100:	2e 83       	std	Y+6, r18	; 0x06
    1102:	81 2f       	mov	r24, r17
    1104:	90 2f       	mov	r25, r16
    1106:	df 91       	pop	r29
    1108:	cf 91       	pop	r28
    110a:	1f 91       	pop	r17
    110c:	0f 91       	pop	r16
    110e:	08 95       	ret

00001110 <__ultoa_invert>:
    1110:	fa 01       	movw	r30, r20
    1112:	aa 27       	eor	r26, r26
    1114:	28 30       	cpi	r18, 0x08	; 8
    1116:	51 f1       	breq	.+84     	; 0x116c <__ultoa_invert+0x5c>
    1118:	20 31       	cpi	r18, 0x10	; 16
    111a:	81 f1       	breq	.+96     	; 0x117c <__ultoa_invert+0x6c>
    111c:	e8 94       	clt
    111e:	6f 93       	push	r22
    1120:	6e 7f       	andi	r22, 0xFE	; 254
    1122:	6e 5f       	subi	r22, 0xFE	; 254
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	8f 4f       	sbci	r24, 0xFF	; 255
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	af 4f       	sbci	r26, 0xFF	; 255
    112c:	b1 e0       	ldi	r27, 0x01	; 1
    112e:	3e d0       	rcall	.+124    	; 0x11ac <__ultoa_invert+0x9c>
    1130:	b4 e0       	ldi	r27, 0x04	; 4
    1132:	3c d0       	rcall	.+120    	; 0x11ac <__ultoa_invert+0x9c>
    1134:	67 0f       	add	r22, r23
    1136:	78 1f       	adc	r23, r24
    1138:	89 1f       	adc	r24, r25
    113a:	9a 1f       	adc	r25, r26
    113c:	a1 1d       	adc	r26, r1
    113e:	68 0f       	add	r22, r24
    1140:	79 1f       	adc	r23, r25
    1142:	8a 1f       	adc	r24, r26
    1144:	91 1d       	adc	r25, r1
    1146:	a1 1d       	adc	r26, r1
    1148:	6a 0f       	add	r22, r26
    114a:	71 1d       	adc	r23, r1
    114c:	81 1d       	adc	r24, r1
    114e:	91 1d       	adc	r25, r1
    1150:	a1 1d       	adc	r26, r1
    1152:	20 d0       	rcall	.+64     	; 0x1194 <__ultoa_invert+0x84>
    1154:	09 f4       	brne	.+2      	; 0x1158 <__ultoa_invert+0x48>
    1156:	68 94       	set
    1158:	3f 91       	pop	r19
    115a:	2a e0       	ldi	r18, 0x0A	; 10
    115c:	26 9f       	mul	r18, r22
    115e:	11 24       	eor	r1, r1
    1160:	30 19       	sub	r19, r0
    1162:	30 5d       	subi	r19, 0xD0	; 208
    1164:	31 93       	st	Z+, r19
    1166:	de f6       	brtc	.-74     	; 0x111e <__ultoa_invert+0xe>
    1168:	cf 01       	movw	r24, r30
    116a:	08 95       	ret
    116c:	46 2f       	mov	r20, r22
    116e:	47 70       	andi	r20, 0x07	; 7
    1170:	40 5d       	subi	r20, 0xD0	; 208
    1172:	41 93       	st	Z+, r20
    1174:	b3 e0       	ldi	r27, 0x03	; 3
    1176:	0f d0       	rcall	.+30     	; 0x1196 <__ultoa_invert+0x86>
    1178:	c9 f7       	brne	.-14     	; 0x116c <__ultoa_invert+0x5c>
    117a:	f6 cf       	rjmp	.-20     	; 0x1168 <__ultoa_invert+0x58>
    117c:	46 2f       	mov	r20, r22
    117e:	4f 70       	andi	r20, 0x0F	; 15
    1180:	40 5d       	subi	r20, 0xD0	; 208
    1182:	4a 33       	cpi	r20, 0x3A	; 58
    1184:	18 f0       	brcs	.+6      	; 0x118c <__ultoa_invert+0x7c>
    1186:	49 5d       	subi	r20, 0xD9	; 217
    1188:	31 fd       	sbrc	r19, 1
    118a:	40 52       	subi	r20, 0x20	; 32
    118c:	41 93       	st	Z+, r20
    118e:	02 d0       	rcall	.+4      	; 0x1194 <__ultoa_invert+0x84>
    1190:	a9 f7       	brne	.-22     	; 0x117c <__ultoa_invert+0x6c>
    1192:	ea cf       	rjmp	.-44     	; 0x1168 <__ultoa_invert+0x58>
    1194:	b4 e0       	ldi	r27, 0x04	; 4
    1196:	a6 95       	lsr	r26
    1198:	97 95       	ror	r25
    119a:	87 95       	ror	r24
    119c:	77 95       	ror	r23
    119e:	67 95       	ror	r22
    11a0:	ba 95       	dec	r27
    11a2:	c9 f7       	brne	.-14     	; 0x1196 <__ultoa_invert+0x86>
    11a4:	00 97       	sbiw	r24, 0x00	; 0
    11a6:	61 05       	cpc	r22, r1
    11a8:	71 05       	cpc	r23, r1
    11aa:	08 95       	ret
    11ac:	9b 01       	movw	r18, r22
    11ae:	ac 01       	movw	r20, r24
    11b0:	0a 2e       	mov	r0, r26
    11b2:	06 94       	lsr	r0
    11b4:	57 95       	ror	r21
    11b6:	47 95       	ror	r20
    11b8:	37 95       	ror	r19
    11ba:	27 95       	ror	r18
    11bc:	ba 95       	dec	r27
    11be:	c9 f7       	brne	.-14     	; 0x11b2 <__ultoa_invert+0xa2>
    11c0:	62 0f       	add	r22, r18
    11c2:	73 1f       	adc	r23, r19
    11c4:	84 1f       	adc	r24, r20
    11c6:	95 1f       	adc	r25, r21
    11c8:	a0 1d       	adc	r26, r0
    11ca:	08 95       	ret

000011cc <_exit>:
    11cc:	f8 94       	cli

000011ce <__stop_program>:
    11ce:	ff cf       	rjmp	.-2      	; 0x11ce <__stop_program>
