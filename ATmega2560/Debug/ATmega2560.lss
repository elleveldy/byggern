
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b0  00800200  00001172  00001206  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001172  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008002b0  008002b0  000012b6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012b6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000208  00000000  00000000  00001312  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000183c  00000000  00000000  0000151a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aca  00000000  00000000  00002d56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e47  00000000  00000000  00003820  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000450  00000000  00000000  00004668  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000552  00000000  00000000  00004ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008df  00000000  00000000  0000500a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000178  00000000  00000000  000058e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	35 c0       	rjmp	.+106    	; 0x124 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	2d c0       	rjmp	.+90     	; 0x124 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e2 e7       	ldi	r30, 0x72	; 114
      fc:	f1 e1       	ldi	r31, 0x11	; 17
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 3b       	cpi	r26, 0xB0	; 176
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a0 eb       	ldi	r26, 0xB0	; 176
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a5 3c       	cpi	r26, 0xC5	; 197
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	1e d0       	rcall	.+60     	; 0x15c <main>
     120:	0c 94 b7 08 	jmp	0x116e	; 0x116e <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <adc_init>:
#include "adc.h"

void adc_init(){
	
	// Division factor 128
	ADCSRA |= (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
     126:	ea e7       	ldi	r30, 0x7A	; 122
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	80 81       	ld	r24, Z
     12c:	87 68       	ori	r24, 0x87	; 135
     12e:	80 83       	st	Z, r24
	
	/*We find max voltage to be 1.1 V
	Internal 1.1 V Voltage Reference with external capacitor at AREF pin  ->  REFS1 = 1 REFS0 = 0 
	*/  
	ADMUX |= (1 << REFS0);
     130:	ec e7       	ldi	r30, 0x7C	; 124
     132:	f0 e0       	ldi	r31, 0x00	; 0
     134:	80 81       	ld	r24, Z
     136:	80 64       	ori	r24, 0x40	; 64
     138:	80 83       	st	Z, r24
	ADMUX &= ~(1 << REFS1);
     13a:	80 81       	ld	r24, Z
     13c:	8f 77       	andi	r24, 0x7F	; 127
     13e:	80 83       	st	Z, r24
     140:	08 95       	ret

00000142 <adc_read>:
	
}

uint16_t adc_read(uint8_t ch){ //IR set to ADC0 = PF0
	//ADMUX |= ((1 << ch) & 0x03);
	ADCSRA |= (1 << ADSC);
     142:	ea e7       	ldi	r30, 0x7A	; 122
     144:	f0 e0       	ldi	r31, 0x00	; 0
     146:	80 81       	ld	r24, Z
     148:	80 64       	ori	r24, 0x40	; 64
     14a:	80 83       	st	Z, r24
	
	while((ADCSRA & (1 << ADSC))){}
     14c:	80 81       	ld	r24, Z
     14e:	86 fd       	sbrc	r24, 6
     150:	fd cf       	rjmp	.-6      	; 0x14c <adc_read+0xa>

	return ADC; //sexy premade code
     152:	80 91 78 00 	lds	r24, 0x0078
     156:	90 91 79 00 	lds	r25, 0x0079
     15a:	08 95       	ret

0000015c <main>:
check if header files are included in their respective c files, and if they should be
to avoid "implicit declaration of function*/



int main(void){
     15c:	cf 93       	push	r28
     15e:	df 93       	push	r29
     160:	cd b7       	in	r28, 0x3d	; 61
     162:	de b7       	in	r29, 0x3e	; 62
     164:	2b 97       	sbiw	r28, 0x0b	; 11
     166:	0f b6       	in	r0, 0x3f	; 63
     168:	f8 94       	cli
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	0f be       	out	0x3f, r0	; 63
     16e:	cd bf       	out	0x3d, r28	; 61
		PORTB = 0;
		_delay_ms(500);
	}*/
	
	
	MCUCR |= (1 << SRE);
     170:	85 b7       	in	r24, 0x35	; 53
     172:	80 68       	ori	r24, 0x80	; 128
     174:	85 bf       	out	0x35, r24	; 53
	uart_Init(MYUBRR);
     176:	87 e6       	ldi	r24, 0x67	; 103
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	03 d2       	rcall	.+1030   	; 0x582 <uart_Init>
	//
	
	
	can_init(MODE_NORMAL);
     17c:	80 e0       	ldi	r24, 0x00	; 0
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	31 d0       	rcall	.+98     	; 0x1e4 <can_init>
	pwm_init();
     182:	6d d1       	rcall	.+730    	; 0x45e <pwm_init>
	adc_init();
     184:	d0 df       	rcall	.-96     	; 0x126 <adc_init>

	DDRE |= (1 << 3); //studass PWM bandaid that can be removed? 
     186:	6b 9a       	sbi	0x0d, 3	; 13

	//uint16_t count = 0;
	
	
	int high = adc_read(0x00);
     188:	80 e0       	ldi	r24, 0x00	; 0
     18a:	db df       	rcall	.-74     	; 0x142 <adc_read>
     18c:	6c 01       	movw	r12, r24
	int low = adc_read(0x00);
     18e:	80 e0       	ldi	r24, 0x00	; 0
     190:	d8 df       	rcall	.-80     	; 0x142 <adc_read>
     192:	7c 01       	movw	r14, r24
		
		if(adc > high)
			high = adc;
		if(adc < low)
			low = adc;
		printf("\nIR VALUE: %d\tHighest: %d\tLowest: %d\tUnblocked: %d\n", adc, high, low, ir_unblocked());
     194:	0f 2e       	mov	r0, r31
     196:	f8 e0       	ldi	r31, 0x08	; 8
     198:	af 2e       	mov	r10, r31
     19a:	f2 e0       	ldi	r31, 0x02	; 2
     19c:	bf 2e       	mov	r11, r31
     19e:	f0 2d       	mov	r31, r0

	
	
	while(1){
		
		canjoy_recieve();
     1a0:	ce 01       	movw	r24, r28
     1a2:	01 96       	adiw	r24, 0x01	; 1
     1a4:	d2 d0       	rcall	.+420    	; 0x34a <canjoy_recieve>
		pwm_joystick_pulse(canjoy_joystick_x());
     1a6:	0f d1       	rcall	.+542    	; 0x3c6 <canjoy_joystick_x>
     1a8:	a4 d1       	rcall	.+840    	; 0x4f2 <pwm_joystick_pulse>
		int adc = adc_read(ADC0D);
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	ca df       	rcall	.-108    	; 0x142 <adc_read>
     1ae:	8c 01       	movw	r16, r24
     1b0:	c8 16       	cp	r12, r24
     1b2:	d9 06       	cpc	r13, r25
     1b4:	0c f4       	brge	.+2      	; 0x1b8 <main+0x5c>
     1b6:	6c 01       	movw	r12, r24
     1b8:	0e 15       	cp	r16, r14
     1ba:	1f 05       	cpc	r17, r15
     1bc:	0c f4       	brge	.+2      	; 0x1c0 <main+0x64>
     1be:	78 01       	movw	r14, r16
		
		if(adc > high)
			high = adc;
		if(adc < low)
			low = adc;
		printf("\nIR VALUE: %d\tHighest: %d\tLowest: %d\tUnblocked: %d\n", adc, high, low, ir_unblocked());
     1c0:	06 d1       	rcall	.+524    	; 0x3ce <ir_unblocked>
     1c2:	9f 93       	push	r25
     1c4:	8f 93       	push	r24
     1c6:	ff 92       	push	r15
     1c8:	ef 92       	push	r14
     1ca:	df 92       	push	r13
     1cc:	cf 92       	push	r12
     1ce:	1f 93       	push	r17
     1d0:	0f 93       	push	r16
     1d2:	bf 92       	push	r11
     1d4:	af 92       	push	r10
     1d6:	b1 d3       	rcall	.+1890   	; 0x93a <printf>
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	f8 94       	cli
     1dc:	de bf       	out	0x3e, r29	; 62
     1de:	0f be       	out	0x3f, r0	; 63
     1e0:	cd bf       	out	0x3d, r28	; 61
     1e2:	de cf       	rjmp	.-68     	; 0x1a0 <main+0x44>

000001e4 <can_init>:
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}
     1e4:	cf 93       	push	r28
     1e6:	df 93       	push	r29
     1e8:	ec 01       	movw	r28, r24
     1ea:	26 d1       	rcall	.+588    	; 0x438 <mcp2515_init>
     1ec:	4f ef       	ldi	r20, 0xFF	; 255
     1ee:	50 e0       	ldi	r21, 0x00	; 0
     1f0:	60 e6       	ldi	r22, 0x60	; 96
     1f2:	70 e0       	ldi	r23, 0x00	; 0
     1f4:	80 e6       	ldi	r24, 0x60	; 96
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	06 d1       	rcall	.+524    	; 0x406 <mcp2515_bit_modify>
     1fa:	4f ef       	ldi	r20, 0xFF	; 255
     1fc:	50 e0       	ldi	r21, 0x00	; 0
     1fe:	60 e6       	ldi	r22, 0x60	; 96
     200:	70 e0       	ldi	r23, 0x00	; 0
     202:	80 e7       	ldi	r24, 0x70	; 112
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	ff d0       	rcall	.+510    	; 0x406 <mcp2515_bit_modify>
     208:	ae 01       	movw	r20, r28
     20a:	60 ee       	ldi	r22, 0xE0	; 224
     20c:	70 e0       	ldi	r23, 0x00	; 0
     20e:	8f e0       	ldi	r24, 0x0F	; 15
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	f9 d0       	rcall	.+498    	; 0x406 <mcp2515_bit_modify>
     214:	69 98       	cbi	0x0d, 1	; 13
     216:	df 91       	pop	r29
     218:	cf 91       	pop	r28
     21a:	08 95       	ret

0000021c <can_poll_interrupt>:
}


uint8_t can_poll_interrupt(){
	
	while(!(PINE & (1 << PE1))){}
     21c:	61 9b       	sbis	0x0c, 1	; 12
     21e:	fe cf       	rjmp	.-4      	; 0x21c <can_poll_interrupt>
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
     220:	8c e2       	ldi	r24, 0x2C	; 44
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	e4 d0       	rcall	.+456    	; 0x3ee <mcp2515_read>
     226:	80 fd       	sbrc	r24, 0
     228:	07 c0       	rjmp	.+14     	; 0x238 <can_poll_interrupt+0x1c>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
	}
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
     22a:	8c e2       	ldi	r24, 0x2C	; 44
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	df d0       	rcall	.+446    	; 0x3ee <mcp2515_read>
     230:	81 ff       	sbrs	r24, 1
     232:	04 c0       	rjmp	.+8      	; 0x23c <can_poll_interrupt+0x20>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
     234:	80 e7       	ldi	r24, 0x70	; 112
     236:	08 95       	ret
	
	while(!(PINE & (1 << PE1))){}
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
     238:	80 e6       	ldi	r24, 0x60	; 96
     23a:	08 95       	ret
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
	}
	return -1;
     23c:	8f ef       	ldi	r24, 0xFF	; 255
}
     23e:	08 95       	ret

00000240 <can_recieve>:
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}

can_message can_recieve(can_message* msg){
     240:	7f 92       	push	r7
     242:	8f 92       	push	r8
     244:	9f 92       	push	r9
     246:	af 92       	push	r10
     248:	bf 92       	push	r11
     24a:	cf 92       	push	r12
     24c:	df 92       	push	r13
     24e:	ef 92       	push	r14
     250:	ff 92       	push	r15
     252:	0f 93       	push	r16
     254:	1f 93       	push	r17
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	cd b7       	in	r28, 0x3d	; 61
     25c:	de b7       	in	r29, 0x3e	; 62
     25e:	2b 97       	sbiw	r28, 0x0b	; 11
     260:	0f b6       	in	r0, 0x3f	; 63
     262:	f8 94       	cli
     264:	de bf       	out	0x3e, r29	; 62
     266:	0f be       	out	0x3f, r0	; 63
     268:	cd bf       	out	0x3d, r28	; 61
     26a:	6c 01       	movw	r12, r24
	can_message m;
	
	uint8_t buffer_select = can_poll_interrupt();
     26c:	d7 df       	rcall	.-82     	; 0x21c <can_poll_interrupt>
     26e:	98 2e       	mov	r9, r24
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
     270:	08 2f       	mov	r16, r24
     272:	10 e0       	ldi	r17, 0x00	; 0
     274:	c8 01       	movw	r24, r16
     276:	01 96       	adiw	r24, 0x01	; 1
     278:	ba d0       	rcall	.+372    	; 0x3ee <mcp2515_read>
     27a:	7c 01       	movw	r14, r24
     27c:	c8 01       	movw	r24, r16
     27e:	02 96       	adiw	r24, 0x02	; 2
     280:	b6 d0       	rcall	.+364    	; 0x3ee <mcp2515_read>
     282:	95 95       	asr	r25
     284:	87 95       	ror	r24
     286:	95 95       	asr	r25
     288:	87 95       	ror	r24
     28a:	95 95       	asr	r25
     28c:	87 95       	ror	r24
     28e:	95 95       	asr	r25
     290:	87 95       	ror	r24
     292:	95 95       	asr	r25
     294:	87 95       	ror	r24
     296:	ee 0c       	add	r14, r14
     298:	ff 1c       	adc	r15, r15
     29a:	ee 0c       	add	r14, r14
     29c:	ff 1c       	adc	r15, r15
     29e:	ee 0c       	add	r14, r14
     2a0:	ff 1c       	adc	r15, r15
     2a2:	5c 01       	movw	r10, r24
     2a4:	ae 28       	or	r10, r14
     2a6:	bf 28       	or	r11, r15
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
     2a8:	c8 01       	movw	r24, r16
     2aa:	05 96       	adiw	r24, 0x05	; 5
     2ac:	a0 d0       	rcall	.+320    	; 0x3ee <mcp2515_read>
     2ae:	8f 70       	andi	r24, 0x0F	; 15
     2b0:	78 2e       	mov	r7, r24
	
	for(uint8_t i = 0; i < m.length; i++){
     2b2:	a9 f0       	breq	.+42     	; 0x2de <can_recieve+0x9e>
     2b4:	8e 01       	movw	r16, r28
     2b6:	0c 5f       	subi	r16, 0xFC	; 252
     2b8:	1f 4f       	sbci	r17, 0xFF	; 255
     2ba:	81 2c       	mov	r8, r1
     2bc:	ce 01       	movw	r24, r28
     2be:	80 95       	com	r24
     2c0:	90 95       	com	r25
     2c2:	03 96       	adiw	r24, 0x03	; 3
     2c4:	7c 01       	movw	r14, r24
     2c6:	e9 0c       	add	r14, r9
     2c8:	f1 1c       	adc	r15, r1
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
     2ca:	c7 01       	movw	r24, r14
     2cc:	80 0f       	add	r24, r16
     2ce:	91 1f       	adc	r25, r17
     2d0:	8e d0       	rcall	.+284    	; 0x3ee <mcp2515_read>
     2d2:	f8 01       	movw	r30, r16
     2d4:	81 93       	st	Z+, r24
     2d6:	8f 01       	movw	r16, r30
	uint8_t buffer_select = can_poll_interrupt();
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
	
	for(uint8_t i = 0; i < m.length; i++){
     2d8:	83 94       	inc	r8
     2da:	87 10       	cpse	r8, r7
     2dc:	f6 cf       	rjmp	.-20     	; 0x2ca <can_recieve+0x8a>
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	
	switch(buffer_select){
     2de:	f0 e6       	ldi	r31, 0x60	; 96
     2e0:	9f 16       	cp	r9, r31
     2e2:	21 f0       	breq	.+8      	; 0x2ec <can_recieve+0xac>
     2e4:	80 e7       	ldi	r24, 0x70	; 112
     2e6:	98 16       	cp	r9, r24
     2e8:	49 f0       	breq	.+18     	; 0x2fc <can_recieve+0xbc>
     2ea:	0f c0       	rjmp	.+30     	; 0x30a <can_recieve+0xca>
		case MCP_RXB0CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
     2ec:	40 e0       	ldi	r20, 0x00	; 0
     2ee:	50 e0       	ldi	r21, 0x00	; 0
     2f0:	61 e0       	ldi	r22, 0x01	; 1
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	8c e2       	ldi	r24, 0x2C	; 44
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	86 d0       	rcall	.+268    	; 0x406 <mcp2515_bit_modify>
		break;
     2fa:	07 c0       	rjmp	.+14     	; 0x30a <can_recieve+0xca>
		case MCP_RXB1CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
     2fc:	40 e0       	ldi	r20, 0x00	; 0
     2fe:	50 e0       	ldi	r21, 0x00	; 0
     300:	62 e0       	ldi	r22, 0x02	; 2
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	8c e2       	ldi	r24, 0x2C	; 44
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	7e d0       	rcall	.+252    	; 0x406 <mcp2515_bit_modify>
		break;
	}
	
	return m;
     30a:	ba 82       	std	Y+2, r11	; 0x02
     30c:	a9 82       	std	Y+1, r10	; 0x01
     30e:	7b 82       	std	Y+3, r7	; 0x03
     310:	8b e0       	ldi	r24, 0x0B	; 11
     312:	fe 01       	movw	r30, r28
     314:	31 96       	adiw	r30, 0x01	; 1
     316:	d6 01       	movw	r26, r12
     318:	01 90       	ld	r0, Z+
     31a:	0d 92       	st	X+, r0
     31c:	8a 95       	dec	r24
     31e:	e1 f7       	brne	.-8      	; 0x318 <can_recieve+0xd8>
}
     320:	c6 01       	movw	r24, r12
     322:	2b 96       	adiw	r28, 0x0b	; 11
     324:	0f b6       	in	r0, 0x3f	; 63
     326:	f8 94       	cli
     328:	de bf       	out	0x3e, r29	; 62
     32a:	0f be       	out	0x3f, r0	; 63
     32c:	cd bf       	out	0x3d, r28	; 61
     32e:	df 91       	pop	r29
     330:	cf 91       	pop	r28
     332:	1f 91       	pop	r17
     334:	0f 91       	pop	r16
     336:	ff 90       	pop	r15
     338:	ef 90       	pop	r14
     33a:	df 90       	pop	r13
     33c:	cf 90       	pop	r12
     33e:	bf 90       	pop	r11
     340:	af 90       	pop	r10
     342:	9f 90       	pop	r9
     344:	8f 90       	pop	r8
     346:	7f 90       	pop	r7
     348:	08 95       	ret

0000034a <canjoy_recieve>:
	
	can_transmit(&joy, 0x30);
}


can_message canjoy_recieve(){
     34a:	ef 92       	push	r14
     34c:	ff 92       	push	r15
     34e:	0f 93       	push	r16
     350:	1f 93       	push	r17
     352:	cf 93       	push	r28
     354:	df 93       	push	r29
     356:	ec 01       	movw	r28, r24
	
	can_message joy = can_recieve();
     358:	73 df       	rcall	.-282    	; 0x240 <can_recieve>
     35a:	ea 80       	ldd	r14, Y+2	; 0x02
     35c:	fb 80       	ldd	r15, Y+3	; 0x03
     35e:	0c 81       	ldd	r16, Y+4	; 0x04
     360:	1d 81       	ldd	r17, Y+5	; 0x05
     362:	7e 81       	ldd	r23, Y+6	; 0x06
     364:	6f 81       	ldd	r22, Y+7	; 0x07
     366:	58 85       	ldd	r21, Y+8	; 0x08
     368:	49 85       	ldd	r20, Y+9	; 0x09
	
	if(joy.id == CANJOY_ID){
     36a:	28 81       	ld	r18, Y
     36c:	39 81       	ldd	r19, Y+1	; 0x01
     36e:	80 91 06 02 	lds	r24, 0x0206
     372:	90 91 07 02 	lds	r25, 0x0207
     376:	28 17       	cp	r18, r24
     378:	39 07       	cpc	r19, r25
     37a:	89 f4       	brne	.+34     	; 0x39e <canjoy_recieve+0x54>
		//printf("CORRECT ID\n");		
		canjoy_msg = joy;
     37c:	8b e0       	ldi	r24, 0x0B	; 11
     37e:	fe 01       	movw	r30, r28
     380:	a0 eb       	ldi	r26, 0xB0	; 176
     382:	b2 e0       	ldi	r27, 0x02	; 2
     384:	01 90       	ld	r0, Z+
     386:	0d 92       	st	X+, r0
     388:	8a 95       	dec	r24
     38a:	e1 f7       	brne	.-8      	; 0x384 <canjoy_recieve+0x3a>
		return joy;
     38c:	ea 82       	std	Y+2, r14	; 0x02
     38e:	fb 82       	std	Y+3, r15	; 0x03
     390:	0c 83       	std	Y+4, r16	; 0x04
     392:	1d 83       	std	Y+5, r17	; 0x05
     394:	7e 83       	std	Y+6, r23	; 0x06
     396:	6f 83       	std	Y+7, r22	; 0x07
     398:	58 87       	std	Y+8, r21	; 0x08
     39a:	49 87       	std	Y+9, r20	; 0x09
     39c:	0c c0       	rjmp	.+24     	; 0x3b6 <canjoy_recieve+0x6c>
	}
	printf("WRONG ID\n");
     39e:	8c e3       	ldi	r24, 0x3C	; 60
     3a0:	92 e0       	ldi	r25, 0x02	; 2
     3a2:	dc d2       	rcall	.+1464   	; 0x95c <puts>
	joy.data[2] = 0;
	joy.data[3] = 0;
	joy.data[4] = 0;
	joy.data[5] = 0;
	joy.data[6] = 0;
	return joy;
     3a4:	87 e0       	ldi	r24, 0x07	; 7
     3a6:	8a 83       	std	Y+2, r24	; 0x02
     3a8:	8b 83       	std	Y+3, r24	; 0x03
     3aa:	1c 82       	std	Y+4, r1	; 0x04
     3ac:	1d 82       	std	Y+5, r1	; 0x05
     3ae:	1e 82       	std	Y+6, r1	; 0x06
     3b0:	1f 82       	std	Y+7, r1	; 0x07
     3b2:	18 86       	std	Y+8, r1	; 0x08
     3b4:	19 86       	std	Y+9, r1	; 0x09
}
     3b6:	ce 01       	movw	r24, r28
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	ff 90       	pop	r15
     3c2:	ef 90       	pop	r14
     3c4:	08 95       	ret

000003c6 <canjoy_joystick_x>:

int canjoy_joystick_x(){
	return canjoy_msg.data[0];
     3c6:	80 91 b3 02 	lds	r24, 0x02B3
}
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	08 95       	ret

000003ce <ir_unblocked>:
#define HIGH 120
#define LOW 30

int ir_unblocked(){
	
	if(adc_read(ADC0D) > 120){
     3ce:	80 e0       	ldi	r24, 0x00	; 0
     3d0:	b8 de       	rcall	.-656    	; 0x142 <adc_read>
     3d2:	89 37       	cpi	r24, 0x79	; 121
     3d4:	91 05       	cpc	r25, r1
     3d6:	28 f4       	brcc	.+10     	; 0x3e2 <ir_unblocked+0x14>
		return 1;
	}
	if(adc_read(ADC0D) < 30){
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	b3 de       	rcall	.-666    	; 0x142 <adc_read>
     3dc:	4e 97       	sbiw	r24, 0x1e	; 30
     3de:	20 f0       	brcs	.+8      	; 0x3e8 <ir_unblocked+0x1a>
     3e0:	08 95       	ret
#define LOW 30

int ir_unblocked(){
	
	if(adc_read(ADC0D) > 120){
		return 1;
     3e2:	81 e0       	ldi	r24, 0x01	; 1
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	08 95       	ret
	}
	if(adc_read(ADC0D) < 30){
		return 0;
     3e8:	80 e0       	ldi	r24, 0x00	; 0
     3ea:	90 e0       	ldi	r25, 0x00	; 0
	}
	
}
     3ec:	08 95       	ret

000003ee <mcp2515_read>:
}

void mcp2515_request_to_send(int buffer_select){
	PORTB &= ~(1 << MCP2515_CS);
	spi_write(buffer_select);
	PORTB |= (1 << MCP2515_CS);
     3ee:	cf 93       	push	r28
     3f0:	c8 2f       	mov	r28, r24
     3f2:	28 98       	cbi	0x05, 0	; 5
     3f4:	83 e0       	ldi	r24, 0x03	; 3
     3f6:	ae d0       	rcall	.+348    	; 0x554 <spi_write>
     3f8:	8c 2f       	mov	r24, r28
     3fa:	ac d0       	rcall	.+344    	; 0x554 <spi_write>
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	aa d0       	rcall	.+340    	; 0x554 <spi_write>
     400:	28 9a       	sbi	0x05, 0	; 5
     402:	cf 91       	pop	r28
     404:	08 95       	ret

00000406 <mcp2515_bit_modify>:
}

void mcp2515_bit_modify(int address, int mask, int data){
     406:	1f 93       	push	r17
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	18 2f       	mov	r17, r24
     40e:	d6 2f       	mov	r29, r22
     410:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << MCP2515_CS);
     412:	28 98       	cbi	0x05, 0	; 5
	
	spi_write(MCP_BITMOD);
     414:	85 e0       	ldi	r24, 0x05	; 5
     416:	9e d0       	rcall	.+316    	; 0x554 <spi_write>
	spi_write(address);
     418:	81 2f       	mov	r24, r17
     41a:	9c d0       	rcall	.+312    	; 0x554 <spi_write>
	spi_write(mask);
     41c:	8d 2f       	mov	r24, r29
     41e:	9a d0       	rcall	.+308    	; 0x554 <spi_write>
	spi_write(data);
     420:	8c 2f       	mov	r24, r28
     422:	98 d0       	rcall	.+304    	; 0x554 <spi_write>

	PORTB |= (1 << MCP2515_CS);
     424:	28 9a       	sbi	0x05, 0	; 5
	
}
     426:	df 91       	pop	r29
     428:	cf 91       	pop	r28
     42a:	1f 91       	pop	r17
     42c:	08 95       	ret

0000042e <mcp2515_reset>:

void mcp2515_reset(){
	PORTB &= ~(1 << MCP2515_CS);
     42e:	28 98       	cbi	0x05, 0	; 5
	spi_write(MCP_RESET);
     430:	80 ec       	ldi	r24, 0xC0	; 192
     432:	90 d0       	rcall	.+288    	; 0x554 <spi_write>
	PORTB |= (1 << MCP2515_CS);
     434:	28 9a       	sbi	0x05, 0	; 5
     436:	08 95       	ret

00000438 <mcp2515_init>:
#include "SPI.h"
#include "mcp2515_define.h"


int mcp2515_init(){
	spi_init();
     438:	86 d0       	rcall	.+268    	; 0x546 <spi_init>
	mcp2515_reset();
     43a:	f9 df       	rcall	.-14     	; 0x42e <mcp2515_reset>
	
	uint8_t val = mcp2515_read(MCP_CANSTAT);
     43c:	8e e0       	ldi	r24, 0x0E	; 14
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	d6 df       	rcall	.-84     	; 0x3ee <mcp2515_read>
	if((val & MODE_MASK) != MODE_CONFIG){
     442:	80 7e       	andi	r24, 0xE0	; 224
     444:	99 27       	eor	r25, r25
     446:	80 38       	cpi	r24, 0x80	; 128
     448:	91 05       	cpc	r25, r1
     44a:	31 f0       	breq	.+12     	; 0x458 <mcp2515_init+0x20>
		printf("ERROR: MCP2515 is NOT in config mode after reset!\n");
     44c:	85 e4       	ldi	r24, 0x45	; 69
     44e:	92 e0       	ldi	r25, 0x02	; 2
     450:	85 d2       	rcall	.+1290   	; 0x95c <puts>
		return 1;
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	08 95       	ret
	}
	return 0;
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	90 e0       	ldi	r25, 0x00	; 0
}
     45c:	08 95       	ret

0000045e <pwm_init>:

void pwm_set_value(uint16_t val){
	OCR3A = val;
}

void pwm_set_servo(int16_t val){
     45e:	6b 9a       	sbi	0x0d, 3	; 13
     460:	73 9a       	sbi	0x0e, 3	; 14
     462:	a0 e9       	ldi	r26, 0x90	; 144
     464:	b0 e0       	ldi	r27, 0x00	; 0
     466:	1c 92       	st	X, r1
     468:	e1 e9       	ldi	r30, 0x91	; 145
     46a:	f0 e0       	ldi	r31, 0x00	; 0
     46c:	10 82       	st	Z, r1
     46e:	10 92 92 00 	sts	0x0092, r1
     472:	8c 91       	ld	r24, X
     474:	8e 7f       	andi	r24, 0xFE	; 254
     476:	8c 93       	st	X, r24
     478:	8c 91       	ld	r24, X
     47a:	82 60       	ori	r24, 0x02	; 2
     47c:	8c 93       	st	X, r24
     47e:	80 81       	ld	r24, Z
     480:	88 60       	ori	r24, 0x08	; 8
     482:	80 83       	st	Z, r24
     484:	80 81       	ld	r24, Z
     486:	80 61       	ori	r24, 0x10	; 16
     488:	80 83       	st	Z, r24
     48a:	8c 91       	ld	r24, X
     48c:	8c 93       	st	X, r24
     48e:	8c 91       	ld	r24, X
     490:	80 68       	ori	r24, 0x80	; 128
     492:	8c 93       	st	X, r24
     494:	80 81       	ld	r24, Z
     496:	83 60       	ori	r24, 0x03	; 3
     498:	80 83       	st	Z, r24
     49a:	80 81       	ld	r24, Z
     49c:	8b 7f       	andi	r24, 0xFB	; 251
     49e:	80 83       	st	Z, r24
     4a0:	e6 e9       	ldi	r30, 0x96	; 150
     4a2:	f0 e0       	ldi	r31, 0x00	; 0
     4a4:	88 e8       	ldi	r24, 0x88	; 136
     4a6:	93 e1       	ldi	r25, 0x13	; 19
     4a8:	91 83       	std	Z+1, r25	; 0x01
     4aa:	80 83       	st	Z, r24
     4ac:	80 81       	ld	r24, Z
     4ae:	91 81       	ldd	r25, Z+1	; 0x01
     4b0:	96 95       	lsr	r25
     4b2:	87 95       	ror	r24
     4b4:	90 93 99 00 	sts	0x0099, r25
     4b8:	80 93 98 00 	sts	0x0098, r24
     4bc:	08 95       	ret

000004be <pwm_set_pulse>:
	//delete and remove from header
}

void pwm_set_pulse(int16_t val){
	
	if(val >= P_MAX)
     4be:	8d 30       	cpi	r24, 0x0D	; 13
     4c0:	22 e0       	ldi	r18, 0x02	; 2
     4c2:	92 07       	cpc	r25, r18
     4c4:	3c f0       	brlt	.+14     	; 0x4d4 <pwm_set_pulse+0x16>
	//printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     4c6:	8d e0       	ldi	r24, 0x0D	; 13
     4c8:	92 e0       	ldi	r25, 0x02	; 2
     4ca:	90 93 99 00 	sts	0x0099, r25
     4ce:	80 93 98 00 	sts	0x0098, r24
     4d2:	08 95       	ret

void pwm_set_pulse(int16_t val){
	
	if(val >= P_MAX)
		pwm_set_value(P_MAX);
	else if(val < P_MIN)
     4d4:	81 3e       	cpi	r24, 0xE1	; 225
     4d6:	91 05       	cpc	r25, r1
     4d8:	3c f4       	brge	.+14     	; 0x4e8 <pwm_set_pulse+0x2a>
	//printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     4da:	81 ee       	ldi	r24, 0xE1	; 225
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	90 93 99 00 	sts	0x0099, r25
     4e2:	80 93 98 00 	sts	0x0098, r24
     4e6:	08 95       	ret
     4e8:	90 93 99 00 	sts	0x0099, r25
     4ec:	80 93 98 00 	sts	0x0098, r24
     4f0:	08 95       	ret

000004f2 <pwm_joystick_pulse>:


//uses joystick_x_value() which returns between 0 and 255
void pwm_joystick_pulse(int16_t val){
	
	if((val > 255) || (val < 0)){
     4f2:	8f 3f       	cpi	r24, 0xFF	; 255
     4f4:	91 05       	cpc	r25, r1
     4f6:	99 f0       	breq	.+38     	; 0x51e <pwm_joystick_pulse+0x2c>
     4f8:	90 f0       	brcs	.+36     	; 0x51e <pwm_joystick_pulse+0x2c>
		printf("ERROR: pwm_joystick_pulse input val = %d out of range!\n", val);
     4fa:	9f 93       	push	r25
     4fc:	8f 93       	push	r24
     4fe:	87 e7       	ldi	r24, 0x77	; 119
     500:	92 e0       	ldi	r25, 0x02	; 2
     502:	9f 93       	push	r25
     504:	8f 93       	push	r24
     506:	19 d2       	rcall	.+1074   	; 0x93a <printf>
	//printf("PWM init done:\n\tTCCRA: %02X\n\tTCCRB: %02X\n\tICR: %02X\n\tOCR: %02X\n", TCCR3A, TCCR3B, ICR3, OCR3A);
}


void pwm_set_value(uint16_t val){
	OCR3A = val;
     508:	87 e7       	ldi	r24, 0x77	; 119
     50a:	91 e0       	ldi	r25, 0x01	; 1
     50c:	90 93 99 00 	sts	0x0099, r25
     510:	80 93 98 00 	sts	0x0098, r24
     514:	0f 90       	pop	r0
     516:	0f 90       	pop	r0
     518:	0f 90       	pop	r0
     51a:	0f 90       	pop	r0
     51c:	08 95       	ret
		pwm_set_value(P_MID);
		return;
	}
	else{
		
		uint16_t pulse_width = (val * (300/255.0)) + P_MIN;
     51e:	bc 01       	movw	r22, r24
     520:	88 27       	eor	r24, r24
     522:	77 fd       	sbrc	r23, 7
     524:	80 95       	com	r24
     526:	98 2f       	mov	r25, r24
     528:	cf d0       	rcall	.+414    	; 0x6c8 <__floatsisf>
     52a:	27 e9       	ldi	r18, 0x97	; 151
     52c:	36 e9       	ldi	r19, 0x96	; 150
     52e:	46 e9       	ldi	r20, 0x96	; 150
     530:	5f e3       	ldi	r21, 0x3F	; 63
     532:	56 d1       	rcall	.+684    	; 0x7e0 <__mulsf3>
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	41 e6       	ldi	r20, 0x61	; 97
     53a:	53 e4       	ldi	r21, 0x43	; 67
     53c:	33 d0       	rcall	.+102    	; 0x5a4 <__addsf3>
     53e:	96 d0       	rcall	.+300    	; 0x66c <__fixunssfsi>
		
		//printf("\nPulse converted from %d to %d\t P_RESOLUTION = %d\n", val, pulse_width, P_RESOLUTION);
		pwm_set_pulse(pulse_width);
     540:	cb 01       	movw	r24, r22
     542:	bd cf       	rjmp	.-134    	; 0x4be <pwm_set_pulse>
     544:	08 95       	ret

00000546 <spi_init>:
#include "SPI.h"
#include <avr/io.h>

void spi_init(){
			//SI out		SS out		SCK out
	DDRB |= ( 1 << PB2) | (1 << PB0) | (1 << PB1);
     546:	84 b1       	in	r24, 0x04	; 4
     548:	87 60       	ori	r24, 0x07	; 7
     54a:	84 b9       	out	0x04, r24	; 4
	//SO in
	DDRB &= ~(1 << PB3);
     54c:	23 98       	cbi	0x04, 3	; 4
	
	//								 frequency / 16
	SPCR= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
     54e:	81 e5       	ldi	r24, 0x51	; 81
     550:	8c bd       	out	0x2c, r24	; 44
     552:	08 95       	ret

00000554 <spi_write>:

//both read and write
int spi_write(char data){
	//SPDR = data;
	//while(!(SPSR & (1<<SPIF)));
	SPDR = data;
     554:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
     556:	0d b4       	in	r0, 0x2d	; 45
     558:	07 fe       	sbrs	r0, 7
     55a:	fd cf       	rjmp	.-6      	; 0x556 <spi_write+0x2>
	return SPDR;
     55c:	8e b5       	in	r24, 0x2e	; 46
}
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	08 95       	ret

00000562 <uart_Transmit>:
}

void uart_Transmit( unsigned char data ){
	
	//Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
     562:	e0 ec       	ldi	r30, 0xC0	; 192
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	90 81       	ld	r25, Z
     568:	95 ff       	sbrs	r25, 5
     56a:	fd cf       	rjmp	.-6      	; 0x566 <uart_Transmit+0x4>
	
	//Put data into buffer, sends the data
	UDR0 = data;
     56c:	80 93 c6 00 	sts	0x00C6, r24
     570:	08 95       	ret

00000572 <uart_Receive>:

unsigned char uart_Receive(void){
	
	//Wait for data to be received
	
	while( !(UCSR0A & (1<<RXC0)) );
     572:	e0 ec       	ldi	r30, 0xC0	; 192
     574:	f0 e0       	ldi	r31, 0x00	; 0
     576:	80 81       	ld	r24, Z
     578:	88 23       	and	r24, r24
     57a:	ec f7       	brge	.-6      	; 0x576 <uart_Receive+0x4>
	
	//Get and return received data from buffer
	
	return UDR0;
     57c:	80 91 c6 00 	lds	r24, 0x00C6
}
     580:	08 95       	ret

00000582 <uart_Init>:
#include "uart.h"

void uart_Init(unsigned int ubrr){
	
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     582:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     586:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     58a:	88 e1       	ldi	r24, 0x18	; 24
     58c:	80 93 c1 00 	sts	0x00C1, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C = (1 << 7)|(3<<UCSZ00);//here, 7 replaces URSEL0 from ATmega162 project
     590:	86 e8       	ldi	r24, 0x86	; 134
     592:	80 93 c2 00 	sts	0x00C2, r24
	
	fdevopen(uart_Transmit, uart_Receive);
     596:	69 eb       	ldi	r22, 0xB9	; 185
     598:	72 e0       	ldi	r23, 0x02	; 2
     59a:	81 eb       	ldi	r24, 0xB1	; 177
     59c:	92 e0       	ldi	r25, 0x02	; 2
     59e:	83 c1       	rjmp	.+774    	; 0x8a6 <fdevopen>
     5a0:	08 95       	ret

000005a2 <__subsf3>:
     5a2:	50 58       	subi	r21, 0x80	; 128

000005a4 <__addsf3>:
     5a4:	bb 27       	eor	r27, r27
     5a6:	aa 27       	eor	r26, r26
     5a8:	0e d0       	rcall	.+28     	; 0x5c6 <__addsf3x>
     5aa:	e0 c0       	rjmp	.+448    	; 0x76c <__fp_round>
     5ac:	d1 d0       	rcall	.+418    	; 0x750 <__fp_pscA>
     5ae:	30 f0       	brcs	.+12     	; 0x5bc <__addsf3+0x18>
     5b0:	d6 d0       	rcall	.+428    	; 0x75e <__fp_pscB>
     5b2:	20 f0       	brcs	.+8      	; 0x5bc <__addsf3+0x18>
     5b4:	31 f4       	brne	.+12     	; 0x5c2 <__addsf3+0x1e>
     5b6:	9f 3f       	cpi	r25, 0xFF	; 255
     5b8:	11 f4       	brne	.+4      	; 0x5be <__addsf3+0x1a>
     5ba:	1e f4       	brtc	.+6      	; 0x5c2 <__addsf3+0x1e>
     5bc:	c6 c0       	rjmp	.+396    	; 0x74a <__fp_nan>
     5be:	0e f4       	brtc	.+2      	; 0x5c2 <__addsf3+0x1e>
     5c0:	e0 95       	com	r30
     5c2:	e7 fb       	bst	r30, 7
     5c4:	bc c0       	rjmp	.+376    	; 0x73e <__fp_inf>

000005c6 <__addsf3x>:
     5c6:	e9 2f       	mov	r30, r25
     5c8:	e2 d0       	rcall	.+452    	; 0x78e <__fp_split3>
     5ca:	80 f3       	brcs	.-32     	; 0x5ac <__addsf3+0x8>
     5cc:	ba 17       	cp	r27, r26
     5ce:	62 07       	cpc	r22, r18
     5d0:	73 07       	cpc	r23, r19
     5d2:	84 07       	cpc	r24, r20
     5d4:	95 07       	cpc	r25, r21
     5d6:	18 f0       	brcs	.+6      	; 0x5de <__addsf3x+0x18>
     5d8:	71 f4       	brne	.+28     	; 0x5f6 <__addsf3x+0x30>
     5da:	9e f5       	brtc	.+102    	; 0x642 <__addsf3x+0x7c>
     5dc:	fa c0       	rjmp	.+500    	; 0x7d2 <__fp_zero>
     5de:	0e f4       	brtc	.+2      	; 0x5e2 <__addsf3x+0x1c>
     5e0:	e0 95       	com	r30
     5e2:	0b 2e       	mov	r0, r27
     5e4:	ba 2f       	mov	r27, r26
     5e6:	a0 2d       	mov	r26, r0
     5e8:	0b 01       	movw	r0, r22
     5ea:	b9 01       	movw	r22, r18
     5ec:	90 01       	movw	r18, r0
     5ee:	0c 01       	movw	r0, r24
     5f0:	ca 01       	movw	r24, r20
     5f2:	a0 01       	movw	r20, r0
     5f4:	11 24       	eor	r1, r1
     5f6:	ff 27       	eor	r31, r31
     5f8:	59 1b       	sub	r21, r25
     5fa:	99 f0       	breq	.+38     	; 0x622 <__addsf3x+0x5c>
     5fc:	59 3f       	cpi	r21, 0xF9	; 249
     5fe:	50 f4       	brcc	.+20     	; 0x614 <__addsf3x+0x4e>
     600:	50 3e       	cpi	r21, 0xE0	; 224
     602:	68 f1       	brcs	.+90     	; 0x65e <__addsf3x+0x98>
     604:	1a 16       	cp	r1, r26
     606:	f0 40       	sbci	r31, 0x00	; 0
     608:	a2 2f       	mov	r26, r18
     60a:	23 2f       	mov	r18, r19
     60c:	34 2f       	mov	r19, r20
     60e:	44 27       	eor	r20, r20
     610:	58 5f       	subi	r21, 0xF8	; 248
     612:	f3 cf       	rjmp	.-26     	; 0x5fa <__addsf3x+0x34>
     614:	46 95       	lsr	r20
     616:	37 95       	ror	r19
     618:	27 95       	ror	r18
     61a:	a7 95       	ror	r26
     61c:	f0 40       	sbci	r31, 0x00	; 0
     61e:	53 95       	inc	r21
     620:	c9 f7       	brne	.-14     	; 0x614 <__addsf3x+0x4e>
     622:	7e f4       	brtc	.+30     	; 0x642 <__addsf3x+0x7c>
     624:	1f 16       	cp	r1, r31
     626:	ba 0b       	sbc	r27, r26
     628:	62 0b       	sbc	r22, r18
     62a:	73 0b       	sbc	r23, r19
     62c:	84 0b       	sbc	r24, r20
     62e:	ba f0       	brmi	.+46     	; 0x65e <__addsf3x+0x98>
     630:	91 50       	subi	r25, 0x01	; 1
     632:	a1 f0       	breq	.+40     	; 0x65c <__addsf3x+0x96>
     634:	ff 0f       	add	r31, r31
     636:	bb 1f       	adc	r27, r27
     638:	66 1f       	adc	r22, r22
     63a:	77 1f       	adc	r23, r23
     63c:	88 1f       	adc	r24, r24
     63e:	c2 f7       	brpl	.-16     	; 0x630 <__addsf3x+0x6a>
     640:	0e c0       	rjmp	.+28     	; 0x65e <__addsf3x+0x98>
     642:	ba 0f       	add	r27, r26
     644:	62 1f       	adc	r22, r18
     646:	73 1f       	adc	r23, r19
     648:	84 1f       	adc	r24, r20
     64a:	48 f4       	brcc	.+18     	; 0x65e <__addsf3x+0x98>
     64c:	87 95       	ror	r24
     64e:	77 95       	ror	r23
     650:	67 95       	ror	r22
     652:	b7 95       	ror	r27
     654:	f7 95       	ror	r31
     656:	9e 3f       	cpi	r25, 0xFE	; 254
     658:	08 f0       	brcs	.+2      	; 0x65c <__addsf3x+0x96>
     65a:	b3 cf       	rjmp	.-154    	; 0x5c2 <__addsf3+0x1e>
     65c:	93 95       	inc	r25
     65e:	88 0f       	add	r24, r24
     660:	08 f0       	brcs	.+2      	; 0x664 <__addsf3x+0x9e>
     662:	99 27       	eor	r25, r25
     664:	ee 0f       	add	r30, r30
     666:	97 95       	ror	r25
     668:	87 95       	ror	r24
     66a:	08 95       	ret

0000066c <__fixunssfsi>:
     66c:	98 d0       	rcall	.+304    	; 0x79e <__fp_splitA>
     66e:	88 f0       	brcs	.+34     	; 0x692 <__fixunssfsi+0x26>
     670:	9f 57       	subi	r25, 0x7F	; 127
     672:	90 f0       	brcs	.+36     	; 0x698 <__fixunssfsi+0x2c>
     674:	b9 2f       	mov	r27, r25
     676:	99 27       	eor	r25, r25
     678:	b7 51       	subi	r27, 0x17	; 23
     67a:	a0 f0       	brcs	.+40     	; 0x6a4 <__fixunssfsi+0x38>
     67c:	d1 f0       	breq	.+52     	; 0x6b2 <__fixunssfsi+0x46>
     67e:	66 0f       	add	r22, r22
     680:	77 1f       	adc	r23, r23
     682:	88 1f       	adc	r24, r24
     684:	99 1f       	adc	r25, r25
     686:	1a f0       	brmi	.+6      	; 0x68e <__fixunssfsi+0x22>
     688:	ba 95       	dec	r27
     68a:	c9 f7       	brne	.-14     	; 0x67e <__fixunssfsi+0x12>
     68c:	12 c0       	rjmp	.+36     	; 0x6b2 <__fixunssfsi+0x46>
     68e:	b1 30       	cpi	r27, 0x01	; 1
     690:	81 f0       	breq	.+32     	; 0x6b2 <__fixunssfsi+0x46>
     692:	9f d0       	rcall	.+318    	; 0x7d2 <__fp_zero>
     694:	b1 e0       	ldi	r27, 0x01	; 1
     696:	08 95       	ret
     698:	9c c0       	rjmp	.+312    	; 0x7d2 <__fp_zero>
     69a:	67 2f       	mov	r22, r23
     69c:	78 2f       	mov	r23, r24
     69e:	88 27       	eor	r24, r24
     6a0:	b8 5f       	subi	r27, 0xF8	; 248
     6a2:	39 f0       	breq	.+14     	; 0x6b2 <__fixunssfsi+0x46>
     6a4:	b9 3f       	cpi	r27, 0xF9	; 249
     6a6:	cc f3       	brlt	.-14     	; 0x69a <__fixunssfsi+0x2e>
     6a8:	86 95       	lsr	r24
     6aa:	77 95       	ror	r23
     6ac:	67 95       	ror	r22
     6ae:	b3 95       	inc	r27
     6b0:	d9 f7       	brne	.-10     	; 0x6a8 <__fixunssfsi+0x3c>
     6b2:	3e f4       	brtc	.+14     	; 0x6c2 <__fixunssfsi+0x56>
     6b4:	90 95       	com	r25
     6b6:	80 95       	com	r24
     6b8:	70 95       	com	r23
     6ba:	61 95       	neg	r22
     6bc:	7f 4f       	sbci	r23, 0xFF	; 255
     6be:	8f 4f       	sbci	r24, 0xFF	; 255
     6c0:	9f 4f       	sbci	r25, 0xFF	; 255
     6c2:	08 95       	ret

000006c4 <__floatunsisf>:
     6c4:	e8 94       	clt
     6c6:	09 c0       	rjmp	.+18     	; 0x6da <__floatsisf+0x12>

000006c8 <__floatsisf>:
     6c8:	97 fb       	bst	r25, 7
     6ca:	3e f4       	brtc	.+14     	; 0x6da <__floatsisf+0x12>
     6cc:	90 95       	com	r25
     6ce:	80 95       	com	r24
     6d0:	70 95       	com	r23
     6d2:	61 95       	neg	r22
     6d4:	7f 4f       	sbci	r23, 0xFF	; 255
     6d6:	8f 4f       	sbci	r24, 0xFF	; 255
     6d8:	9f 4f       	sbci	r25, 0xFF	; 255
     6da:	99 23       	and	r25, r25
     6dc:	a9 f0       	breq	.+42     	; 0x708 <__floatsisf+0x40>
     6de:	f9 2f       	mov	r31, r25
     6e0:	96 e9       	ldi	r25, 0x96	; 150
     6e2:	bb 27       	eor	r27, r27
     6e4:	93 95       	inc	r25
     6e6:	f6 95       	lsr	r31
     6e8:	87 95       	ror	r24
     6ea:	77 95       	ror	r23
     6ec:	67 95       	ror	r22
     6ee:	b7 95       	ror	r27
     6f0:	f1 11       	cpse	r31, r1
     6f2:	f8 cf       	rjmp	.-16     	; 0x6e4 <__floatsisf+0x1c>
     6f4:	fa f4       	brpl	.+62     	; 0x734 <__floatsisf+0x6c>
     6f6:	bb 0f       	add	r27, r27
     6f8:	11 f4       	brne	.+4      	; 0x6fe <__floatsisf+0x36>
     6fa:	60 ff       	sbrs	r22, 0
     6fc:	1b c0       	rjmp	.+54     	; 0x734 <__floatsisf+0x6c>
     6fe:	6f 5f       	subi	r22, 0xFF	; 255
     700:	7f 4f       	sbci	r23, 0xFF	; 255
     702:	8f 4f       	sbci	r24, 0xFF	; 255
     704:	9f 4f       	sbci	r25, 0xFF	; 255
     706:	16 c0       	rjmp	.+44     	; 0x734 <__floatsisf+0x6c>
     708:	88 23       	and	r24, r24
     70a:	11 f0       	breq	.+4      	; 0x710 <__floatsisf+0x48>
     70c:	96 e9       	ldi	r25, 0x96	; 150
     70e:	11 c0       	rjmp	.+34     	; 0x732 <__floatsisf+0x6a>
     710:	77 23       	and	r23, r23
     712:	21 f0       	breq	.+8      	; 0x71c <__floatsisf+0x54>
     714:	9e e8       	ldi	r25, 0x8E	; 142
     716:	87 2f       	mov	r24, r23
     718:	76 2f       	mov	r23, r22
     71a:	05 c0       	rjmp	.+10     	; 0x726 <__floatsisf+0x5e>
     71c:	66 23       	and	r22, r22
     71e:	71 f0       	breq	.+28     	; 0x73c <__floatsisf+0x74>
     720:	96 e8       	ldi	r25, 0x86	; 134
     722:	86 2f       	mov	r24, r22
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	60 e0       	ldi	r22, 0x00	; 0
     728:	2a f0       	brmi	.+10     	; 0x734 <__floatsisf+0x6c>
     72a:	9a 95       	dec	r25
     72c:	66 0f       	add	r22, r22
     72e:	77 1f       	adc	r23, r23
     730:	88 1f       	adc	r24, r24
     732:	da f7       	brpl	.-10     	; 0x72a <__floatsisf+0x62>
     734:	88 0f       	add	r24, r24
     736:	96 95       	lsr	r25
     738:	87 95       	ror	r24
     73a:	97 f9       	bld	r25, 7
     73c:	08 95       	ret

0000073e <__fp_inf>:
     73e:	97 f9       	bld	r25, 7
     740:	9f 67       	ori	r25, 0x7F	; 127
     742:	80 e8       	ldi	r24, 0x80	; 128
     744:	70 e0       	ldi	r23, 0x00	; 0
     746:	60 e0       	ldi	r22, 0x00	; 0
     748:	08 95       	ret

0000074a <__fp_nan>:
     74a:	9f ef       	ldi	r25, 0xFF	; 255
     74c:	80 ec       	ldi	r24, 0xC0	; 192
     74e:	08 95       	ret

00000750 <__fp_pscA>:
     750:	00 24       	eor	r0, r0
     752:	0a 94       	dec	r0
     754:	16 16       	cp	r1, r22
     756:	17 06       	cpc	r1, r23
     758:	18 06       	cpc	r1, r24
     75a:	09 06       	cpc	r0, r25
     75c:	08 95       	ret

0000075e <__fp_pscB>:
     75e:	00 24       	eor	r0, r0
     760:	0a 94       	dec	r0
     762:	12 16       	cp	r1, r18
     764:	13 06       	cpc	r1, r19
     766:	14 06       	cpc	r1, r20
     768:	05 06       	cpc	r0, r21
     76a:	08 95       	ret

0000076c <__fp_round>:
     76c:	09 2e       	mov	r0, r25
     76e:	03 94       	inc	r0
     770:	00 0c       	add	r0, r0
     772:	11 f4       	brne	.+4      	; 0x778 <__fp_round+0xc>
     774:	88 23       	and	r24, r24
     776:	52 f0       	brmi	.+20     	; 0x78c <__fp_round+0x20>
     778:	bb 0f       	add	r27, r27
     77a:	40 f4       	brcc	.+16     	; 0x78c <__fp_round+0x20>
     77c:	bf 2b       	or	r27, r31
     77e:	11 f4       	brne	.+4      	; 0x784 <__fp_round+0x18>
     780:	60 ff       	sbrs	r22, 0
     782:	04 c0       	rjmp	.+8      	; 0x78c <__fp_round+0x20>
     784:	6f 5f       	subi	r22, 0xFF	; 255
     786:	7f 4f       	sbci	r23, 0xFF	; 255
     788:	8f 4f       	sbci	r24, 0xFF	; 255
     78a:	9f 4f       	sbci	r25, 0xFF	; 255
     78c:	08 95       	ret

0000078e <__fp_split3>:
     78e:	57 fd       	sbrc	r21, 7
     790:	90 58       	subi	r25, 0x80	; 128
     792:	44 0f       	add	r20, r20
     794:	55 1f       	adc	r21, r21
     796:	59 f0       	breq	.+22     	; 0x7ae <__fp_splitA+0x10>
     798:	5f 3f       	cpi	r21, 0xFF	; 255
     79a:	71 f0       	breq	.+28     	; 0x7b8 <__fp_splitA+0x1a>
     79c:	47 95       	ror	r20

0000079e <__fp_splitA>:
     79e:	88 0f       	add	r24, r24
     7a0:	97 fb       	bst	r25, 7
     7a2:	99 1f       	adc	r25, r25
     7a4:	61 f0       	breq	.+24     	; 0x7be <__fp_splitA+0x20>
     7a6:	9f 3f       	cpi	r25, 0xFF	; 255
     7a8:	79 f0       	breq	.+30     	; 0x7c8 <__fp_splitA+0x2a>
     7aa:	87 95       	ror	r24
     7ac:	08 95       	ret
     7ae:	12 16       	cp	r1, r18
     7b0:	13 06       	cpc	r1, r19
     7b2:	14 06       	cpc	r1, r20
     7b4:	55 1f       	adc	r21, r21
     7b6:	f2 cf       	rjmp	.-28     	; 0x79c <__fp_split3+0xe>
     7b8:	46 95       	lsr	r20
     7ba:	f1 df       	rcall	.-30     	; 0x79e <__fp_splitA>
     7bc:	08 c0       	rjmp	.+16     	; 0x7ce <__fp_splitA+0x30>
     7be:	16 16       	cp	r1, r22
     7c0:	17 06       	cpc	r1, r23
     7c2:	18 06       	cpc	r1, r24
     7c4:	99 1f       	adc	r25, r25
     7c6:	f1 cf       	rjmp	.-30     	; 0x7aa <__fp_splitA+0xc>
     7c8:	86 95       	lsr	r24
     7ca:	71 05       	cpc	r23, r1
     7cc:	61 05       	cpc	r22, r1
     7ce:	08 94       	sec
     7d0:	08 95       	ret

000007d2 <__fp_zero>:
     7d2:	e8 94       	clt

000007d4 <__fp_szero>:
     7d4:	bb 27       	eor	r27, r27
     7d6:	66 27       	eor	r22, r22
     7d8:	77 27       	eor	r23, r23
     7da:	cb 01       	movw	r24, r22
     7dc:	97 f9       	bld	r25, 7
     7de:	08 95       	ret

000007e0 <__mulsf3>:
     7e0:	0b d0       	rcall	.+22     	; 0x7f8 <__mulsf3x>
     7e2:	c4 cf       	rjmp	.-120    	; 0x76c <__fp_round>
     7e4:	b5 df       	rcall	.-150    	; 0x750 <__fp_pscA>
     7e6:	28 f0       	brcs	.+10     	; 0x7f2 <__mulsf3+0x12>
     7e8:	ba df       	rcall	.-140    	; 0x75e <__fp_pscB>
     7ea:	18 f0       	brcs	.+6      	; 0x7f2 <__mulsf3+0x12>
     7ec:	95 23       	and	r25, r21
     7ee:	09 f0       	breq	.+2      	; 0x7f2 <__mulsf3+0x12>
     7f0:	a6 cf       	rjmp	.-180    	; 0x73e <__fp_inf>
     7f2:	ab cf       	rjmp	.-170    	; 0x74a <__fp_nan>
     7f4:	11 24       	eor	r1, r1
     7f6:	ee cf       	rjmp	.-36     	; 0x7d4 <__fp_szero>

000007f8 <__mulsf3x>:
     7f8:	ca df       	rcall	.-108    	; 0x78e <__fp_split3>
     7fa:	a0 f3       	brcs	.-24     	; 0x7e4 <__mulsf3+0x4>

000007fc <__mulsf3_pse>:
     7fc:	95 9f       	mul	r25, r21
     7fe:	d1 f3       	breq	.-12     	; 0x7f4 <__mulsf3+0x14>
     800:	95 0f       	add	r25, r21
     802:	50 e0       	ldi	r21, 0x00	; 0
     804:	55 1f       	adc	r21, r21
     806:	62 9f       	mul	r22, r18
     808:	f0 01       	movw	r30, r0
     80a:	72 9f       	mul	r23, r18
     80c:	bb 27       	eor	r27, r27
     80e:	f0 0d       	add	r31, r0
     810:	b1 1d       	adc	r27, r1
     812:	63 9f       	mul	r22, r19
     814:	aa 27       	eor	r26, r26
     816:	f0 0d       	add	r31, r0
     818:	b1 1d       	adc	r27, r1
     81a:	aa 1f       	adc	r26, r26
     81c:	64 9f       	mul	r22, r20
     81e:	66 27       	eor	r22, r22
     820:	b0 0d       	add	r27, r0
     822:	a1 1d       	adc	r26, r1
     824:	66 1f       	adc	r22, r22
     826:	82 9f       	mul	r24, r18
     828:	22 27       	eor	r18, r18
     82a:	b0 0d       	add	r27, r0
     82c:	a1 1d       	adc	r26, r1
     82e:	62 1f       	adc	r22, r18
     830:	73 9f       	mul	r23, r19
     832:	b0 0d       	add	r27, r0
     834:	a1 1d       	adc	r26, r1
     836:	62 1f       	adc	r22, r18
     838:	83 9f       	mul	r24, r19
     83a:	a0 0d       	add	r26, r0
     83c:	61 1d       	adc	r22, r1
     83e:	22 1f       	adc	r18, r18
     840:	74 9f       	mul	r23, r20
     842:	33 27       	eor	r19, r19
     844:	a0 0d       	add	r26, r0
     846:	61 1d       	adc	r22, r1
     848:	23 1f       	adc	r18, r19
     84a:	84 9f       	mul	r24, r20
     84c:	60 0d       	add	r22, r0
     84e:	21 1d       	adc	r18, r1
     850:	82 2f       	mov	r24, r18
     852:	76 2f       	mov	r23, r22
     854:	6a 2f       	mov	r22, r26
     856:	11 24       	eor	r1, r1
     858:	9f 57       	subi	r25, 0x7F	; 127
     85a:	50 40       	sbci	r21, 0x00	; 0
     85c:	8a f0       	brmi	.+34     	; 0x880 <__mulsf3_pse+0x84>
     85e:	e1 f0       	breq	.+56     	; 0x898 <__mulsf3_pse+0x9c>
     860:	88 23       	and	r24, r24
     862:	4a f0       	brmi	.+18     	; 0x876 <__mulsf3_pse+0x7a>
     864:	ee 0f       	add	r30, r30
     866:	ff 1f       	adc	r31, r31
     868:	bb 1f       	adc	r27, r27
     86a:	66 1f       	adc	r22, r22
     86c:	77 1f       	adc	r23, r23
     86e:	88 1f       	adc	r24, r24
     870:	91 50       	subi	r25, 0x01	; 1
     872:	50 40       	sbci	r21, 0x00	; 0
     874:	a9 f7       	brne	.-22     	; 0x860 <__mulsf3_pse+0x64>
     876:	9e 3f       	cpi	r25, 0xFE	; 254
     878:	51 05       	cpc	r21, r1
     87a:	70 f0       	brcs	.+28     	; 0x898 <__mulsf3_pse+0x9c>
     87c:	60 cf       	rjmp	.-320    	; 0x73e <__fp_inf>
     87e:	aa cf       	rjmp	.-172    	; 0x7d4 <__fp_szero>
     880:	5f 3f       	cpi	r21, 0xFF	; 255
     882:	ec f3       	brlt	.-6      	; 0x87e <__mulsf3_pse+0x82>
     884:	98 3e       	cpi	r25, 0xE8	; 232
     886:	dc f3       	brlt	.-10     	; 0x87e <__mulsf3_pse+0x82>
     888:	86 95       	lsr	r24
     88a:	77 95       	ror	r23
     88c:	67 95       	ror	r22
     88e:	b7 95       	ror	r27
     890:	f7 95       	ror	r31
     892:	e7 95       	ror	r30
     894:	9f 5f       	subi	r25, 0xFF	; 255
     896:	c1 f7       	brne	.-16     	; 0x888 <__mulsf3_pse+0x8c>
     898:	fe 2b       	or	r31, r30
     89a:	88 0f       	add	r24, r24
     89c:	91 1d       	adc	r25, r1
     89e:	96 95       	lsr	r25
     8a0:	87 95       	ror	r24
     8a2:	97 f9       	bld	r25, 7
     8a4:	08 95       	ret

000008a6 <fdevopen>:
     8a6:	0f 93       	push	r16
     8a8:	1f 93       	push	r17
     8aa:	cf 93       	push	r28
     8ac:	df 93       	push	r29
     8ae:	ec 01       	movw	r28, r24
     8b0:	8b 01       	movw	r16, r22
     8b2:	00 97       	sbiw	r24, 0x00	; 0
     8b4:	31 f4       	brne	.+12     	; 0x8c2 <fdevopen+0x1c>
     8b6:	61 15       	cp	r22, r1
     8b8:	71 05       	cpc	r23, r1
     8ba:	19 f4       	brne	.+6      	; 0x8c2 <fdevopen+0x1c>
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	37 c0       	rjmp	.+110    	; 0x930 <fdevopen+0x8a>
     8c2:	6e e0       	ldi	r22, 0x0E	; 14
     8c4:	70 e0       	ldi	r23, 0x00	; 0
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	63 d2       	rcall	.+1222   	; 0xd92 <calloc>
     8cc:	fc 01       	movw	r30, r24
     8ce:	00 97       	sbiw	r24, 0x00	; 0
     8d0:	a9 f3       	breq	.-22     	; 0x8bc <fdevopen+0x16>
     8d2:	80 e8       	ldi	r24, 0x80	; 128
     8d4:	83 83       	std	Z+3, r24	; 0x03
     8d6:	01 15       	cp	r16, r1
     8d8:	11 05       	cpc	r17, r1
     8da:	71 f0       	breq	.+28     	; 0x8f8 <fdevopen+0x52>
     8dc:	13 87       	std	Z+11, r17	; 0x0b
     8de:	02 87       	std	Z+10, r16	; 0x0a
     8e0:	81 e8       	ldi	r24, 0x81	; 129
     8e2:	83 83       	std	Z+3, r24	; 0x03
     8e4:	80 91 bb 02 	lds	r24, 0x02BB
     8e8:	90 91 bc 02 	lds	r25, 0x02BC
     8ec:	89 2b       	or	r24, r25
     8ee:	21 f4       	brne	.+8      	; 0x8f8 <fdevopen+0x52>
     8f0:	f0 93 bc 02 	sts	0x02BC, r31
     8f4:	e0 93 bb 02 	sts	0x02BB, r30
     8f8:	20 97       	sbiw	r28, 0x00	; 0
     8fa:	c9 f0       	breq	.+50     	; 0x92e <fdevopen+0x88>
     8fc:	d1 87       	std	Z+9, r29	; 0x09
     8fe:	c0 87       	std	Z+8, r28	; 0x08
     900:	83 81       	ldd	r24, Z+3	; 0x03
     902:	82 60       	ori	r24, 0x02	; 2
     904:	83 83       	std	Z+3, r24	; 0x03
     906:	80 91 bd 02 	lds	r24, 0x02BD
     90a:	90 91 be 02 	lds	r25, 0x02BE
     90e:	89 2b       	or	r24, r25
     910:	71 f4       	brne	.+28     	; 0x92e <fdevopen+0x88>
     912:	f0 93 be 02 	sts	0x02BE, r31
     916:	e0 93 bd 02 	sts	0x02BD, r30
     91a:	80 91 bf 02 	lds	r24, 0x02BF
     91e:	90 91 c0 02 	lds	r25, 0x02C0
     922:	89 2b       	or	r24, r25
     924:	21 f4       	brne	.+8      	; 0x92e <fdevopen+0x88>
     926:	f0 93 c0 02 	sts	0x02C0, r31
     92a:	e0 93 bf 02 	sts	0x02BF, r30
     92e:	cf 01       	movw	r24, r30
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	1f 91       	pop	r17
     936:	0f 91       	pop	r16
     938:	08 95       	ret

0000093a <printf>:
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	cd b7       	in	r28, 0x3d	; 61
     940:	de b7       	in	r29, 0x3e	; 62
     942:	fe 01       	movw	r30, r28
     944:	36 96       	adiw	r30, 0x06	; 6
     946:	61 91       	ld	r22, Z+
     948:	71 91       	ld	r23, Z+
     94a:	af 01       	movw	r20, r30
     94c:	80 91 bd 02 	lds	r24, 0x02BD
     950:	90 91 be 02 	lds	r25, 0x02BE
     954:	30 d0       	rcall	.+96     	; 0x9b6 <vfprintf>
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	08 95       	ret

0000095c <puts>:
     95c:	0f 93       	push	r16
     95e:	1f 93       	push	r17
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	e0 91 bd 02 	lds	r30, 0x02BD
     968:	f0 91 be 02 	lds	r31, 0x02BE
     96c:	23 81       	ldd	r18, Z+3	; 0x03
     96e:	21 ff       	sbrs	r18, 1
     970:	1b c0       	rjmp	.+54     	; 0x9a8 <puts+0x4c>
     972:	ec 01       	movw	r28, r24
     974:	00 e0       	ldi	r16, 0x00	; 0
     976:	10 e0       	ldi	r17, 0x00	; 0
     978:	89 91       	ld	r24, Y+
     97a:	60 91 bd 02 	lds	r22, 0x02BD
     97e:	70 91 be 02 	lds	r23, 0x02BE
     982:	db 01       	movw	r26, r22
     984:	18 96       	adiw	r26, 0x08	; 8
     986:	ed 91       	ld	r30, X+
     988:	fc 91       	ld	r31, X
     98a:	19 97       	sbiw	r26, 0x09	; 9
     98c:	88 23       	and	r24, r24
     98e:	31 f0       	breq	.+12     	; 0x99c <puts+0x40>
     990:	19 95       	eicall
     992:	89 2b       	or	r24, r25
     994:	89 f3       	breq	.-30     	; 0x978 <puts+0x1c>
     996:	0f ef       	ldi	r16, 0xFF	; 255
     998:	1f ef       	ldi	r17, 0xFF	; 255
     99a:	ee cf       	rjmp	.-36     	; 0x978 <puts+0x1c>
     99c:	8a e0       	ldi	r24, 0x0A	; 10
     99e:	19 95       	eicall
     9a0:	89 2b       	or	r24, r25
     9a2:	11 f4       	brne	.+4      	; 0x9a8 <puts+0x4c>
     9a4:	c8 01       	movw	r24, r16
     9a6:	02 c0       	rjmp	.+4      	; 0x9ac <puts+0x50>
     9a8:	8f ef       	ldi	r24, 0xFF	; 255
     9aa:	9f ef       	ldi	r25, 0xFF	; 255
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	1f 91       	pop	r17
     9b2:	0f 91       	pop	r16
     9b4:	08 95       	ret

000009b6 <vfprintf>:
     9b6:	2f 92       	push	r2
     9b8:	3f 92       	push	r3
     9ba:	4f 92       	push	r4
     9bc:	5f 92       	push	r5
     9be:	6f 92       	push	r6
     9c0:	7f 92       	push	r7
     9c2:	8f 92       	push	r8
     9c4:	9f 92       	push	r9
     9c6:	af 92       	push	r10
     9c8:	bf 92       	push	r11
     9ca:	cf 92       	push	r12
     9cc:	df 92       	push	r13
     9ce:	ef 92       	push	r14
     9d0:	ff 92       	push	r15
     9d2:	0f 93       	push	r16
     9d4:	1f 93       	push	r17
     9d6:	cf 93       	push	r28
     9d8:	df 93       	push	r29
     9da:	cd b7       	in	r28, 0x3d	; 61
     9dc:	de b7       	in	r29, 0x3e	; 62
     9de:	2c 97       	sbiw	r28, 0x0c	; 12
     9e0:	0f b6       	in	r0, 0x3f	; 63
     9e2:	f8 94       	cli
     9e4:	de bf       	out	0x3e, r29	; 62
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	cd bf       	out	0x3d, r28	; 61
     9ea:	7c 01       	movw	r14, r24
     9ec:	6b 01       	movw	r12, r22
     9ee:	8a 01       	movw	r16, r20
     9f0:	fc 01       	movw	r30, r24
     9f2:	17 82       	std	Z+7, r1	; 0x07
     9f4:	16 82       	std	Z+6, r1	; 0x06
     9f6:	83 81       	ldd	r24, Z+3	; 0x03
     9f8:	81 ff       	sbrs	r24, 1
     9fa:	b0 c1       	rjmp	.+864    	; 0xd5c <vfprintf+0x3a6>
     9fc:	ce 01       	movw	r24, r28
     9fe:	01 96       	adiw	r24, 0x01	; 1
     a00:	4c 01       	movw	r8, r24
     a02:	f7 01       	movw	r30, r14
     a04:	93 81       	ldd	r25, Z+3	; 0x03
     a06:	f6 01       	movw	r30, r12
     a08:	93 fd       	sbrc	r25, 3
     a0a:	85 91       	lpm	r24, Z+
     a0c:	93 ff       	sbrs	r25, 3
     a0e:	81 91       	ld	r24, Z+
     a10:	6f 01       	movw	r12, r30
     a12:	88 23       	and	r24, r24
     a14:	09 f4       	brne	.+2      	; 0xa18 <vfprintf+0x62>
     a16:	9e c1       	rjmp	.+828    	; 0xd54 <vfprintf+0x39e>
     a18:	85 32       	cpi	r24, 0x25	; 37
     a1a:	39 f4       	brne	.+14     	; 0xa2a <vfprintf+0x74>
     a1c:	93 fd       	sbrc	r25, 3
     a1e:	85 91       	lpm	r24, Z+
     a20:	93 ff       	sbrs	r25, 3
     a22:	81 91       	ld	r24, Z+
     a24:	6f 01       	movw	r12, r30
     a26:	85 32       	cpi	r24, 0x25	; 37
     a28:	21 f4       	brne	.+8      	; 0xa32 <vfprintf+0x7c>
     a2a:	b7 01       	movw	r22, r14
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0f d3       	rcall	.+1566   	; 0x104e <fputc>
     a30:	e8 cf       	rjmp	.-48     	; 0xa02 <vfprintf+0x4c>
     a32:	51 2c       	mov	r5, r1
     a34:	31 2c       	mov	r3, r1
     a36:	20 e0       	ldi	r18, 0x00	; 0
     a38:	20 32       	cpi	r18, 0x20	; 32
     a3a:	a0 f4       	brcc	.+40     	; 0xa64 <vfprintf+0xae>
     a3c:	8b 32       	cpi	r24, 0x2B	; 43
     a3e:	69 f0       	breq	.+26     	; 0xa5a <vfprintf+0xa4>
     a40:	30 f4       	brcc	.+12     	; 0xa4e <vfprintf+0x98>
     a42:	80 32       	cpi	r24, 0x20	; 32
     a44:	59 f0       	breq	.+22     	; 0xa5c <vfprintf+0xa6>
     a46:	83 32       	cpi	r24, 0x23	; 35
     a48:	69 f4       	brne	.+26     	; 0xa64 <vfprintf+0xae>
     a4a:	20 61       	ori	r18, 0x10	; 16
     a4c:	2c c0       	rjmp	.+88     	; 0xaa6 <vfprintf+0xf0>
     a4e:	8d 32       	cpi	r24, 0x2D	; 45
     a50:	39 f0       	breq	.+14     	; 0xa60 <vfprintf+0xaa>
     a52:	80 33       	cpi	r24, 0x30	; 48
     a54:	39 f4       	brne	.+14     	; 0xa64 <vfprintf+0xae>
     a56:	21 60       	ori	r18, 0x01	; 1
     a58:	26 c0       	rjmp	.+76     	; 0xaa6 <vfprintf+0xf0>
     a5a:	22 60       	ori	r18, 0x02	; 2
     a5c:	24 60       	ori	r18, 0x04	; 4
     a5e:	23 c0       	rjmp	.+70     	; 0xaa6 <vfprintf+0xf0>
     a60:	28 60       	ori	r18, 0x08	; 8
     a62:	21 c0       	rjmp	.+66     	; 0xaa6 <vfprintf+0xf0>
     a64:	27 fd       	sbrc	r18, 7
     a66:	27 c0       	rjmp	.+78     	; 0xab6 <vfprintf+0x100>
     a68:	30 ed       	ldi	r19, 0xD0	; 208
     a6a:	38 0f       	add	r19, r24
     a6c:	3a 30       	cpi	r19, 0x0A	; 10
     a6e:	78 f4       	brcc	.+30     	; 0xa8e <vfprintf+0xd8>
     a70:	26 ff       	sbrs	r18, 6
     a72:	06 c0       	rjmp	.+12     	; 0xa80 <vfprintf+0xca>
     a74:	fa e0       	ldi	r31, 0x0A	; 10
     a76:	5f 9e       	mul	r5, r31
     a78:	30 0d       	add	r19, r0
     a7a:	11 24       	eor	r1, r1
     a7c:	53 2e       	mov	r5, r19
     a7e:	13 c0       	rjmp	.+38     	; 0xaa6 <vfprintf+0xf0>
     a80:	8a e0       	ldi	r24, 0x0A	; 10
     a82:	38 9e       	mul	r3, r24
     a84:	30 0d       	add	r19, r0
     a86:	11 24       	eor	r1, r1
     a88:	33 2e       	mov	r3, r19
     a8a:	20 62       	ori	r18, 0x20	; 32
     a8c:	0c c0       	rjmp	.+24     	; 0xaa6 <vfprintf+0xf0>
     a8e:	8e 32       	cpi	r24, 0x2E	; 46
     a90:	21 f4       	brne	.+8      	; 0xa9a <vfprintf+0xe4>
     a92:	26 fd       	sbrc	r18, 6
     a94:	5f c1       	rjmp	.+702    	; 0xd54 <vfprintf+0x39e>
     a96:	20 64       	ori	r18, 0x40	; 64
     a98:	06 c0       	rjmp	.+12     	; 0xaa6 <vfprintf+0xf0>
     a9a:	8c 36       	cpi	r24, 0x6C	; 108
     a9c:	11 f4       	brne	.+4      	; 0xaa2 <vfprintf+0xec>
     a9e:	20 68       	ori	r18, 0x80	; 128
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <vfprintf+0xf0>
     aa2:	88 36       	cpi	r24, 0x68	; 104
     aa4:	41 f4       	brne	.+16     	; 0xab6 <vfprintf+0x100>
     aa6:	f6 01       	movw	r30, r12
     aa8:	93 fd       	sbrc	r25, 3
     aaa:	85 91       	lpm	r24, Z+
     aac:	93 ff       	sbrs	r25, 3
     aae:	81 91       	ld	r24, Z+
     ab0:	6f 01       	movw	r12, r30
     ab2:	81 11       	cpse	r24, r1
     ab4:	c1 cf       	rjmp	.-126    	; 0xa38 <vfprintf+0x82>
     ab6:	98 2f       	mov	r25, r24
     ab8:	9f 7d       	andi	r25, 0xDF	; 223
     aba:	95 54       	subi	r25, 0x45	; 69
     abc:	93 30       	cpi	r25, 0x03	; 3
     abe:	28 f4       	brcc	.+10     	; 0xaca <vfprintf+0x114>
     ac0:	0c 5f       	subi	r16, 0xFC	; 252
     ac2:	1f 4f       	sbci	r17, 0xFF	; 255
     ac4:	ff e3       	ldi	r31, 0x3F	; 63
     ac6:	f9 83       	std	Y+1, r31	; 0x01
     ac8:	0d c0       	rjmp	.+26     	; 0xae4 <vfprintf+0x12e>
     aca:	83 36       	cpi	r24, 0x63	; 99
     acc:	31 f0       	breq	.+12     	; 0xada <vfprintf+0x124>
     ace:	83 37       	cpi	r24, 0x73	; 115
     ad0:	71 f0       	breq	.+28     	; 0xaee <vfprintf+0x138>
     ad2:	83 35       	cpi	r24, 0x53	; 83
     ad4:	09 f0       	breq	.+2      	; 0xad8 <vfprintf+0x122>
     ad6:	57 c0       	rjmp	.+174    	; 0xb86 <vfprintf+0x1d0>
     ad8:	21 c0       	rjmp	.+66     	; 0xb1c <vfprintf+0x166>
     ada:	f8 01       	movw	r30, r16
     adc:	80 81       	ld	r24, Z
     ade:	89 83       	std	Y+1, r24	; 0x01
     ae0:	0e 5f       	subi	r16, 0xFE	; 254
     ae2:	1f 4f       	sbci	r17, 0xFF	; 255
     ae4:	44 24       	eor	r4, r4
     ae6:	43 94       	inc	r4
     ae8:	51 2c       	mov	r5, r1
     aea:	54 01       	movw	r10, r8
     aec:	14 c0       	rjmp	.+40     	; 0xb16 <vfprintf+0x160>
     aee:	38 01       	movw	r6, r16
     af0:	f2 e0       	ldi	r31, 0x02	; 2
     af2:	6f 0e       	add	r6, r31
     af4:	71 1c       	adc	r7, r1
     af6:	f8 01       	movw	r30, r16
     af8:	a0 80       	ld	r10, Z
     afa:	b1 80       	ldd	r11, Z+1	; 0x01
     afc:	26 ff       	sbrs	r18, 6
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <vfprintf+0x150>
     b00:	65 2d       	mov	r22, r5
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	02 c0       	rjmp	.+4      	; 0xb0a <vfprintf+0x154>
     b06:	6f ef       	ldi	r22, 0xFF	; 255
     b08:	7f ef       	ldi	r23, 0xFF	; 255
     b0a:	c5 01       	movw	r24, r10
     b0c:	2c 87       	std	Y+12, r18	; 0x0c
     b0e:	94 d2       	rcall	.+1320   	; 0x1038 <strnlen>
     b10:	2c 01       	movw	r4, r24
     b12:	83 01       	movw	r16, r6
     b14:	2c 85       	ldd	r18, Y+12	; 0x0c
     b16:	2f 77       	andi	r18, 0x7F	; 127
     b18:	22 2e       	mov	r2, r18
     b1a:	16 c0       	rjmp	.+44     	; 0xb48 <vfprintf+0x192>
     b1c:	38 01       	movw	r6, r16
     b1e:	f2 e0       	ldi	r31, 0x02	; 2
     b20:	6f 0e       	add	r6, r31
     b22:	71 1c       	adc	r7, r1
     b24:	f8 01       	movw	r30, r16
     b26:	a0 80       	ld	r10, Z
     b28:	b1 80       	ldd	r11, Z+1	; 0x01
     b2a:	26 ff       	sbrs	r18, 6
     b2c:	03 c0       	rjmp	.+6      	; 0xb34 <vfprintf+0x17e>
     b2e:	65 2d       	mov	r22, r5
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	02 c0       	rjmp	.+4      	; 0xb38 <vfprintf+0x182>
     b34:	6f ef       	ldi	r22, 0xFF	; 255
     b36:	7f ef       	ldi	r23, 0xFF	; 255
     b38:	c5 01       	movw	r24, r10
     b3a:	2c 87       	std	Y+12, r18	; 0x0c
     b3c:	6b d2       	rcall	.+1238   	; 0x1014 <strnlen_P>
     b3e:	2c 01       	movw	r4, r24
     b40:	2c 85       	ldd	r18, Y+12	; 0x0c
     b42:	20 68       	ori	r18, 0x80	; 128
     b44:	22 2e       	mov	r2, r18
     b46:	83 01       	movw	r16, r6
     b48:	23 fc       	sbrc	r2, 3
     b4a:	19 c0       	rjmp	.+50     	; 0xb7e <vfprintf+0x1c8>
     b4c:	83 2d       	mov	r24, r3
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	48 16       	cp	r4, r24
     b52:	59 06       	cpc	r5, r25
     b54:	a0 f4       	brcc	.+40     	; 0xb7e <vfprintf+0x1c8>
     b56:	b7 01       	movw	r22, r14
     b58:	80 e2       	ldi	r24, 0x20	; 32
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	78 d2       	rcall	.+1264   	; 0x104e <fputc>
     b5e:	3a 94       	dec	r3
     b60:	f5 cf       	rjmp	.-22     	; 0xb4c <vfprintf+0x196>
     b62:	f5 01       	movw	r30, r10
     b64:	27 fc       	sbrc	r2, 7
     b66:	85 91       	lpm	r24, Z+
     b68:	27 fe       	sbrs	r2, 7
     b6a:	81 91       	ld	r24, Z+
     b6c:	5f 01       	movw	r10, r30
     b6e:	b7 01       	movw	r22, r14
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	6d d2       	rcall	.+1242   	; 0x104e <fputc>
     b74:	31 10       	cpse	r3, r1
     b76:	3a 94       	dec	r3
     b78:	f1 e0       	ldi	r31, 0x01	; 1
     b7a:	4f 1a       	sub	r4, r31
     b7c:	51 08       	sbc	r5, r1
     b7e:	41 14       	cp	r4, r1
     b80:	51 04       	cpc	r5, r1
     b82:	79 f7       	brne	.-34     	; 0xb62 <vfprintf+0x1ac>
     b84:	de c0       	rjmp	.+444    	; 0xd42 <vfprintf+0x38c>
     b86:	84 36       	cpi	r24, 0x64	; 100
     b88:	11 f0       	breq	.+4      	; 0xb8e <vfprintf+0x1d8>
     b8a:	89 36       	cpi	r24, 0x69	; 105
     b8c:	31 f5       	brne	.+76     	; 0xbda <vfprintf+0x224>
     b8e:	f8 01       	movw	r30, r16
     b90:	27 ff       	sbrs	r18, 7
     b92:	07 c0       	rjmp	.+14     	; 0xba2 <vfprintf+0x1ec>
     b94:	60 81       	ld	r22, Z
     b96:	71 81       	ldd	r23, Z+1	; 0x01
     b98:	82 81       	ldd	r24, Z+2	; 0x02
     b9a:	93 81       	ldd	r25, Z+3	; 0x03
     b9c:	0c 5f       	subi	r16, 0xFC	; 252
     b9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ba0:	08 c0       	rjmp	.+16     	; 0xbb2 <vfprintf+0x1fc>
     ba2:	60 81       	ld	r22, Z
     ba4:	71 81       	ldd	r23, Z+1	; 0x01
     ba6:	88 27       	eor	r24, r24
     ba8:	77 fd       	sbrc	r23, 7
     baa:	80 95       	com	r24
     bac:	98 2f       	mov	r25, r24
     bae:	0e 5f       	subi	r16, 0xFE	; 254
     bb0:	1f 4f       	sbci	r17, 0xFF	; 255
     bb2:	2f 76       	andi	r18, 0x6F	; 111
     bb4:	b2 2e       	mov	r11, r18
     bb6:	97 ff       	sbrs	r25, 7
     bb8:	09 c0       	rjmp	.+18     	; 0xbcc <vfprintf+0x216>
     bba:	90 95       	com	r25
     bbc:	80 95       	com	r24
     bbe:	70 95       	com	r23
     bc0:	61 95       	neg	r22
     bc2:	7f 4f       	sbci	r23, 0xFF	; 255
     bc4:	8f 4f       	sbci	r24, 0xFF	; 255
     bc6:	9f 4f       	sbci	r25, 0xFF	; 255
     bc8:	20 68       	ori	r18, 0x80	; 128
     bca:	b2 2e       	mov	r11, r18
     bcc:	2a e0       	ldi	r18, 0x0A	; 10
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	a4 01       	movw	r20, r8
     bd2:	6f d2       	rcall	.+1246   	; 0x10b2 <__ultoa_invert>
     bd4:	a8 2e       	mov	r10, r24
     bd6:	a8 18       	sub	r10, r8
     bd8:	43 c0       	rjmp	.+134    	; 0xc60 <vfprintf+0x2aa>
     bda:	85 37       	cpi	r24, 0x75	; 117
     bdc:	29 f4       	brne	.+10     	; 0xbe8 <vfprintf+0x232>
     bde:	2f 7e       	andi	r18, 0xEF	; 239
     be0:	b2 2e       	mov	r11, r18
     be2:	2a e0       	ldi	r18, 0x0A	; 10
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	25 c0       	rjmp	.+74     	; 0xc32 <vfprintf+0x27c>
     be8:	f2 2f       	mov	r31, r18
     bea:	f9 7f       	andi	r31, 0xF9	; 249
     bec:	bf 2e       	mov	r11, r31
     bee:	8f 36       	cpi	r24, 0x6F	; 111
     bf0:	c1 f0       	breq	.+48     	; 0xc22 <vfprintf+0x26c>
     bf2:	18 f4       	brcc	.+6      	; 0xbfa <vfprintf+0x244>
     bf4:	88 35       	cpi	r24, 0x58	; 88
     bf6:	79 f0       	breq	.+30     	; 0xc16 <vfprintf+0x260>
     bf8:	ad c0       	rjmp	.+346    	; 0xd54 <vfprintf+0x39e>
     bfa:	80 37       	cpi	r24, 0x70	; 112
     bfc:	19 f0       	breq	.+6      	; 0xc04 <vfprintf+0x24e>
     bfe:	88 37       	cpi	r24, 0x78	; 120
     c00:	21 f0       	breq	.+8      	; 0xc0a <vfprintf+0x254>
     c02:	a8 c0       	rjmp	.+336    	; 0xd54 <vfprintf+0x39e>
     c04:	2f 2f       	mov	r18, r31
     c06:	20 61       	ori	r18, 0x10	; 16
     c08:	b2 2e       	mov	r11, r18
     c0a:	b4 fe       	sbrs	r11, 4
     c0c:	0d c0       	rjmp	.+26     	; 0xc28 <vfprintf+0x272>
     c0e:	8b 2d       	mov	r24, r11
     c10:	84 60       	ori	r24, 0x04	; 4
     c12:	b8 2e       	mov	r11, r24
     c14:	09 c0       	rjmp	.+18     	; 0xc28 <vfprintf+0x272>
     c16:	24 ff       	sbrs	r18, 4
     c18:	0a c0       	rjmp	.+20     	; 0xc2e <vfprintf+0x278>
     c1a:	9f 2f       	mov	r25, r31
     c1c:	96 60       	ori	r25, 0x06	; 6
     c1e:	b9 2e       	mov	r11, r25
     c20:	06 c0       	rjmp	.+12     	; 0xc2e <vfprintf+0x278>
     c22:	28 e0       	ldi	r18, 0x08	; 8
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	05 c0       	rjmp	.+10     	; 0xc32 <vfprintf+0x27c>
     c28:	20 e1       	ldi	r18, 0x10	; 16
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	02 c0       	rjmp	.+4      	; 0xc32 <vfprintf+0x27c>
     c2e:	20 e1       	ldi	r18, 0x10	; 16
     c30:	32 e0       	ldi	r19, 0x02	; 2
     c32:	f8 01       	movw	r30, r16
     c34:	b7 fe       	sbrs	r11, 7
     c36:	07 c0       	rjmp	.+14     	; 0xc46 <vfprintf+0x290>
     c38:	60 81       	ld	r22, Z
     c3a:	71 81       	ldd	r23, Z+1	; 0x01
     c3c:	82 81       	ldd	r24, Z+2	; 0x02
     c3e:	93 81       	ldd	r25, Z+3	; 0x03
     c40:	0c 5f       	subi	r16, 0xFC	; 252
     c42:	1f 4f       	sbci	r17, 0xFF	; 255
     c44:	06 c0       	rjmp	.+12     	; 0xc52 <vfprintf+0x29c>
     c46:	60 81       	ld	r22, Z
     c48:	71 81       	ldd	r23, Z+1	; 0x01
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	0e 5f       	subi	r16, 0xFE	; 254
     c50:	1f 4f       	sbci	r17, 0xFF	; 255
     c52:	a4 01       	movw	r20, r8
     c54:	2e d2       	rcall	.+1116   	; 0x10b2 <__ultoa_invert>
     c56:	a8 2e       	mov	r10, r24
     c58:	a8 18       	sub	r10, r8
     c5a:	fb 2d       	mov	r31, r11
     c5c:	ff 77       	andi	r31, 0x7F	; 127
     c5e:	bf 2e       	mov	r11, r31
     c60:	b6 fe       	sbrs	r11, 6
     c62:	0b c0       	rjmp	.+22     	; 0xc7a <vfprintf+0x2c4>
     c64:	2b 2d       	mov	r18, r11
     c66:	2e 7f       	andi	r18, 0xFE	; 254
     c68:	a5 14       	cp	r10, r5
     c6a:	50 f4       	brcc	.+20     	; 0xc80 <vfprintf+0x2ca>
     c6c:	b4 fe       	sbrs	r11, 4
     c6e:	0a c0       	rjmp	.+20     	; 0xc84 <vfprintf+0x2ce>
     c70:	b2 fc       	sbrc	r11, 2
     c72:	08 c0       	rjmp	.+16     	; 0xc84 <vfprintf+0x2ce>
     c74:	2b 2d       	mov	r18, r11
     c76:	2e 7e       	andi	r18, 0xEE	; 238
     c78:	05 c0       	rjmp	.+10     	; 0xc84 <vfprintf+0x2ce>
     c7a:	7a 2c       	mov	r7, r10
     c7c:	2b 2d       	mov	r18, r11
     c7e:	03 c0       	rjmp	.+6      	; 0xc86 <vfprintf+0x2d0>
     c80:	7a 2c       	mov	r7, r10
     c82:	01 c0       	rjmp	.+2      	; 0xc86 <vfprintf+0x2d0>
     c84:	75 2c       	mov	r7, r5
     c86:	24 ff       	sbrs	r18, 4
     c88:	0d c0       	rjmp	.+26     	; 0xca4 <vfprintf+0x2ee>
     c8a:	fe 01       	movw	r30, r28
     c8c:	ea 0d       	add	r30, r10
     c8e:	f1 1d       	adc	r31, r1
     c90:	80 81       	ld	r24, Z
     c92:	80 33       	cpi	r24, 0x30	; 48
     c94:	11 f4       	brne	.+4      	; 0xc9a <vfprintf+0x2e4>
     c96:	29 7e       	andi	r18, 0xE9	; 233
     c98:	09 c0       	rjmp	.+18     	; 0xcac <vfprintf+0x2f6>
     c9a:	22 ff       	sbrs	r18, 2
     c9c:	06 c0       	rjmp	.+12     	; 0xcaa <vfprintf+0x2f4>
     c9e:	73 94       	inc	r7
     ca0:	73 94       	inc	r7
     ca2:	04 c0       	rjmp	.+8      	; 0xcac <vfprintf+0x2f6>
     ca4:	82 2f       	mov	r24, r18
     ca6:	86 78       	andi	r24, 0x86	; 134
     ca8:	09 f0       	breq	.+2      	; 0xcac <vfprintf+0x2f6>
     caa:	73 94       	inc	r7
     cac:	23 fd       	sbrc	r18, 3
     cae:	12 c0       	rjmp	.+36     	; 0xcd4 <vfprintf+0x31e>
     cb0:	20 ff       	sbrs	r18, 0
     cb2:	06 c0       	rjmp	.+12     	; 0xcc0 <vfprintf+0x30a>
     cb4:	5a 2c       	mov	r5, r10
     cb6:	73 14       	cp	r7, r3
     cb8:	18 f4       	brcc	.+6      	; 0xcc0 <vfprintf+0x30a>
     cba:	53 0c       	add	r5, r3
     cbc:	57 18       	sub	r5, r7
     cbe:	73 2c       	mov	r7, r3
     cc0:	73 14       	cp	r7, r3
     cc2:	60 f4       	brcc	.+24     	; 0xcdc <vfprintf+0x326>
     cc4:	b7 01       	movw	r22, r14
     cc6:	80 e2       	ldi	r24, 0x20	; 32
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	2c 87       	std	Y+12, r18	; 0x0c
     ccc:	c0 d1       	rcall	.+896    	; 0x104e <fputc>
     cce:	73 94       	inc	r7
     cd0:	2c 85       	ldd	r18, Y+12	; 0x0c
     cd2:	f6 cf       	rjmp	.-20     	; 0xcc0 <vfprintf+0x30a>
     cd4:	73 14       	cp	r7, r3
     cd6:	10 f4       	brcc	.+4      	; 0xcdc <vfprintf+0x326>
     cd8:	37 18       	sub	r3, r7
     cda:	01 c0       	rjmp	.+2      	; 0xcde <vfprintf+0x328>
     cdc:	31 2c       	mov	r3, r1
     cde:	24 ff       	sbrs	r18, 4
     ce0:	11 c0       	rjmp	.+34     	; 0xd04 <vfprintf+0x34e>
     ce2:	b7 01       	movw	r22, r14
     ce4:	80 e3       	ldi	r24, 0x30	; 48
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	2c 87       	std	Y+12, r18	; 0x0c
     cea:	b1 d1       	rcall	.+866    	; 0x104e <fputc>
     cec:	2c 85       	ldd	r18, Y+12	; 0x0c
     cee:	22 ff       	sbrs	r18, 2
     cf0:	16 c0       	rjmp	.+44     	; 0xd1e <vfprintf+0x368>
     cf2:	21 ff       	sbrs	r18, 1
     cf4:	03 c0       	rjmp	.+6      	; 0xcfc <vfprintf+0x346>
     cf6:	88 e5       	ldi	r24, 0x58	; 88
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <vfprintf+0x34a>
     cfc:	88 e7       	ldi	r24, 0x78	; 120
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	b7 01       	movw	r22, r14
     d02:	0c c0       	rjmp	.+24     	; 0xd1c <vfprintf+0x366>
     d04:	82 2f       	mov	r24, r18
     d06:	86 78       	andi	r24, 0x86	; 134
     d08:	51 f0       	breq	.+20     	; 0xd1e <vfprintf+0x368>
     d0a:	21 fd       	sbrc	r18, 1
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <vfprintf+0x35c>
     d0e:	80 e2       	ldi	r24, 0x20	; 32
     d10:	01 c0       	rjmp	.+2      	; 0xd14 <vfprintf+0x35e>
     d12:	8b e2       	ldi	r24, 0x2B	; 43
     d14:	27 fd       	sbrc	r18, 7
     d16:	8d e2       	ldi	r24, 0x2D	; 45
     d18:	b7 01       	movw	r22, r14
     d1a:	90 e0       	ldi	r25, 0x00	; 0
     d1c:	98 d1       	rcall	.+816    	; 0x104e <fputc>
     d1e:	a5 14       	cp	r10, r5
     d20:	30 f4       	brcc	.+12     	; 0xd2e <vfprintf+0x378>
     d22:	b7 01       	movw	r22, r14
     d24:	80 e3       	ldi	r24, 0x30	; 48
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	92 d1       	rcall	.+804    	; 0x104e <fputc>
     d2a:	5a 94       	dec	r5
     d2c:	f8 cf       	rjmp	.-16     	; 0xd1e <vfprintf+0x368>
     d2e:	aa 94       	dec	r10
     d30:	f4 01       	movw	r30, r8
     d32:	ea 0d       	add	r30, r10
     d34:	f1 1d       	adc	r31, r1
     d36:	80 81       	ld	r24, Z
     d38:	b7 01       	movw	r22, r14
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	88 d1       	rcall	.+784    	; 0x104e <fputc>
     d3e:	a1 10       	cpse	r10, r1
     d40:	f6 cf       	rjmp	.-20     	; 0xd2e <vfprintf+0x378>
     d42:	33 20       	and	r3, r3
     d44:	09 f4       	brne	.+2      	; 0xd48 <vfprintf+0x392>
     d46:	5d ce       	rjmp	.-838    	; 0xa02 <vfprintf+0x4c>
     d48:	b7 01       	movw	r22, r14
     d4a:	80 e2       	ldi	r24, 0x20	; 32
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	7f d1       	rcall	.+766    	; 0x104e <fputc>
     d50:	3a 94       	dec	r3
     d52:	f7 cf       	rjmp	.-18     	; 0xd42 <vfprintf+0x38c>
     d54:	f7 01       	movw	r30, r14
     d56:	86 81       	ldd	r24, Z+6	; 0x06
     d58:	97 81       	ldd	r25, Z+7	; 0x07
     d5a:	02 c0       	rjmp	.+4      	; 0xd60 <vfprintf+0x3aa>
     d5c:	8f ef       	ldi	r24, 0xFF	; 255
     d5e:	9f ef       	ldi	r25, 0xFF	; 255
     d60:	2c 96       	adiw	r28, 0x0c	; 12
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	f8 94       	cli
     d66:	de bf       	out	0x3e, r29	; 62
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	cd bf       	out	0x3d, r28	; 61
     d6c:	df 91       	pop	r29
     d6e:	cf 91       	pop	r28
     d70:	1f 91       	pop	r17
     d72:	0f 91       	pop	r16
     d74:	ff 90       	pop	r15
     d76:	ef 90       	pop	r14
     d78:	df 90       	pop	r13
     d7a:	cf 90       	pop	r12
     d7c:	bf 90       	pop	r11
     d7e:	af 90       	pop	r10
     d80:	9f 90       	pop	r9
     d82:	8f 90       	pop	r8
     d84:	7f 90       	pop	r7
     d86:	6f 90       	pop	r6
     d88:	5f 90       	pop	r5
     d8a:	4f 90       	pop	r4
     d8c:	3f 90       	pop	r3
     d8e:	2f 90       	pop	r2
     d90:	08 95       	ret

00000d92 <calloc>:
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	cf 93       	push	r28
     d98:	df 93       	push	r29
     d9a:	86 9f       	mul	r24, r22
     d9c:	80 01       	movw	r16, r0
     d9e:	87 9f       	mul	r24, r23
     da0:	10 0d       	add	r17, r0
     da2:	96 9f       	mul	r25, r22
     da4:	10 0d       	add	r17, r0
     da6:	11 24       	eor	r1, r1
     da8:	c8 01       	movw	r24, r16
     daa:	0d d0       	rcall	.+26     	; 0xdc6 <malloc>
     dac:	ec 01       	movw	r28, r24
     dae:	00 97       	sbiw	r24, 0x00	; 0
     db0:	21 f0       	breq	.+8      	; 0xdba <calloc+0x28>
     db2:	a8 01       	movw	r20, r16
     db4:	60 e0       	ldi	r22, 0x00	; 0
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	38 d1       	rcall	.+624    	; 0x102a <memset>
     dba:	ce 01       	movw	r24, r28
     dbc:	df 91       	pop	r29
     dbe:	cf 91       	pop	r28
     dc0:	1f 91       	pop	r17
     dc2:	0f 91       	pop	r16
     dc4:	08 95       	ret

00000dc6 <malloc>:
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	82 30       	cpi	r24, 0x02	; 2
     dcc:	91 05       	cpc	r25, r1
     dce:	10 f4       	brcc	.+4      	; 0xdd4 <malloc+0xe>
     dd0:	82 e0       	ldi	r24, 0x02	; 2
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	e0 91 c3 02 	lds	r30, 0x02C3
     dd8:	f0 91 c4 02 	lds	r31, 0x02C4
     ddc:	20 e0       	ldi	r18, 0x00	; 0
     dde:	30 e0       	ldi	r19, 0x00	; 0
     de0:	a0 e0       	ldi	r26, 0x00	; 0
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	30 97       	sbiw	r30, 0x00	; 0
     de6:	39 f1       	breq	.+78     	; 0xe36 <malloc+0x70>
     de8:	40 81       	ld	r20, Z
     dea:	51 81       	ldd	r21, Z+1	; 0x01
     dec:	48 17       	cp	r20, r24
     dee:	59 07       	cpc	r21, r25
     df0:	b8 f0       	brcs	.+46     	; 0xe20 <malloc+0x5a>
     df2:	48 17       	cp	r20, r24
     df4:	59 07       	cpc	r21, r25
     df6:	71 f4       	brne	.+28     	; 0xe14 <malloc+0x4e>
     df8:	82 81       	ldd	r24, Z+2	; 0x02
     dfa:	93 81       	ldd	r25, Z+3	; 0x03
     dfc:	10 97       	sbiw	r26, 0x00	; 0
     dfe:	29 f0       	breq	.+10     	; 0xe0a <malloc+0x44>
     e00:	13 96       	adiw	r26, 0x03	; 3
     e02:	9c 93       	st	X, r25
     e04:	8e 93       	st	-X, r24
     e06:	12 97       	sbiw	r26, 0x02	; 2
     e08:	2c c0       	rjmp	.+88     	; 0xe62 <malloc+0x9c>
     e0a:	90 93 c4 02 	sts	0x02C4, r25
     e0e:	80 93 c3 02 	sts	0x02C3, r24
     e12:	27 c0       	rjmp	.+78     	; 0xe62 <malloc+0x9c>
     e14:	21 15       	cp	r18, r1
     e16:	31 05       	cpc	r19, r1
     e18:	31 f0       	breq	.+12     	; 0xe26 <malloc+0x60>
     e1a:	42 17       	cp	r20, r18
     e1c:	53 07       	cpc	r21, r19
     e1e:	18 f0       	brcs	.+6      	; 0xe26 <malloc+0x60>
     e20:	a9 01       	movw	r20, r18
     e22:	db 01       	movw	r26, r22
     e24:	01 c0       	rjmp	.+2      	; 0xe28 <malloc+0x62>
     e26:	ef 01       	movw	r28, r30
     e28:	9a 01       	movw	r18, r20
     e2a:	bd 01       	movw	r22, r26
     e2c:	df 01       	movw	r26, r30
     e2e:	02 80       	ldd	r0, Z+2	; 0x02
     e30:	f3 81       	ldd	r31, Z+3	; 0x03
     e32:	e0 2d       	mov	r30, r0
     e34:	d7 cf       	rjmp	.-82     	; 0xde4 <malloc+0x1e>
     e36:	21 15       	cp	r18, r1
     e38:	31 05       	cpc	r19, r1
     e3a:	f9 f0       	breq	.+62     	; 0xe7a <malloc+0xb4>
     e3c:	28 1b       	sub	r18, r24
     e3e:	39 0b       	sbc	r19, r25
     e40:	24 30       	cpi	r18, 0x04	; 4
     e42:	31 05       	cpc	r19, r1
     e44:	80 f4       	brcc	.+32     	; 0xe66 <malloc+0xa0>
     e46:	8a 81       	ldd	r24, Y+2	; 0x02
     e48:	9b 81       	ldd	r25, Y+3	; 0x03
     e4a:	61 15       	cp	r22, r1
     e4c:	71 05       	cpc	r23, r1
     e4e:	21 f0       	breq	.+8      	; 0xe58 <malloc+0x92>
     e50:	fb 01       	movw	r30, r22
     e52:	93 83       	std	Z+3, r25	; 0x03
     e54:	82 83       	std	Z+2, r24	; 0x02
     e56:	04 c0       	rjmp	.+8      	; 0xe60 <malloc+0x9a>
     e58:	90 93 c4 02 	sts	0x02C4, r25
     e5c:	80 93 c3 02 	sts	0x02C3, r24
     e60:	fe 01       	movw	r30, r28
     e62:	32 96       	adiw	r30, 0x02	; 2
     e64:	44 c0       	rjmp	.+136    	; 0xeee <malloc+0x128>
     e66:	fe 01       	movw	r30, r28
     e68:	e2 0f       	add	r30, r18
     e6a:	f3 1f       	adc	r31, r19
     e6c:	81 93       	st	Z+, r24
     e6e:	91 93       	st	Z+, r25
     e70:	22 50       	subi	r18, 0x02	; 2
     e72:	31 09       	sbc	r19, r1
     e74:	39 83       	std	Y+1, r19	; 0x01
     e76:	28 83       	st	Y, r18
     e78:	3a c0       	rjmp	.+116    	; 0xeee <malloc+0x128>
     e7a:	20 91 c1 02 	lds	r18, 0x02C1
     e7e:	30 91 c2 02 	lds	r19, 0x02C2
     e82:	23 2b       	or	r18, r19
     e84:	41 f4       	brne	.+16     	; 0xe96 <malloc+0xd0>
     e86:	20 91 02 02 	lds	r18, 0x0202
     e8a:	30 91 03 02 	lds	r19, 0x0203
     e8e:	30 93 c2 02 	sts	0x02C2, r19
     e92:	20 93 c1 02 	sts	0x02C1, r18
     e96:	20 91 00 02 	lds	r18, 0x0200
     e9a:	30 91 01 02 	lds	r19, 0x0201
     e9e:	21 15       	cp	r18, r1
     ea0:	31 05       	cpc	r19, r1
     ea2:	41 f4       	brne	.+16     	; 0xeb4 <malloc+0xee>
     ea4:	2d b7       	in	r18, 0x3d	; 61
     ea6:	3e b7       	in	r19, 0x3e	; 62
     ea8:	40 91 04 02 	lds	r20, 0x0204
     eac:	50 91 05 02 	lds	r21, 0x0205
     eb0:	24 1b       	sub	r18, r20
     eb2:	35 0b       	sbc	r19, r21
     eb4:	e0 91 c1 02 	lds	r30, 0x02C1
     eb8:	f0 91 c2 02 	lds	r31, 0x02C2
     ebc:	e2 17       	cp	r30, r18
     ebe:	f3 07       	cpc	r31, r19
     ec0:	a0 f4       	brcc	.+40     	; 0xeea <malloc+0x124>
     ec2:	2e 1b       	sub	r18, r30
     ec4:	3f 0b       	sbc	r19, r31
     ec6:	28 17       	cp	r18, r24
     ec8:	39 07       	cpc	r19, r25
     eca:	78 f0       	brcs	.+30     	; 0xeea <malloc+0x124>
     ecc:	ac 01       	movw	r20, r24
     ece:	4e 5f       	subi	r20, 0xFE	; 254
     ed0:	5f 4f       	sbci	r21, 0xFF	; 255
     ed2:	24 17       	cp	r18, r20
     ed4:	35 07       	cpc	r19, r21
     ed6:	48 f0       	brcs	.+18     	; 0xeea <malloc+0x124>
     ed8:	4e 0f       	add	r20, r30
     eda:	5f 1f       	adc	r21, r31
     edc:	50 93 c2 02 	sts	0x02C2, r21
     ee0:	40 93 c1 02 	sts	0x02C1, r20
     ee4:	81 93       	st	Z+, r24
     ee6:	91 93       	st	Z+, r25
     ee8:	02 c0       	rjmp	.+4      	; 0xeee <malloc+0x128>
     eea:	e0 e0       	ldi	r30, 0x00	; 0
     eec:	f0 e0       	ldi	r31, 0x00	; 0
     eee:	cf 01       	movw	r24, r30
     ef0:	df 91       	pop	r29
     ef2:	cf 91       	pop	r28
     ef4:	08 95       	ret

00000ef6 <free>:
     ef6:	cf 93       	push	r28
     ef8:	df 93       	push	r29
     efa:	00 97       	sbiw	r24, 0x00	; 0
     efc:	09 f4       	brne	.+2      	; 0xf00 <free+0xa>
     efe:	87 c0       	rjmp	.+270    	; 0x100e <free+0x118>
     f00:	fc 01       	movw	r30, r24
     f02:	32 97       	sbiw	r30, 0x02	; 2
     f04:	13 82       	std	Z+3, r1	; 0x03
     f06:	12 82       	std	Z+2, r1	; 0x02
     f08:	c0 91 c3 02 	lds	r28, 0x02C3
     f0c:	d0 91 c4 02 	lds	r29, 0x02C4
     f10:	20 97       	sbiw	r28, 0x00	; 0
     f12:	81 f4       	brne	.+32     	; 0xf34 <free+0x3e>
     f14:	20 81       	ld	r18, Z
     f16:	31 81       	ldd	r19, Z+1	; 0x01
     f18:	28 0f       	add	r18, r24
     f1a:	39 1f       	adc	r19, r25
     f1c:	80 91 c1 02 	lds	r24, 0x02C1
     f20:	90 91 c2 02 	lds	r25, 0x02C2
     f24:	82 17       	cp	r24, r18
     f26:	93 07       	cpc	r25, r19
     f28:	79 f5       	brne	.+94     	; 0xf88 <free+0x92>
     f2a:	f0 93 c2 02 	sts	0x02C2, r31
     f2e:	e0 93 c1 02 	sts	0x02C1, r30
     f32:	6d c0       	rjmp	.+218    	; 0x100e <free+0x118>
     f34:	de 01       	movw	r26, r28
     f36:	20 e0       	ldi	r18, 0x00	; 0
     f38:	30 e0       	ldi	r19, 0x00	; 0
     f3a:	ae 17       	cp	r26, r30
     f3c:	bf 07       	cpc	r27, r31
     f3e:	50 f4       	brcc	.+20     	; 0xf54 <free+0x5e>
     f40:	12 96       	adiw	r26, 0x02	; 2
     f42:	4d 91       	ld	r20, X+
     f44:	5c 91       	ld	r21, X
     f46:	13 97       	sbiw	r26, 0x03	; 3
     f48:	9d 01       	movw	r18, r26
     f4a:	41 15       	cp	r20, r1
     f4c:	51 05       	cpc	r21, r1
     f4e:	09 f1       	breq	.+66     	; 0xf92 <free+0x9c>
     f50:	da 01       	movw	r26, r20
     f52:	f3 cf       	rjmp	.-26     	; 0xf3a <free+0x44>
     f54:	b3 83       	std	Z+3, r27	; 0x03
     f56:	a2 83       	std	Z+2, r26	; 0x02
     f58:	40 81       	ld	r20, Z
     f5a:	51 81       	ldd	r21, Z+1	; 0x01
     f5c:	84 0f       	add	r24, r20
     f5e:	95 1f       	adc	r25, r21
     f60:	8a 17       	cp	r24, r26
     f62:	9b 07       	cpc	r25, r27
     f64:	71 f4       	brne	.+28     	; 0xf82 <free+0x8c>
     f66:	8d 91       	ld	r24, X+
     f68:	9c 91       	ld	r25, X
     f6a:	11 97       	sbiw	r26, 0x01	; 1
     f6c:	84 0f       	add	r24, r20
     f6e:	95 1f       	adc	r25, r21
     f70:	02 96       	adiw	r24, 0x02	; 2
     f72:	91 83       	std	Z+1, r25	; 0x01
     f74:	80 83       	st	Z, r24
     f76:	12 96       	adiw	r26, 0x02	; 2
     f78:	8d 91       	ld	r24, X+
     f7a:	9c 91       	ld	r25, X
     f7c:	13 97       	sbiw	r26, 0x03	; 3
     f7e:	93 83       	std	Z+3, r25	; 0x03
     f80:	82 83       	std	Z+2, r24	; 0x02
     f82:	21 15       	cp	r18, r1
     f84:	31 05       	cpc	r19, r1
     f86:	29 f4       	brne	.+10     	; 0xf92 <free+0x9c>
     f88:	f0 93 c4 02 	sts	0x02C4, r31
     f8c:	e0 93 c3 02 	sts	0x02C3, r30
     f90:	3e c0       	rjmp	.+124    	; 0x100e <free+0x118>
     f92:	d9 01       	movw	r26, r18
     f94:	13 96       	adiw	r26, 0x03	; 3
     f96:	fc 93       	st	X, r31
     f98:	ee 93       	st	-X, r30
     f9a:	12 97       	sbiw	r26, 0x02	; 2
     f9c:	4d 91       	ld	r20, X+
     f9e:	5d 91       	ld	r21, X+
     fa0:	a4 0f       	add	r26, r20
     fa2:	b5 1f       	adc	r27, r21
     fa4:	ea 17       	cp	r30, r26
     fa6:	fb 07       	cpc	r31, r27
     fa8:	79 f4       	brne	.+30     	; 0xfc8 <free+0xd2>
     faa:	80 81       	ld	r24, Z
     fac:	91 81       	ldd	r25, Z+1	; 0x01
     fae:	84 0f       	add	r24, r20
     fb0:	95 1f       	adc	r25, r21
     fb2:	02 96       	adiw	r24, 0x02	; 2
     fb4:	d9 01       	movw	r26, r18
     fb6:	11 96       	adiw	r26, 0x01	; 1
     fb8:	9c 93       	st	X, r25
     fba:	8e 93       	st	-X, r24
     fbc:	82 81       	ldd	r24, Z+2	; 0x02
     fbe:	93 81       	ldd	r25, Z+3	; 0x03
     fc0:	13 96       	adiw	r26, 0x03	; 3
     fc2:	9c 93       	st	X, r25
     fc4:	8e 93       	st	-X, r24
     fc6:	12 97       	sbiw	r26, 0x02	; 2
     fc8:	e0 e0       	ldi	r30, 0x00	; 0
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	8a 81       	ldd	r24, Y+2	; 0x02
     fce:	9b 81       	ldd	r25, Y+3	; 0x03
     fd0:	00 97       	sbiw	r24, 0x00	; 0
     fd2:	19 f0       	breq	.+6      	; 0xfda <free+0xe4>
     fd4:	fe 01       	movw	r30, r28
     fd6:	ec 01       	movw	r28, r24
     fd8:	f9 cf       	rjmp	.-14     	; 0xfcc <free+0xd6>
     fda:	ce 01       	movw	r24, r28
     fdc:	02 96       	adiw	r24, 0x02	; 2
     fde:	28 81       	ld	r18, Y
     fe0:	39 81       	ldd	r19, Y+1	; 0x01
     fe2:	82 0f       	add	r24, r18
     fe4:	93 1f       	adc	r25, r19
     fe6:	20 91 c1 02 	lds	r18, 0x02C1
     fea:	30 91 c2 02 	lds	r19, 0x02C2
     fee:	28 17       	cp	r18, r24
     ff0:	39 07       	cpc	r19, r25
     ff2:	69 f4       	brne	.+26     	; 0x100e <free+0x118>
     ff4:	30 97       	sbiw	r30, 0x00	; 0
     ff6:	29 f4       	brne	.+10     	; 0x1002 <free+0x10c>
     ff8:	10 92 c4 02 	sts	0x02C4, r1
     ffc:	10 92 c3 02 	sts	0x02C3, r1
    1000:	02 c0       	rjmp	.+4      	; 0x1006 <free+0x110>
    1002:	13 82       	std	Z+3, r1	; 0x03
    1004:	12 82       	std	Z+2, r1	; 0x02
    1006:	d0 93 c2 02 	sts	0x02C2, r29
    100a:	c0 93 c1 02 	sts	0x02C1, r28
    100e:	df 91       	pop	r29
    1010:	cf 91       	pop	r28
    1012:	08 95       	ret

00001014 <strnlen_P>:
    1014:	fc 01       	movw	r30, r24
    1016:	05 90       	lpm	r0, Z+
    1018:	61 50       	subi	r22, 0x01	; 1
    101a:	70 40       	sbci	r23, 0x00	; 0
    101c:	01 10       	cpse	r0, r1
    101e:	d8 f7       	brcc	.-10     	; 0x1016 <strnlen_P+0x2>
    1020:	80 95       	com	r24
    1022:	90 95       	com	r25
    1024:	8e 0f       	add	r24, r30
    1026:	9f 1f       	adc	r25, r31
    1028:	08 95       	ret

0000102a <memset>:
    102a:	dc 01       	movw	r26, r24
    102c:	01 c0       	rjmp	.+2      	; 0x1030 <memset+0x6>
    102e:	6d 93       	st	X+, r22
    1030:	41 50       	subi	r20, 0x01	; 1
    1032:	50 40       	sbci	r21, 0x00	; 0
    1034:	e0 f7       	brcc	.-8      	; 0x102e <memset+0x4>
    1036:	08 95       	ret

00001038 <strnlen>:
    1038:	fc 01       	movw	r30, r24
    103a:	61 50       	subi	r22, 0x01	; 1
    103c:	70 40       	sbci	r23, 0x00	; 0
    103e:	01 90       	ld	r0, Z+
    1040:	01 10       	cpse	r0, r1
    1042:	d8 f7       	brcc	.-10     	; 0x103a <strnlen+0x2>
    1044:	80 95       	com	r24
    1046:	90 95       	com	r25
    1048:	8e 0f       	add	r24, r30
    104a:	9f 1f       	adc	r25, r31
    104c:	08 95       	ret

0000104e <fputc>:
    104e:	0f 93       	push	r16
    1050:	1f 93       	push	r17
    1052:	cf 93       	push	r28
    1054:	df 93       	push	r29
    1056:	18 2f       	mov	r17, r24
    1058:	09 2f       	mov	r16, r25
    105a:	eb 01       	movw	r28, r22
    105c:	8b 81       	ldd	r24, Y+3	; 0x03
    105e:	81 fd       	sbrc	r24, 1
    1060:	03 c0       	rjmp	.+6      	; 0x1068 <fputc+0x1a>
    1062:	8f ef       	ldi	r24, 0xFF	; 255
    1064:	9f ef       	ldi	r25, 0xFF	; 255
    1066:	20 c0       	rjmp	.+64     	; 0x10a8 <fputc+0x5a>
    1068:	82 ff       	sbrs	r24, 2
    106a:	10 c0       	rjmp	.+32     	; 0x108c <fputc+0x3e>
    106c:	4e 81       	ldd	r20, Y+6	; 0x06
    106e:	5f 81       	ldd	r21, Y+7	; 0x07
    1070:	2c 81       	ldd	r18, Y+4	; 0x04
    1072:	3d 81       	ldd	r19, Y+5	; 0x05
    1074:	42 17       	cp	r20, r18
    1076:	53 07       	cpc	r21, r19
    1078:	7c f4       	brge	.+30     	; 0x1098 <fputc+0x4a>
    107a:	e8 81       	ld	r30, Y
    107c:	f9 81       	ldd	r31, Y+1	; 0x01
    107e:	9f 01       	movw	r18, r30
    1080:	2f 5f       	subi	r18, 0xFF	; 255
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	39 83       	std	Y+1, r19	; 0x01
    1086:	28 83       	st	Y, r18
    1088:	10 83       	st	Z, r17
    108a:	06 c0       	rjmp	.+12     	; 0x1098 <fputc+0x4a>
    108c:	e8 85       	ldd	r30, Y+8	; 0x08
    108e:	f9 85       	ldd	r31, Y+9	; 0x09
    1090:	81 2f       	mov	r24, r17
    1092:	19 95       	eicall
    1094:	89 2b       	or	r24, r25
    1096:	29 f7       	brne	.-54     	; 0x1062 <fputc+0x14>
    1098:	2e 81       	ldd	r18, Y+6	; 0x06
    109a:	3f 81       	ldd	r19, Y+7	; 0x07
    109c:	2f 5f       	subi	r18, 0xFF	; 255
    109e:	3f 4f       	sbci	r19, 0xFF	; 255
    10a0:	3f 83       	std	Y+7, r19	; 0x07
    10a2:	2e 83       	std	Y+6, r18	; 0x06
    10a4:	81 2f       	mov	r24, r17
    10a6:	90 2f       	mov	r25, r16
    10a8:	df 91       	pop	r29
    10aa:	cf 91       	pop	r28
    10ac:	1f 91       	pop	r17
    10ae:	0f 91       	pop	r16
    10b0:	08 95       	ret

000010b2 <__ultoa_invert>:
    10b2:	fa 01       	movw	r30, r20
    10b4:	aa 27       	eor	r26, r26
    10b6:	28 30       	cpi	r18, 0x08	; 8
    10b8:	51 f1       	breq	.+84     	; 0x110e <__ultoa_invert+0x5c>
    10ba:	20 31       	cpi	r18, 0x10	; 16
    10bc:	81 f1       	breq	.+96     	; 0x111e <__ultoa_invert+0x6c>
    10be:	e8 94       	clt
    10c0:	6f 93       	push	r22
    10c2:	6e 7f       	andi	r22, 0xFE	; 254
    10c4:	6e 5f       	subi	r22, 0xFE	; 254
    10c6:	7f 4f       	sbci	r23, 0xFF	; 255
    10c8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ca:	9f 4f       	sbci	r25, 0xFF	; 255
    10cc:	af 4f       	sbci	r26, 0xFF	; 255
    10ce:	b1 e0       	ldi	r27, 0x01	; 1
    10d0:	3e d0       	rcall	.+124    	; 0x114e <__ultoa_invert+0x9c>
    10d2:	b4 e0       	ldi	r27, 0x04	; 4
    10d4:	3c d0       	rcall	.+120    	; 0x114e <__ultoa_invert+0x9c>
    10d6:	67 0f       	add	r22, r23
    10d8:	78 1f       	adc	r23, r24
    10da:	89 1f       	adc	r24, r25
    10dc:	9a 1f       	adc	r25, r26
    10de:	a1 1d       	adc	r26, r1
    10e0:	68 0f       	add	r22, r24
    10e2:	79 1f       	adc	r23, r25
    10e4:	8a 1f       	adc	r24, r26
    10e6:	91 1d       	adc	r25, r1
    10e8:	a1 1d       	adc	r26, r1
    10ea:	6a 0f       	add	r22, r26
    10ec:	71 1d       	adc	r23, r1
    10ee:	81 1d       	adc	r24, r1
    10f0:	91 1d       	adc	r25, r1
    10f2:	a1 1d       	adc	r26, r1
    10f4:	20 d0       	rcall	.+64     	; 0x1136 <__ultoa_invert+0x84>
    10f6:	09 f4       	brne	.+2      	; 0x10fa <__ultoa_invert+0x48>
    10f8:	68 94       	set
    10fa:	3f 91       	pop	r19
    10fc:	2a e0       	ldi	r18, 0x0A	; 10
    10fe:	26 9f       	mul	r18, r22
    1100:	11 24       	eor	r1, r1
    1102:	30 19       	sub	r19, r0
    1104:	30 5d       	subi	r19, 0xD0	; 208
    1106:	31 93       	st	Z+, r19
    1108:	de f6       	brtc	.-74     	; 0x10c0 <__ultoa_invert+0xe>
    110a:	cf 01       	movw	r24, r30
    110c:	08 95       	ret
    110e:	46 2f       	mov	r20, r22
    1110:	47 70       	andi	r20, 0x07	; 7
    1112:	40 5d       	subi	r20, 0xD0	; 208
    1114:	41 93       	st	Z+, r20
    1116:	b3 e0       	ldi	r27, 0x03	; 3
    1118:	0f d0       	rcall	.+30     	; 0x1138 <__ultoa_invert+0x86>
    111a:	c9 f7       	brne	.-14     	; 0x110e <__ultoa_invert+0x5c>
    111c:	f6 cf       	rjmp	.-20     	; 0x110a <__ultoa_invert+0x58>
    111e:	46 2f       	mov	r20, r22
    1120:	4f 70       	andi	r20, 0x0F	; 15
    1122:	40 5d       	subi	r20, 0xD0	; 208
    1124:	4a 33       	cpi	r20, 0x3A	; 58
    1126:	18 f0       	brcs	.+6      	; 0x112e <__ultoa_invert+0x7c>
    1128:	49 5d       	subi	r20, 0xD9	; 217
    112a:	31 fd       	sbrc	r19, 1
    112c:	40 52       	subi	r20, 0x20	; 32
    112e:	41 93       	st	Z+, r20
    1130:	02 d0       	rcall	.+4      	; 0x1136 <__ultoa_invert+0x84>
    1132:	a9 f7       	brne	.-22     	; 0x111e <__ultoa_invert+0x6c>
    1134:	ea cf       	rjmp	.-44     	; 0x110a <__ultoa_invert+0x58>
    1136:	b4 e0       	ldi	r27, 0x04	; 4
    1138:	a6 95       	lsr	r26
    113a:	97 95       	ror	r25
    113c:	87 95       	ror	r24
    113e:	77 95       	ror	r23
    1140:	67 95       	ror	r22
    1142:	ba 95       	dec	r27
    1144:	c9 f7       	brne	.-14     	; 0x1138 <__ultoa_invert+0x86>
    1146:	00 97       	sbiw	r24, 0x00	; 0
    1148:	61 05       	cpc	r22, r1
    114a:	71 05       	cpc	r23, r1
    114c:	08 95       	ret
    114e:	9b 01       	movw	r18, r22
    1150:	ac 01       	movw	r20, r24
    1152:	0a 2e       	mov	r0, r26
    1154:	06 94       	lsr	r0
    1156:	57 95       	ror	r21
    1158:	47 95       	ror	r20
    115a:	37 95       	ror	r19
    115c:	27 95       	ror	r18
    115e:	ba 95       	dec	r27
    1160:	c9 f7       	brne	.-14     	; 0x1154 <__ultoa_invert+0xa2>
    1162:	62 0f       	add	r22, r18
    1164:	73 1f       	adc	r23, r19
    1166:	84 1f       	adc	r24, r20
    1168:	95 1f       	adc	r25, r21
    116a:	a0 1d       	adc	r26, r0
    116c:	08 95       	ret

0000116e <_exit>:
    116e:	f8 94       	cli

00001170 <__stop_program>:
    1170:	ff cf       	rjmp	.-2      	; 0x1170 <__stop_program>
