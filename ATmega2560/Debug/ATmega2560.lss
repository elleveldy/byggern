
ATmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800200  00000d2e  00000dc2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d2e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  00800254  00800254  00000e16  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e16  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000160  00000000  00000000  00000e72  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f65  00000000  00000000  00000fd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000794  00000000  00000000  00001f37  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000971  00000000  00000000  000026cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000318  00000000  00000000  0000303c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f2  00000000  00000000  00003354  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000654  00000000  00000000  00003746  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  00003d9a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e2       	ldi	r30, 0x2E	; 46
  fc:	fd e0       	ldi	r31, 0x0D	; 13
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 35       	cpi	r26, 0x54	; 84
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e5       	ldi	r26, 0x54	; 84
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ab 36       	cpi	r26, 0x6B	; 107
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	04 c6       	rjmp	.+3080   	; 0xd2a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#include "mcp2515_define.h"
#include "uart.h"
#include "canjoy.h"


int main(void){
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	2b 97       	sbiw	r28, 0x0b	; 11
 12e:	0f b6       	in	r0, 0x3f	; 63
 130:	f8 94       	cli
 132:	de bf       	out	0x3e, r29	; 62
 134:	0f be       	out	0x3f, r0	; 63
 136:	cd bf       	out	0x3d, r28	; 61
	
	fdevopen(uart_Transmit, uart_Receive);
 138:	69 e1       	ldi	r22, 0x19	; 25
 13a:	72 e0       	ldi	r23, 0x02	; 2
 13c:	81 e1       	ldi	r24, 0x11	; 17
 13e:	92 e0       	ldi	r25, 0x02	; 2
 140:	90 d1       	rcall	.+800    	; 0x462 <fdevopen>
	MCUCR |= (1 << SRE);
 142:	85 b7       	in	r24, 0x35	; 53
 144:	80 68       	ori	r24, 0x80	; 128
 146:	85 bf       	out	0x35, r24	; 53
	uart_Init(MYUBRR);
 148:	87 e6       	ldi	r24, 0x67	; 103
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	7a d1       	rcall	.+756    	; 0x442 <uart_Init>
	
	
	
	can_init(MODE_NORMAL);
 14e:	80 e0       	ldi	r24, 0x00	; 0
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	19 d0       	rcall	.+50     	; 0x186 <can_init>
		printf("id: %d\t\tlength: %d\tdata: %d\n", stuff.id, stuff.length, stuff.data[0]);*/
		canjoy_recieve();
		_delay_ms(100);
		/*can_message joy = can_recieve();
		printf("X: %d\tY: %d\n", joy.data[0], joy.data[1]);*/
		printf("X: %d\n", canjoy_joystick_x());
 154:	06 e0       	ldi	r16, 0x06	; 6
 156:	12 e0       	ldi	r17, 0x02	; 2
	while(1){
		/*_delay_ms(200);
		
		can_message stuff = can_recieve();
		printf("id: %d\t\tlength: %d\tdata: %d\n", stuff.id, stuff.length, stuff.data[0]);*/
		canjoy_recieve();
 158:	ce 01       	movw	r24, r28
 15a:	01 96       	adiw	r24, 0x01	; 1
 15c:	c7 d0       	rcall	.+398    	; 0x2ec <canjoy_recieve>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	81 ee       	ldi	r24, 0xE1	; 225
 162:	94 e0       	ldi	r25, 0x04	; 4
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0x40>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x4a>
 16e:	00 00       	nop
		_delay_ms(100);
		/*can_message joy = can_recieve();
		printf("X: %d\tY: %d\n", joy.data[0], joy.data[1]);*/
		printf("X: %d\n", canjoy_joystick_x());
 170:	0e d1       	rcall	.+540    	; 0x38e <canjoy_joystick_x>
 172:	9f 93       	push	r25
 174:	8f 93       	push	r24
 176:	1f 93       	push	r17
 178:	0f 93       	push	r16
 17a:	bd d1       	rcall	.+890    	; 0x4f6 <printf>
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	e9 cf       	rjmp	.-46     	; 0x158 <main+0x34>

00000186 <can_init>:
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ec 01       	movw	r28, r24
 18c:	29 d1       	rcall	.+594    	; 0x3e0 <mcp2515_init>
 18e:	4f ef       	ldi	r20, 0xFF	; 255
 190:	50 e0       	ldi	r21, 0x00	; 0
 192:	60 e6       	ldi	r22, 0x60	; 96
 194:	70 e0       	ldi	r23, 0x00	; 0
 196:	80 e6       	ldi	r24, 0x60	; 96
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	09 d1       	rcall	.+530    	; 0x3ae <mcp2515_bit_modify>
 19c:	4f ef       	ldi	r20, 0xFF	; 255
 19e:	50 e0       	ldi	r21, 0x00	; 0
 1a0:	60 e6       	ldi	r22, 0x60	; 96
 1a2:	70 e0       	ldi	r23, 0x00	; 0
 1a4:	80 e7       	ldi	r24, 0x70	; 112
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 d1       	rcall	.+516    	; 0x3ae <mcp2515_bit_modify>
 1aa:	ae 01       	movw	r20, r28
 1ac:	60 ee       	ldi	r22, 0xE0	; 224
 1ae:	70 e0       	ldi	r23, 0x00	; 0
 1b0:	8f e0       	ldi	r24, 0x0F	; 15
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	fc d0       	rcall	.+504    	; 0x3ae <mcp2515_bit_modify>
 1b6:	24 98       	cbi	0x04, 4	; 4
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	08 95       	ret

000001be <can_poll_interrupt>:
}


uint8_t can_poll_interrupt(){
	
	while(!(PINB & (1 << PB4))){}
 1be:	1c 9b       	sbis	0x03, 4	; 3
 1c0:	fe cf       	rjmp	.-4      	; 0x1be <can_poll_interrupt>
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
 1c2:	8c e2       	ldi	r24, 0x2C	; 44
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	e7 d0       	rcall	.+462    	; 0x396 <mcp2515_read>
 1c8:	80 fd       	sbrc	r24, 0
 1ca:	07 c0       	rjmp	.+14     	; 0x1da <can_poll_interrupt+0x1c>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
	}
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
 1cc:	8c e2       	ldi	r24, 0x2C	; 44
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	e2 d0       	rcall	.+452    	; 0x396 <mcp2515_read>
 1d2:	81 ff       	sbrs	r24, 1
 1d4:	04 c0       	rjmp	.+8      	; 0x1de <can_poll_interrupt+0x20>
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
 1d6:	80 e7       	ldi	r24, 0x70	; 112
 1d8:	08 95       	ret
	
	while(!(PINB & (1 << PB4))){}
	
	if(mcp2515_read(MCP_CANINTF) & MCP_RX0IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
		return MCP_RXB0CTRL;
 1da:	80 e6       	ldi	r24, 0x60	; 96
 1dc:	08 95       	ret
	
	else if(mcp2515_read(MCP_CANINTF) & MCP_RX1IF){
		//mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
		return MCP_RXB1CTRL;
	}
	return -1;
 1de:	8f ef       	ldi	r24, 0xFF	; 255
}
 1e0:	08 95       	ret

000001e2 <can_recieve>:
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	mcp2515_request_to_send(buffer_control);
}

can_message can_recieve(can_message* msg){
 1e2:	7f 92       	push	r7
 1e4:	8f 92       	push	r8
 1e6:	9f 92       	push	r9
 1e8:	af 92       	push	r10
 1ea:	bf 92       	push	r11
 1ec:	cf 92       	push	r12
 1ee:	df 92       	push	r13
 1f0:	ef 92       	push	r14
 1f2:	ff 92       	push	r15
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	cd b7       	in	r28, 0x3d	; 61
 1fe:	de b7       	in	r29, 0x3e	; 62
 200:	2b 97       	sbiw	r28, 0x0b	; 11
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	de bf       	out	0x3e, r29	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	cd bf       	out	0x3d, r28	; 61
 20c:	6c 01       	movw	r12, r24
	can_message m;
	
	uint8_t buffer_select = can_poll_interrupt();
 20e:	d7 df       	rcall	.-82     	; 0x1be <can_poll_interrupt>
 210:	98 2e       	mov	r9, r24
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
 212:	08 2f       	mov	r16, r24
 214:	10 e0       	ldi	r17, 0x00	; 0
 216:	c8 01       	movw	r24, r16
 218:	01 96       	adiw	r24, 0x01	; 1
 21a:	bd d0       	rcall	.+378    	; 0x396 <mcp2515_read>
 21c:	7c 01       	movw	r14, r24
 21e:	c8 01       	movw	r24, r16
 220:	02 96       	adiw	r24, 0x02	; 2
 222:	b9 d0       	rcall	.+370    	; 0x396 <mcp2515_read>
 224:	95 95       	asr	r25
 226:	87 95       	ror	r24
 228:	95 95       	asr	r25
 22a:	87 95       	ror	r24
 22c:	95 95       	asr	r25
 22e:	87 95       	ror	r24
 230:	95 95       	asr	r25
 232:	87 95       	ror	r24
 234:	95 95       	asr	r25
 236:	87 95       	ror	r24
 238:	ee 0c       	add	r14, r14
 23a:	ff 1c       	adc	r15, r15
 23c:	ee 0c       	add	r14, r14
 23e:	ff 1c       	adc	r15, r15
 240:	ee 0c       	add	r14, r14
 242:	ff 1c       	adc	r15, r15
 244:	5c 01       	movw	r10, r24
 246:	ae 28       	or	r10, r14
 248:	bf 28       	or	r11, r15
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
 24a:	c8 01       	movw	r24, r16
 24c:	05 96       	adiw	r24, 0x05	; 5
 24e:	a3 d0       	rcall	.+326    	; 0x396 <mcp2515_read>
 250:	8f 70       	andi	r24, 0x0F	; 15
 252:	78 2e       	mov	r7, r24
	
	for(uint8_t i = 0; i < m.length; i++){
 254:	a9 f0       	breq	.+42     	; 0x280 <can_recieve+0x9e>
 256:	8e 01       	movw	r16, r28
 258:	0c 5f       	subi	r16, 0xFC	; 252
 25a:	1f 4f       	sbci	r17, 0xFF	; 255
 25c:	81 2c       	mov	r8, r1
 25e:	ce 01       	movw	r24, r28
 260:	80 95       	com	r24
 262:	90 95       	com	r25
 264:	03 96       	adiw	r24, 0x03	; 3
 266:	7c 01       	movw	r14, r24
 268:	e9 0c       	add	r14, r9
 26a:	f1 1c       	adc	r15, r1
		m.data[i] = mcp2515_read(buffer_select + MCP2515_RXB_OFFSET + i);// + i, msg->data[i]);
 26c:	c7 01       	movw	r24, r14
 26e:	80 0f       	add	r24, r16
 270:	91 1f       	adc	r25, r17
 272:	91 d0       	rcall	.+290    	; 0x396 <mcp2515_read>
 274:	f8 01       	movw	r30, r16
 276:	81 93       	st	Z+, r24
 278:	8f 01       	movw	r16, r30
	uint8_t buffer_select = can_poll_interrupt();
	
	m.id = mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5);
	m.length = mcp2515_read(buffer_select + MCP2515_DLC_OFFSET) & MCP2515_MASK_DLC;
	
	for(uint8_t i = 0; i < m.length; i++){
 27a:	83 94       	inc	r8
 27c:	87 10       	cpse	r8, r7
 27e:	f6 cf       	rjmp	.-20     	; 0x26c <can_recieve+0x8a>
	}
	
	//printf("Buffer =\n\tID = %02x\n\tDLC = %02x\n\tD0 = %02x\n", mcp2515_read(buffer_select + MCP2515_IDH_OFFSET) << 3 | (mcp2515_read(buffer_select + MCP2515_IDL_OFFSET) >> 5), mcp2515_read(buffer_select + MCP2515_DLC_OFFSET),  mcp2515_read((buffer_select + MCP2515_TXB_OFFSET)));
	
	
	switch(buffer_select){
 280:	f0 e6       	ldi	r31, 0x60	; 96
 282:	9f 16       	cp	r9, r31
 284:	21 f0       	breq	.+8      	; 0x28e <can_recieve+0xac>
 286:	80 e7       	ldi	r24, 0x70	; 112
 288:	98 16       	cp	r9, r24
 28a:	49 f0       	breq	.+18     	; 0x29e <can_recieve+0xbc>
 28c:	0f c0       	rjmp	.+30     	; 0x2ac <can_recieve+0xca>
		case MCP_RXB0CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX0IF, 0x00);
 28e:	40 e0       	ldi	r20, 0x00	; 0
 290:	50 e0       	ldi	r21, 0x00	; 0
 292:	61 e0       	ldi	r22, 0x01	; 1
 294:	70 e0       	ldi	r23, 0x00	; 0
 296:	8c e2       	ldi	r24, 0x2C	; 44
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	89 d0       	rcall	.+274    	; 0x3ae <mcp2515_bit_modify>
		break;
 29c:	07 c0       	rjmp	.+14     	; 0x2ac <can_recieve+0xca>
		case MCP_RXB1CTRL:
			mcp2515_bit_modify(MCP_CANINTF, MCP_RX1IF, 0x00);
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	50 e0       	ldi	r21, 0x00	; 0
 2a2:	62 e0       	ldi	r22, 0x02	; 2
 2a4:	70 e0       	ldi	r23, 0x00	; 0
 2a6:	8c e2       	ldi	r24, 0x2C	; 44
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	81 d0       	rcall	.+258    	; 0x3ae <mcp2515_bit_modify>
		break;
	}
	
	return m;
 2ac:	ba 82       	std	Y+2, r11	; 0x02
 2ae:	a9 82       	std	Y+1, r10	; 0x01
 2b0:	7b 82       	std	Y+3, r7	; 0x03
 2b2:	8b e0       	ldi	r24, 0x0B	; 11
 2b4:	fe 01       	movw	r30, r28
 2b6:	31 96       	adiw	r30, 0x01	; 1
 2b8:	d6 01       	movw	r26, r12
 2ba:	01 90       	ld	r0, Z+
 2bc:	0d 92       	st	X+, r0
 2be:	8a 95       	dec	r24
 2c0:	e1 f7       	brne	.-8      	; 0x2ba <can_recieve+0xd8>
}
 2c2:	c6 01       	movw	r24, r12
 2c4:	2b 96       	adiw	r28, 0x0b	; 11
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	f8 94       	cli
 2ca:	de bf       	out	0x3e, r29	; 62
 2cc:	0f be       	out	0x3f, r0	; 63
 2ce:	cd bf       	out	0x3d, r28	; 61
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	1f 91       	pop	r17
 2d6:	0f 91       	pop	r16
 2d8:	ff 90       	pop	r15
 2da:	ef 90       	pop	r14
 2dc:	df 90       	pop	r13
 2de:	cf 90       	pop	r12
 2e0:	bf 90       	pop	r11
 2e2:	af 90       	pop	r10
 2e4:	9f 90       	pop	r9
 2e6:	8f 90       	pop	r8
 2e8:	7f 90       	pop	r7
 2ea:	08 95       	ret

000002ec <canjoy_recieve>:
	
	can_transmit(&joy, MCP_TXB0CTRL);*/
}


can_message canjoy_recieve(){
 2ec:	af 92       	push	r10
 2ee:	bf 92       	push	r11
 2f0:	cf 92       	push	r12
 2f2:	df 92       	push	r13
 2f4:	ef 92       	push	r14
 2f6:	ff 92       	push	r15
 2f8:	0f 93       	push	r16
 2fa:	1f 93       	push	r17
 2fc:	cf 93       	push	r28
 2fe:	df 93       	push	r29
 300:	ec 01       	movw	r28, r24
	
	can_message joy = can_recieve();
 302:	6f df       	rcall	.-290    	; 0x1e2 <can_recieve>
 304:	aa 80       	ldd	r10, Y+2	; 0x02
 306:	bb 80       	ldd	r11, Y+3	; 0x03
 308:	cc 80       	ldd	r12, Y+4	; 0x04
 30a:	dd 80       	ldd	r13, Y+5	; 0x05
 30c:	ee 80       	ldd	r14, Y+6	; 0x06
 30e:	ff 80       	ldd	r15, Y+7	; 0x07
 310:	08 85       	ldd	r16, Y+8	; 0x08
 312:	19 85       	ldd	r17, Y+9	; 0x09
	
	if(joy.id == CANJOY_ID){
 314:	28 81       	ld	r18, Y
 316:	39 81       	ldd	r19, Y+1	; 0x01
 318:	80 91 5f 02 	lds	r24, 0x025F
 31c:	90 91 60 02 	lds	r25, 0x0260
 320:	28 17       	cp	r18, r24
 322:	39 07       	cpc	r19, r25
 324:	e1 f4       	brne	.+56     	; 0x35e <canjoy_recieve+0x72>
		printf("CORRECT ID\n");		
 326:	8d e0       	ldi	r24, 0x0D	; 13
 328:	92 e0       	ldi	r25, 0x02	; 2
 32a:	f6 d0       	rcall	.+492    	; 0x518 <puts>
		canjoy_msg = joy;
 32c:	aa 82       	std	Y+2, r10	; 0x02
 32e:	bb 82       	std	Y+3, r11	; 0x03
 330:	cc 82       	std	Y+4, r12	; 0x04
 332:	dd 82       	std	Y+5, r13	; 0x05
 334:	ee 82       	std	Y+6, r14	; 0x06
 336:	ff 82       	std	Y+7, r15	; 0x07
 338:	08 87       	std	Y+8, r16	; 0x08
 33a:	19 87       	std	Y+9, r17	; 0x09
 33c:	8b e0       	ldi	r24, 0x0B	; 11
 33e:	fe 01       	movw	r30, r28
 340:	a4 e5       	ldi	r26, 0x54	; 84
 342:	b2 e0       	ldi	r27, 0x02	; 2
 344:	01 90       	ld	r0, Z+
 346:	0d 92       	st	X+, r0
 348:	8a 95       	dec	r24
 34a:	e1 f7       	brne	.-8      	; 0x344 <canjoy_recieve+0x58>
		return joy;
 34c:	aa 82       	std	Y+2, r10	; 0x02
 34e:	bb 82       	std	Y+3, r11	; 0x03
 350:	cc 82       	std	Y+4, r12	; 0x04
 352:	dd 82       	std	Y+5, r13	; 0x05
 354:	ee 82       	std	Y+6, r14	; 0x06
 356:	ff 82       	std	Y+7, r15	; 0x07
 358:	08 87       	std	Y+8, r16	; 0x08
 35a:	19 87       	std	Y+9, r17	; 0x09
 35c:	0c c0       	rjmp	.+24     	; 0x376 <canjoy_recieve+0x8a>
	}
	printf("WRONG ID\n");
 35e:	88 e1       	ldi	r24, 0x18	; 24
 360:	92 e0       	ldi	r25, 0x02	; 2
 362:	da d0       	rcall	.+436    	; 0x518 <puts>
	joy.data[2] = 0;
	joy.data[3] = 0;
	joy.data[4] = 0;
	joy.data[5] = 0;
	joy.data[6] = 0;
	return joy;
 364:	87 e0       	ldi	r24, 0x07	; 7
 366:	8a 83       	std	Y+2, r24	; 0x02
 368:	8b 83       	std	Y+3, r24	; 0x03
 36a:	1c 82       	std	Y+4, r1	; 0x04
 36c:	1d 82       	std	Y+5, r1	; 0x05
 36e:	1e 82       	std	Y+6, r1	; 0x06
 370:	1f 82       	std	Y+7, r1	; 0x07
 372:	18 86       	std	Y+8, r1	; 0x08
 374:	19 86       	std	Y+9, r1	; 0x09
}
 376:	ce 01       	movw	r24, r28
 378:	df 91       	pop	r29
 37a:	cf 91       	pop	r28
 37c:	1f 91       	pop	r17
 37e:	0f 91       	pop	r16
 380:	ff 90       	pop	r15
 382:	ef 90       	pop	r14
 384:	df 90       	pop	r13
 386:	cf 90       	pop	r12
 388:	bf 90       	pop	r11
 38a:	af 90       	pop	r10
 38c:	08 95       	ret

0000038e <canjoy_joystick_x>:

int canjoy_joystick_x(){
	return canjoy_msg.data[0];
 38e:	80 91 57 02 	lds	r24, 0x0257
}
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	08 95       	ret

00000396 <mcp2515_read>:
}

void mcp2515_request_to_send(int buffer_select){
	PORTB &= ~(1 << MCP2515_CS);
	spi_write(buffer_select);
	PORTB |= (1 << MCP2515_CS);
 396:	cf 93       	push	r28
 398:	c8 2f       	mov	r28, r24
 39a:	28 98       	cbi	0x05, 0	; 5
 39c:	83 e0       	ldi	r24, 0x03	; 3
 39e:	3a d0       	rcall	.+116    	; 0x414 <spi_write>
 3a0:	8c 2f       	mov	r24, r28
 3a2:	38 d0       	rcall	.+112    	; 0x414 <spi_write>
 3a4:	80 e0       	ldi	r24, 0x00	; 0
 3a6:	36 d0       	rcall	.+108    	; 0x414 <spi_write>
 3a8:	28 9a       	sbi	0x05, 0	; 5
 3aa:	cf 91       	pop	r28
 3ac:	08 95       	ret

000003ae <mcp2515_bit_modify>:
}

void mcp2515_bit_modify(int address, int mask, int data){
 3ae:	1f 93       	push	r17
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	18 2f       	mov	r17, r24
 3b6:	d6 2f       	mov	r29, r22
 3b8:	c4 2f       	mov	r28, r20
	PORTB &= ~(1 << MCP2515_CS);
 3ba:	28 98       	cbi	0x05, 0	; 5
	
	spi_write(MCP_BITMOD);
 3bc:	85 e0       	ldi	r24, 0x05	; 5
 3be:	2a d0       	rcall	.+84     	; 0x414 <spi_write>
	spi_write(address);
 3c0:	81 2f       	mov	r24, r17
 3c2:	28 d0       	rcall	.+80     	; 0x414 <spi_write>
	spi_write(mask);
 3c4:	8d 2f       	mov	r24, r29
 3c6:	26 d0       	rcall	.+76     	; 0x414 <spi_write>
	spi_write(data);
 3c8:	8c 2f       	mov	r24, r28
 3ca:	24 d0       	rcall	.+72     	; 0x414 <spi_write>

	PORTB |= (1 << MCP2515_CS);
 3cc:	28 9a       	sbi	0x05, 0	; 5
	
}
 3ce:	df 91       	pop	r29
 3d0:	cf 91       	pop	r28
 3d2:	1f 91       	pop	r17
 3d4:	08 95       	ret

000003d6 <mcp2515_reset>:

void mcp2515_reset(){
	PORTB &= ~(1 << MCP2515_CS);
 3d6:	28 98       	cbi	0x05, 0	; 5
	spi_write(MCP_RESET);
 3d8:	80 ec       	ldi	r24, 0xC0	; 192
 3da:	1c d0       	rcall	.+56     	; 0x414 <spi_write>
	PORTB |= (1 << MCP2515_CS);
 3dc:	28 9a       	sbi	0x05, 0	; 5
 3de:	08 95       	ret

000003e0 <mcp2515_init>:
#include "SPI.h"
#include "mcp2515_define.h"


int mcp2515_init(){
	spi_init();
 3e0:	12 d0       	rcall	.+36     	; 0x406 <spi_init>
	mcp2515_reset();
 3e2:	f9 df       	rcall	.-14     	; 0x3d6 <mcp2515_reset>
	
	//self test
	uint8_t value = mcp2515_read(MCP_CANSTAT);
 3e4:	8e e0       	ldi	r24, 0x0E	; 14
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	d6 df       	rcall	.-84     	; 0x396 <mcp2515_read>
	if((value & MODE_MASK) != MODE_CONFIG){
 3ea:	80 7e       	andi	r24, 0xE0	; 224
 3ec:	99 27       	eor	r25, r25
 3ee:	80 38       	cpi	r24, 0x80	; 128
 3f0:	91 05       	cpc	r25, r1
 3f2:	31 f0       	breq	.+12     	; 0x400 <mcp2515_init+0x20>
		printf("ERROR: MCP2515 is NOT in config mode after reset!\n");
 3f4:	81 e2       	ldi	r24, 0x21	; 33
 3f6:	92 e0       	ldi	r25, 0x02	; 2
 3f8:	8f d0       	rcall	.+286    	; 0x518 <puts>
		return 1;
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	08 95       	ret
	}
	return 0;
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	90 e0       	ldi	r25, 0x00	; 0
}
 404:	08 95       	ret

00000406 <spi_init>:
#include "SPI.h"
#include <avr/io.h>

void spi_init(){
			//SI out		SS out		SCK out
	DDRB |= ( 1 << PB2) | (1 << PB0) | (1 << PB1);
 406:	84 b1       	in	r24, 0x04	; 4
 408:	87 60       	ori	r24, 0x07	; 7
 40a:	84 b9       	out	0x04, r24	; 4
	//SO in
	DDRB &= ~(1 << PB3);
 40c:	23 98       	cbi	0x04, 3	; 4
	
	//								 frequency / 16
	SPCR= (1 << SPE) | (1 << MSTR) | (1 << SPR0);
 40e:	81 e5       	ldi	r24, 0x51	; 81
 410:	8c bd       	out	0x2c, r24	; 44
 412:	08 95       	ret

00000414 <spi_write>:

//both read and write
int spi_write(char data){
	//SPDR = data;
	//while(!(SPSR & (1<<SPIF)));
	SPDR = data;
 414:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
 416:	0d b4       	in	r0, 0x2d	; 45
 418:	07 fe       	sbrs	r0, 7
 41a:	fd cf       	rjmp	.-6      	; 0x416 <spi_write+0x2>
	return SPDR;
 41c:	8e b5       	in	r24, 0x2e	; 46
}
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	08 95       	ret

00000422 <uart_Transmit>:
}

void uart_Transmit( unsigned char data ){
	
	//Wait for empty transmit buffer
	while( !( UCSR0A & (1<<UDRE0)) );
 422:	e0 ec       	ldi	r30, 0xC0	; 192
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	90 81       	ld	r25, Z
 428:	95 ff       	sbrs	r25, 5
 42a:	fd cf       	rjmp	.-6      	; 0x426 <uart_Transmit+0x4>
	
	//Put data into buffer, sends the data
	UDR0 = data;
 42c:	80 93 c6 00 	sts	0x00C6, r24
 430:	08 95       	ret

00000432 <uart_Receive>:

unsigned char uart_Receive(void){
	
	//Wait for data to be received
	
	while( !(UCSR0A & (1<<RXC0)) );
 432:	e0 ec       	ldi	r30, 0xC0	; 192
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	80 81       	ld	r24, Z
 438:	88 23       	and	r24, r24
 43a:	ec f7       	brge	.-6      	; 0x436 <uart_Receive+0x4>
	
	//Get and return received data from buffer
	
	return UDR0;
 43c:	80 91 c6 00 	lds	r24, 0x00C6
}
 440:	08 95       	ret

00000442 <uart_Init>:
#include "uart.h"

void uart_Init(unsigned int ubrr){
	
	//Set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
 442:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 446:	80 93 c4 00 	sts	0x00C4, r24
	
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 44a:	88 e1       	ldi	r24, 0x18	; 24
 44c:	80 93 c1 00 	sts	0x00C1, r24
	
	//Set frame format: 8data, 1stop bit
	UCSR0C = (1 << 7)|(3<<UCSZ00);//here, 7 replaces URSEL0 from ATmega162 project
 450:	86 e8       	ldi	r24, 0x86	; 134
 452:	80 93 c2 00 	sts	0x00C2, r24
	
	fdevopen(uart_Transmit, uart_Receive);
 456:	69 e1       	ldi	r22, 0x19	; 25
 458:	72 e0       	ldi	r23, 0x02	; 2
 45a:	81 e1       	ldi	r24, 0x11	; 17
 45c:	92 e0       	ldi	r25, 0x02	; 2
 45e:	01 c0       	rjmp	.+2      	; 0x462 <fdevopen>
 460:	08 95       	ret

00000462 <fdevopen>:
 462:	0f 93       	push	r16
 464:	1f 93       	push	r17
 466:	cf 93       	push	r28
 468:	df 93       	push	r29
 46a:	ec 01       	movw	r28, r24
 46c:	8b 01       	movw	r16, r22
 46e:	00 97       	sbiw	r24, 0x00	; 0
 470:	31 f4       	brne	.+12     	; 0x47e <fdevopen+0x1c>
 472:	61 15       	cp	r22, r1
 474:	71 05       	cpc	r23, r1
 476:	19 f4       	brne	.+6      	; 0x47e <fdevopen+0x1c>
 478:	80 e0       	ldi	r24, 0x00	; 0
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	37 c0       	rjmp	.+110    	; 0x4ec <fdevopen+0x8a>
 47e:	6e e0       	ldi	r22, 0x0E	; 14
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	81 e0       	ldi	r24, 0x01	; 1
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	63 d2       	rcall	.+1222   	; 0x94e <calloc>
 488:	fc 01       	movw	r30, r24
 48a:	00 97       	sbiw	r24, 0x00	; 0
 48c:	a9 f3       	breq	.-22     	; 0x478 <fdevopen+0x16>
 48e:	80 e8       	ldi	r24, 0x80	; 128
 490:	83 83       	std	Z+3, r24	; 0x03
 492:	01 15       	cp	r16, r1
 494:	11 05       	cpc	r17, r1
 496:	71 f0       	breq	.+28     	; 0x4b4 <fdevopen+0x52>
 498:	13 87       	std	Z+11, r17	; 0x0b
 49a:	02 87       	std	Z+10, r16	; 0x0a
 49c:	81 e8       	ldi	r24, 0x81	; 129
 49e:	83 83       	std	Z+3, r24	; 0x03
 4a0:	80 91 61 02 	lds	r24, 0x0261
 4a4:	90 91 62 02 	lds	r25, 0x0262
 4a8:	89 2b       	or	r24, r25
 4aa:	21 f4       	brne	.+8      	; 0x4b4 <fdevopen+0x52>
 4ac:	f0 93 62 02 	sts	0x0262, r31
 4b0:	e0 93 61 02 	sts	0x0261, r30
 4b4:	20 97       	sbiw	r28, 0x00	; 0
 4b6:	c9 f0       	breq	.+50     	; 0x4ea <fdevopen+0x88>
 4b8:	d1 87       	std	Z+9, r29	; 0x09
 4ba:	c0 87       	std	Z+8, r28	; 0x08
 4bc:	83 81       	ldd	r24, Z+3	; 0x03
 4be:	82 60       	ori	r24, 0x02	; 2
 4c0:	83 83       	std	Z+3, r24	; 0x03
 4c2:	80 91 63 02 	lds	r24, 0x0263
 4c6:	90 91 64 02 	lds	r25, 0x0264
 4ca:	89 2b       	or	r24, r25
 4cc:	71 f4       	brne	.+28     	; 0x4ea <fdevopen+0x88>
 4ce:	f0 93 64 02 	sts	0x0264, r31
 4d2:	e0 93 63 02 	sts	0x0263, r30
 4d6:	80 91 65 02 	lds	r24, 0x0265
 4da:	90 91 66 02 	lds	r25, 0x0266
 4de:	89 2b       	or	r24, r25
 4e0:	21 f4       	brne	.+8      	; 0x4ea <fdevopen+0x88>
 4e2:	f0 93 66 02 	sts	0x0266, r31
 4e6:	e0 93 65 02 	sts	0x0265, r30
 4ea:	cf 01       	movw	r24, r30
 4ec:	df 91       	pop	r29
 4ee:	cf 91       	pop	r28
 4f0:	1f 91       	pop	r17
 4f2:	0f 91       	pop	r16
 4f4:	08 95       	ret

000004f6 <printf>:
 4f6:	cf 93       	push	r28
 4f8:	df 93       	push	r29
 4fa:	cd b7       	in	r28, 0x3d	; 61
 4fc:	de b7       	in	r29, 0x3e	; 62
 4fe:	fe 01       	movw	r30, r28
 500:	36 96       	adiw	r30, 0x06	; 6
 502:	61 91       	ld	r22, Z+
 504:	71 91       	ld	r23, Z+
 506:	af 01       	movw	r20, r30
 508:	80 91 63 02 	lds	r24, 0x0263
 50c:	90 91 64 02 	lds	r25, 0x0264
 510:	30 d0       	rcall	.+96     	; 0x572 <vfprintf>
 512:	df 91       	pop	r29
 514:	cf 91       	pop	r28
 516:	08 95       	ret

00000518 <puts>:
 518:	0f 93       	push	r16
 51a:	1f 93       	push	r17
 51c:	cf 93       	push	r28
 51e:	df 93       	push	r29
 520:	e0 91 63 02 	lds	r30, 0x0263
 524:	f0 91 64 02 	lds	r31, 0x0264
 528:	23 81       	ldd	r18, Z+3	; 0x03
 52a:	21 ff       	sbrs	r18, 1
 52c:	1b c0       	rjmp	.+54     	; 0x564 <puts+0x4c>
 52e:	ec 01       	movw	r28, r24
 530:	00 e0       	ldi	r16, 0x00	; 0
 532:	10 e0       	ldi	r17, 0x00	; 0
 534:	89 91       	ld	r24, Y+
 536:	60 91 63 02 	lds	r22, 0x0263
 53a:	70 91 64 02 	lds	r23, 0x0264
 53e:	db 01       	movw	r26, r22
 540:	18 96       	adiw	r26, 0x08	; 8
 542:	ed 91       	ld	r30, X+
 544:	fc 91       	ld	r31, X
 546:	19 97       	sbiw	r26, 0x09	; 9
 548:	88 23       	and	r24, r24
 54a:	31 f0       	breq	.+12     	; 0x558 <puts+0x40>
 54c:	19 95       	eicall
 54e:	89 2b       	or	r24, r25
 550:	89 f3       	breq	.-30     	; 0x534 <puts+0x1c>
 552:	0f ef       	ldi	r16, 0xFF	; 255
 554:	1f ef       	ldi	r17, 0xFF	; 255
 556:	ee cf       	rjmp	.-36     	; 0x534 <puts+0x1c>
 558:	8a e0       	ldi	r24, 0x0A	; 10
 55a:	19 95       	eicall
 55c:	89 2b       	or	r24, r25
 55e:	11 f4       	brne	.+4      	; 0x564 <puts+0x4c>
 560:	c8 01       	movw	r24, r16
 562:	02 c0       	rjmp	.+4      	; 0x568 <puts+0x50>
 564:	8f ef       	ldi	r24, 0xFF	; 255
 566:	9f ef       	ldi	r25, 0xFF	; 255
 568:	df 91       	pop	r29
 56a:	cf 91       	pop	r28
 56c:	1f 91       	pop	r17
 56e:	0f 91       	pop	r16
 570:	08 95       	ret

00000572 <vfprintf>:
 572:	2f 92       	push	r2
 574:	3f 92       	push	r3
 576:	4f 92       	push	r4
 578:	5f 92       	push	r5
 57a:	6f 92       	push	r6
 57c:	7f 92       	push	r7
 57e:	8f 92       	push	r8
 580:	9f 92       	push	r9
 582:	af 92       	push	r10
 584:	bf 92       	push	r11
 586:	cf 92       	push	r12
 588:	df 92       	push	r13
 58a:	ef 92       	push	r14
 58c:	ff 92       	push	r15
 58e:	0f 93       	push	r16
 590:	1f 93       	push	r17
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	2c 97       	sbiw	r28, 0x0c	; 12
 59c:	0f b6       	in	r0, 0x3f	; 63
 59e:	f8 94       	cli
 5a0:	de bf       	out	0x3e, r29	; 62
 5a2:	0f be       	out	0x3f, r0	; 63
 5a4:	cd bf       	out	0x3d, r28	; 61
 5a6:	7c 01       	movw	r14, r24
 5a8:	6b 01       	movw	r12, r22
 5aa:	8a 01       	movw	r16, r20
 5ac:	fc 01       	movw	r30, r24
 5ae:	17 82       	std	Z+7, r1	; 0x07
 5b0:	16 82       	std	Z+6, r1	; 0x06
 5b2:	83 81       	ldd	r24, Z+3	; 0x03
 5b4:	81 ff       	sbrs	r24, 1
 5b6:	b0 c1       	rjmp	.+864    	; 0x918 <vfprintf+0x3a6>
 5b8:	ce 01       	movw	r24, r28
 5ba:	01 96       	adiw	r24, 0x01	; 1
 5bc:	4c 01       	movw	r8, r24
 5be:	f7 01       	movw	r30, r14
 5c0:	93 81       	ldd	r25, Z+3	; 0x03
 5c2:	f6 01       	movw	r30, r12
 5c4:	93 fd       	sbrc	r25, 3
 5c6:	85 91       	lpm	r24, Z+
 5c8:	93 ff       	sbrs	r25, 3
 5ca:	81 91       	ld	r24, Z+
 5cc:	6f 01       	movw	r12, r30
 5ce:	88 23       	and	r24, r24
 5d0:	09 f4       	brne	.+2      	; 0x5d4 <vfprintf+0x62>
 5d2:	9e c1       	rjmp	.+828    	; 0x910 <vfprintf+0x39e>
 5d4:	85 32       	cpi	r24, 0x25	; 37
 5d6:	39 f4       	brne	.+14     	; 0x5e6 <vfprintf+0x74>
 5d8:	93 fd       	sbrc	r25, 3
 5da:	85 91       	lpm	r24, Z+
 5dc:	93 ff       	sbrs	r25, 3
 5de:	81 91       	ld	r24, Z+
 5e0:	6f 01       	movw	r12, r30
 5e2:	85 32       	cpi	r24, 0x25	; 37
 5e4:	21 f4       	brne	.+8      	; 0x5ee <vfprintf+0x7c>
 5e6:	b7 01       	movw	r22, r14
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0f d3       	rcall	.+1566   	; 0xc0a <fputc>
 5ec:	e8 cf       	rjmp	.-48     	; 0x5be <vfprintf+0x4c>
 5ee:	51 2c       	mov	r5, r1
 5f0:	31 2c       	mov	r3, r1
 5f2:	20 e0       	ldi	r18, 0x00	; 0
 5f4:	20 32       	cpi	r18, 0x20	; 32
 5f6:	a0 f4       	brcc	.+40     	; 0x620 <vfprintf+0xae>
 5f8:	8b 32       	cpi	r24, 0x2B	; 43
 5fa:	69 f0       	breq	.+26     	; 0x616 <vfprintf+0xa4>
 5fc:	30 f4       	brcc	.+12     	; 0x60a <vfprintf+0x98>
 5fe:	80 32       	cpi	r24, 0x20	; 32
 600:	59 f0       	breq	.+22     	; 0x618 <vfprintf+0xa6>
 602:	83 32       	cpi	r24, 0x23	; 35
 604:	69 f4       	brne	.+26     	; 0x620 <vfprintf+0xae>
 606:	20 61       	ori	r18, 0x10	; 16
 608:	2c c0       	rjmp	.+88     	; 0x662 <vfprintf+0xf0>
 60a:	8d 32       	cpi	r24, 0x2D	; 45
 60c:	39 f0       	breq	.+14     	; 0x61c <vfprintf+0xaa>
 60e:	80 33       	cpi	r24, 0x30	; 48
 610:	39 f4       	brne	.+14     	; 0x620 <vfprintf+0xae>
 612:	21 60       	ori	r18, 0x01	; 1
 614:	26 c0       	rjmp	.+76     	; 0x662 <vfprintf+0xf0>
 616:	22 60       	ori	r18, 0x02	; 2
 618:	24 60       	ori	r18, 0x04	; 4
 61a:	23 c0       	rjmp	.+70     	; 0x662 <vfprintf+0xf0>
 61c:	28 60       	ori	r18, 0x08	; 8
 61e:	21 c0       	rjmp	.+66     	; 0x662 <vfprintf+0xf0>
 620:	27 fd       	sbrc	r18, 7
 622:	27 c0       	rjmp	.+78     	; 0x672 <vfprintf+0x100>
 624:	30 ed       	ldi	r19, 0xD0	; 208
 626:	38 0f       	add	r19, r24
 628:	3a 30       	cpi	r19, 0x0A	; 10
 62a:	78 f4       	brcc	.+30     	; 0x64a <vfprintf+0xd8>
 62c:	26 ff       	sbrs	r18, 6
 62e:	06 c0       	rjmp	.+12     	; 0x63c <vfprintf+0xca>
 630:	fa e0       	ldi	r31, 0x0A	; 10
 632:	5f 9e       	mul	r5, r31
 634:	30 0d       	add	r19, r0
 636:	11 24       	eor	r1, r1
 638:	53 2e       	mov	r5, r19
 63a:	13 c0       	rjmp	.+38     	; 0x662 <vfprintf+0xf0>
 63c:	8a e0       	ldi	r24, 0x0A	; 10
 63e:	38 9e       	mul	r3, r24
 640:	30 0d       	add	r19, r0
 642:	11 24       	eor	r1, r1
 644:	33 2e       	mov	r3, r19
 646:	20 62       	ori	r18, 0x20	; 32
 648:	0c c0       	rjmp	.+24     	; 0x662 <vfprintf+0xf0>
 64a:	8e 32       	cpi	r24, 0x2E	; 46
 64c:	21 f4       	brne	.+8      	; 0x656 <vfprintf+0xe4>
 64e:	26 fd       	sbrc	r18, 6
 650:	5f c1       	rjmp	.+702    	; 0x910 <vfprintf+0x39e>
 652:	20 64       	ori	r18, 0x40	; 64
 654:	06 c0       	rjmp	.+12     	; 0x662 <vfprintf+0xf0>
 656:	8c 36       	cpi	r24, 0x6C	; 108
 658:	11 f4       	brne	.+4      	; 0x65e <vfprintf+0xec>
 65a:	20 68       	ori	r18, 0x80	; 128
 65c:	02 c0       	rjmp	.+4      	; 0x662 <vfprintf+0xf0>
 65e:	88 36       	cpi	r24, 0x68	; 104
 660:	41 f4       	brne	.+16     	; 0x672 <vfprintf+0x100>
 662:	f6 01       	movw	r30, r12
 664:	93 fd       	sbrc	r25, 3
 666:	85 91       	lpm	r24, Z+
 668:	93 ff       	sbrs	r25, 3
 66a:	81 91       	ld	r24, Z+
 66c:	6f 01       	movw	r12, r30
 66e:	81 11       	cpse	r24, r1
 670:	c1 cf       	rjmp	.-126    	; 0x5f4 <vfprintf+0x82>
 672:	98 2f       	mov	r25, r24
 674:	9f 7d       	andi	r25, 0xDF	; 223
 676:	95 54       	subi	r25, 0x45	; 69
 678:	93 30       	cpi	r25, 0x03	; 3
 67a:	28 f4       	brcc	.+10     	; 0x686 <vfprintf+0x114>
 67c:	0c 5f       	subi	r16, 0xFC	; 252
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	ff e3       	ldi	r31, 0x3F	; 63
 682:	f9 83       	std	Y+1, r31	; 0x01
 684:	0d c0       	rjmp	.+26     	; 0x6a0 <vfprintf+0x12e>
 686:	83 36       	cpi	r24, 0x63	; 99
 688:	31 f0       	breq	.+12     	; 0x696 <vfprintf+0x124>
 68a:	83 37       	cpi	r24, 0x73	; 115
 68c:	71 f0       	breq	.+28     	; 0x6aa <vfprintf+0x138>
 68e:	83 35       	cpi	r24, 0x53	; 83
 690:	09 f0       	breq	.+2      	; 0x694 <vfprintf+0x122>
 692:	57 c0       	rjmp	.+174    	; 0x742 <vfprintf+0x1d0>
 694:	21 c0       	rjmp	.+66     	; 0x6d8 <vfprintf+0x166>
 696:	f8 01       	movw	r30, r16
 698:	80 81       	ld	r24, Z
 69a:	89 83       	std	Y+1, r24	; 0x01
 69c:	0e 5f       	subi	r16, 0xFE	; 254
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	44 24       	eor	r4, r4
 6a2:	43 94       	inc	r4
 6a4:	51 2c       	mov	r5, r1
 6a6:	54 01       	movw	r10, r8
 6a8:	14 c0       	rjmp	.+40     	; 0x6d2 <vfprintf+0x160>
 6aa:	38 01       	movw	r6, r16
 6ac:	f2 e0       	ldi	r31, 0x02	; 2
 6ae:	6f 0e       	add	r6, r31
 6b0:	71 1c       	adc	r7, r1
 6b2:	f8 01       	movw	r30, r16
 6b4:	a0 80       	ld	r10, Z
 6b6:	b1 80       	ldd	r11, Z+1	; 0x01
 6b8:	26 ff       	sbrs	r18, 6
 6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <vfprintf+0x150>
 6bc:	65 2d       	mov	r22, r5
 6be:	70 e0       	ldi	r23, 0x00	; 0
 6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <vfprintf+0x154>
 6c2:	6f ef       	ldi	r22, 0xFF	; 255
 6c4:	7f ef       	ldi	r23, 0xFF	; 255
 6c6:	c5 01       	movw	r24, r10
 6c8:	2c 87       	std	Y+12, r18	; 0x0c
 6ca:	94 d2       	rcall	.+1320   	; 0xbf4 <strnlen>
 6cc:	2c 01       	movw	r4, r24
 6ce:	83 01       	movw	r16, r6
 6d0:	2c 85       	ldd	r18, Y+12	; 0x0c
 6d2:	2f 77       	andi	r18, 0x7F	; 127
 6d4:	22 2e       	mov	r2, r18
 6d6:	16 c0       	rjmp	.+44     	; 0x704 <vfprintf+0x192>
 6d8:	38 01       	movw	r6, r16
 6da:	f2 e0       	ldi	r31, 0x02	; 2
 6dc:	6f 0e       	add	r6, r31
 6de:	71 1c       	adc	r7, r1
 6e0:	f8 01       	movw	r30, r16
 6e2:	a0 80       	ld	r10, Z
 6e4:	b1 80       	ldd	r11, Z+1	; 0x01
 6e6:	26 ff       	sbrs	r18, 6
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <vfprintf+0x17e>
 6ea:	65 2d       	mov	r22, r5
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <vfprintf+0x182>
 6f0:	6f ef       	ldi	r22, 0xFF	; 255
 6f2:	7f ef       	ldi	r23, 0xFF	; 255
 6f4:	c5 01       	movw	r24, r10
 6f6:	2c 87       	std	Y+12, r18	; 0x0c
 6f8:	6b d2       	rcall	.+1238   	; 0xbd0 <strnlen_P>
 6fa:	2c 01       	movw	r4, r24
 6fc:	2c 85       	ldd	r18, Y+12	; 0x0c
 6fe:	20 68       	ori	r18, 0x80	; 128
 700:	22 2e       	mov	r2, r18
 702:	83 01       	movw	r16, r6
 704:	23 fc       	sbrc	r2, 3
 706:	19 c0       	rjmp	.+50     	; 0x73a <vfprintf+0x1c8>
 708:	83 2d       	mov	r24, r3
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	48 16       	cp	r4, r24
 70e:	59 06       	cpc	r5, r25
 710:	a0 f4       	brcc	.+40     	; 0x73a <vfprintf+0x1c8>
 712:	b7 01       	movw	r22, r14
 714:	80 e2       	ldi	r24, 0x20	; 32
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	78 d2       	rcall	.+1264   	; 0xc0a <fputc>
 71a:	3a 94       	dec	r3
 71c:	f5 cf       	rjmp	.-22     	; 0x708 <vfprintf+0x196>
 71e:	f5 01       	movw	r30, r10
 720:	27 fc       	sbrc	r2, 7
 722:	85 91       	lpm	r24, Z+
 724:	27 fe       	sbrs	r2, 7
 726:	81 91       	ld	r24, Z+
 728:	5f 01       	movw	r10, r30
 72a:	b7 01       	movw	r22, r14
 72c:	90 e0       	ldi	r25, 0x00	; 0
 72e:	6d d2       	rcall	.+1242   	; 0xc0a <fputc>
 730:	31 10       	cpse	r3, r1
 732:	3a 94       	dec	r3
 734:	f1 e0       	ldi	r31, 0x01	; 1
 736:	4f 1a       	sub	r4, r31
 738:	51 08       	sbc	r5, r1
 73a:	41 14       	cp	r4, r1
 73c:	51 04       	cpc	r5, r1
 73e:	79 f7       	brne	.-34     	; 0x71e <vfprintf+0x1ac>
 740:	de c0       	rjmp	.+444    	; 0x8fe <vfprintf+0x38c>
 742:	84 36       	cpi	r24, 0x64	; 100
 744:	11 f0       	breq	.+4      	; 0x74a <vfprintf+0x1d8>
 746:	89 36       	cpi	r24, 0x69	; 105
 748:	31 f5       	brne	.+76     	; 0x796 <vfprintf+0x224>
 74a:	f8 01       	movw	r30, r16
 74c:	27 ff       	sbrs	r18, 7
 74e:	07 c0       	rjmp	.+14     	; 0x75e <vfprintf+0x1ec>
 750:	60 81       	ld	r22, Z
 752:	71 81       	ldd	r23, Z+1	; 0x01
 754:	82 81       	ldd	r24, Z+2	; 0x02
 756:	93 81       	ldd	r25, Z+3	; 0x03
 758:	0c 5f       	subi	r16, 0xFC	; 252
 75a:	1f 4f       	sbci	r17, 0xFF	; 255
 75c:	08 c0       	rjmp	.+16     	; 0x76e <vfprintf+0x1fc>
 75e:	60 81       	ld	r22, Z
 760:	71 81       	ldd	r23, Z+1	; 0x01
 762:	88 27       	eor	r24, r24
 764:	77 fd       	sbrc	r23, 7
 766:	80 95       	com	r24
 768:	98 2f       	mov	r25, r24
 76a:	0e 5f       	subi	r16, 0xFE	; 254
 76c:	1f 4f       	sbci	r17, 0xFF	; 255
 76e:	2f 76       	andi	r18, 0x6F	; 111
 770:	b2 2e       	mov	r11, r18
 772:	97 ff       	sbrs	r25, 7
 774:	09 c0       	rjmp	.+18     	; 0x788 <vfprintf+0x216>
 776:	90 95       	com	r25
 778:	80 95       	com	r24
 77a:	70 95       	com	r23
 77c:	61 95       	neg	r22
 77e:	7f 4f       	sbci	r23, 0xFF	; 255
 780:	8f 4f       	sbci	r24, 0xFF	; 255
 782:	9f 4f       	sbci	r25, 0xFF	; 255
 784:	20 68       	ori	r18, 0x80	; 128
 786:	b2 2e       	mov	r11, r18
 788:	2a e0       	ldi	r18, 0x0A	; 10
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	a4 01       	movw	r20, r8
 78e:	6f d2       	rcall	.+1246   	; 0xc6e <__ultoa_invert>
 790:	a8 2e       	mov	r10, r24
 792:	a8 18       	sub	r10, r8
 794:	43 c0       	rjmp	.+134    	; 0x81c <vfprintf+0x2aa>
 796:	85 37       	cpi	r24, 0x75	; 117
 798:	29 f4       	brne	.+10     	; 0x7a4 <vfprintf+0x232>
 79a:	2f 7e       	andi	r18, 0xEF	; 239
 79c:	b2 2e       	mov	r11, r18
 79e:	2a e0       	ldi	r18, 0x0A	; 10
 7a0:	30 e0       	ldi	r19, 0x00	; 0
 7a2:	25 c0       	rjmp	.+74     	; 0x7ee <vfprintf+0x27c>
 7a4:	f2 2f       	mov	r31, r18
 7a6:	f9 7f       	andi	r31, 0xF9	; 249
 7a8:	bf 2e       	mov	r11, r31
 7aa:	8f 36       	cpi	r24, 0x6F	; 111
 7ac:	c1 f0       	breq	.+48     	; 0x7de <vfprintf+0x26c>
 7ae:	18 f4       	brcc	.+6      	; 0x7b6 <vfprintf+0x244>
 7b0:	88 35       	cpi	r24, 0x58	; 88
 7b2:	79 f0       	breq	.+30     	; 0x7d2 <vfprintf+0x260>
 7b4:	ad c0       	rjmp	.+346    	; 0x910 <vfprintf+0x39e>
 7b6:	80 37       	cpi	r24, 0x70	; 112
 7b8:	19 f0       	breq	.+6      	; 0x7c0 <vfprintf+0x24e>
 7ba:	88 37       	cpi	r24, 0x78	; 120
 7bc:	21 f0       	breq	.+8      	; 0x7c6 <vfprintf+0x254>
 7be:	a8 c0       	rjmp	.+336    	; 0x910 <vfprintf+0x39e>
 7c0:	2f 2f       	mov	r18, r31
 7c2:	20 61       	ori	r18, 0x10	; 16
 7c4:	b2 2e       	mov	r11, r18
 7c6:	b4 fe       	sbrs	r11, 4
 7c8:	0d c0       	rjmp	.+26     	; 0x7e4 <vfprintf+0x272>
 7ca:	8b 2d       	mov	r24, r11
 7cc:	84 60       	ori	r24, 0x04	; 4
 7ce:	b8 2e       	mov	r11, r24
 7d0:	09 c0       	rjmp	.+18     	; 0x7e4 <vfprintf+0x272>
 7d2:	24 ff       	sbrs	r18, 4
 7d4:	0a c0       	rjmp	.+20     	; 0x7ea <vfprintf+0x278>
 7d6:	9f 2f       	mov	r25, r31
 7d8:	96 60       	ori	r25, 0x06	; 6
 7da:	b9 2e       	mov	r11, r25
 7dc:	06 c0       	rjmp	.+12     	; 0x7ea <vfprintf+0x278>
 7de:	28 e0       	ldi	r18, 0x08	; 8
 7e0:	30 e0       	ldi	r19, 0x00	; 0
 7e2:	05 c0       	rjmp	.+10     	; 0x7ee <vfprintf+0x27c>
 7e4:	20 e1       	ldi	r18, 0x10	; 16
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	02 c0       	rjmp	.+4      	; 0x7ee <vfprintf+0x27c>
 7ea:	20 e1       	ldi	r18, 0x10	; 16
 7ec:	32 e0       	ldi	r19, 0x02	; 2
 7ee:	f8 01       	movw	r30, r16
 7f0:	b7 fe       	sbrs	r11, 7
 7f2:	07 c0       	rjmp	.+14     	; 0x802 <vfprintf+0x290>
 7f4:	60 81       	ld	r22, Z
 7f6:	71 81       	ldd	r23, Z+1	; 0x01
 7f8:	82 81       	ldd	r24, Z+2	; 0x02
 7fa:	93 81       	ldd	r25, Z+3	; 0x03
 7fc:	0c 5f       	subi	r16, 0xFC	; 252
 7fe:	1f 4f       	sbci	r17, 0xFF	; 255
 800:	06 c0       	rjmp	.+12     	; 0x80e <vfprintf+0x29c>
 802:	60 81       	ld	r22, Z
 804:	71 81       	ldd	r23, Z+1	; 0x01
 806:	80 e0       	ldi	r24, 0x00	; 0
 808:	90 e0       	ldi	r25, 0x00	; 0
 80a:	0e 5f       	subi	r16, 0xFE	; 254
 80c:	1f 4f       	sbci	r17, 0xFF	; 255
 80e:	a4 01       	movw	r20, r8
 810:	2e d2       	rcall	.+1116   	; 0xc6e <__ultoa_invert>
 812:	a8 2e       	mov	r10, r24
 814:	a8 18       	sub	r10, r8
 816:	fb 2d       	mov	r31, r11
 818:	ff 77       	andi	r31, 0x7F	; 127
 81a:	bf 2e       	mov	r11, r31
 81c:	b6 fe       	sbrs	r11, 6
 81e:	0b c0       	rjmp	.+22     	; 0x836 <vfprintf+0x2c4>
 820:	2b 2d       	mov	r18, r11
 822:	2e 7f       	andi	r18, 0xFE	; 254
 824:	a5 14       	cp	r10, r5
 826:	50 f4       	brcc	.+20     	; 0x83c <vfprintf+0x2ca>
 828:	b4 fe       	sbrs	r11, 4
 82a:	0a c0       	rjmp	.+20     	; 0x840 <vfprintf+0x2ce>
 82c:	b2 fc       	sbrc	r11, 2
 82e:	08 c0       	rjmp	.+16     	; 0x840 <vfprintf+0x2ce>
 830:	2b 2d       	mov	r18, r11
 832:	2e 7e       	andi	r18, 0xEE	; 238
 834:	05 c0       	rjmp	.+10     	; 0x840 <vfprintf+0x2ce>
 836:	7a 2c       	mov	r7, r10
 838:	2b 2d       	mov	r18, r11
 83a:	03 c0       	rjmp	.+6      	; 0x842 <vfprintf+0x2d0>
 83c:	7a 2c       	mov	r7, r10
 83e:	01 c0       	rjmp	.+2      	; 0x842 <vfprintf+0x2d0>
 840:	75 2c       	mov	r7, r5
 842:	24 ff       	sbrs	r18, 4
 844:	0d c0       	rjmp	.+26     	; 0x860 <vfprintf+0x2ee>
 846:	fe 01       	movw	r30, r28
 848:	ea 0d       	add	r30, r10
 84a:	f1 1d       	adc	r31, r1
 84c:	80 81       	ld	r24, Z
 84e:	80 33       	cpi	r24, 0x30	; 48
 850:	11 f4       	brne	.+4      	; 0x856 <vfprintf+0x2e4>
 852:	29 7e       	andi	r18, 0xE9	; 233
 854:	09 c0       	rjmp	.+18     	; 0x868 <vfprintf+0x2f6>
 856:	22 ff       	sbrs	r18, 2
 858:	06 c0       	rjmp	.+12     	; 0x866 <vfprintf+0x2f4>
 85a:	73 94       	inc	r7
 85c:	73 94       	inc	r7
 85e:	04 c0       	rjmp	.+8      	; 0x868 <vfprintf+0x2f6>
 860:	82 2f       	mov	r24, r18
 862:	86 78       	andi	r24, 0x86	; 134
 864:	09 f0       	breq	.+2      	; 0x868 <vfprintf+0x2f6>
 866:	73 94       	inc	r7
 868:	23 fd       	sbrc	r18, 3
 86a:	12 c0       	rjmp	.+36     	; 0x890 <vfprintf+0x31e>
 86c:	20 ff       	sbrs	r18, 0
 86e:	06 c0       	rjmp	.+12     	; 0x87c <vfprintf+0x30a>
 870:	5a 2c       	mov	r5, r10
 872:	73 14       	cp	r7, r3
 874:	18 f4       	brcc	.+6      	; 0x87c <vfprintf+0x30a>
 876:	53 0c       	add	r5, r3
 878:	57 18       	sub	r5, r7
 87a:	73 2c       	mov	r7, r3
 87c:	73 14       	cp	r7, r3
 87e:	60 f4       	brcc	.+24     	; 0x898 <vfprintf+0x326>
 880:	b7 01       	movw	r22, r14
 882:	80 e2       	ldi	r24, 0x20	; 32
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	2c 87       	std	Y+12, r18	; 0x0c
 888:	c0 d1       	rcall	.+896    	; 0xc0a <fputc>
 88a:	73 94       	inc	r7
 88c:	2c 85       	ldd	r18, Y+12	; 0x0c
 88e:	f6 cf       	rjmp	.-20     	; 0x87c <vfprintf+0x30a>
 890:	73 14       	cp	r7, r3
 892:	10 f4       	brcc	.+4      	; 0x898 <vfprintf+0x326>
 894:	37 18       	sub	r3, r7
 896:	01 c0       	rjmp	.+2      	; 0x89a <vfprintf+0x328>
 898:	31 2c       	mov	r3, r1
 89a:	24 ff       	sbrs	r18, 4
 89c:	11 c0       	rjmp	.+34     	; 0x8c0 <vfprintf+0x34e>
 89e:	b7 01       	movw	r22, r14
 8a0:	80 e3       	ldi	r24, 0x30	; 48
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	2c 87       	std	Y+12, r18	; 0x0c
 8a6:	b1 d1       	rcall	.+866    	; 0xc0a <fputc>
 8a8:	2c 85       	ldd	r18, Y+12	; 0x0c
 8aa:	22 ff       	sbrs	r18, 2
 8ac:	16 c0       	rjmp	.+44     	; 0x8da <vfprintf+0x368>
 8ae:	21 ff       	sbrs	r18, 1
 8b0:	03 c0       	rjmp	.+6      	; 0x8b8 <vfprintf+0x346>
 8b2:	88 e5       	ldi	r24, 0x58	; 88
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	02 c0       	rjmp	.+4      	; 0x8bc <vfprintf+0x34a>
 8b8:	88 e7       	ldi	r24, 0x78	; 120
 8ba:	90 e0       	ldi	r25, 0x00	; 0
 8bc:	b7 01       	movw	r22, r14
 8be:	0c c0       	rjmp	.+24     	; 0x8d8 <vfprintf+0x366>
 8c0:	82 2f       	mov	r24, r18
 8c2:	86 78       	andi	r24, 0x86	; 134
 8c4:	51 f0       	breq	.+20     	; 0x8da <vfprintf+0x368>
 8c6:	21 fd       	sbrc	r18, 1
 8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x35c>
 8ca:	80 e2       	ldi	r24, 0x20	; 32
 8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <vfprintf+0x35e>
 8ce:	8b e2       	ldi	r24, 0x2B	; 43
 8d0:	27 fd       	sbrc	r18, 7
 8d2:	8d e2       	ldi	r24, 0x2D	; 45
 8d4:	b7 01       	movw	r22, r14
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	98 d1       	rcall	.+816    	; 0xc0a <fputc>
 8da:	a5 14       	cp	r10, r5
 8dc:	30 f4       	brcc	.+12     	; 0x8ea <vfprintf+0x378>
 8de:	b7 01       	movw	r22, r14
 8e0:	80 e3       	ldi	r24, 0x30	; 48
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	92 d1       	rcall	.+804    	; 0xc0a <fputc>
 8e6:	5a 94       	dec	r5
 8e8:	f8 cf       	rjmp	.-16     	; 0x8da <vfprintf+0x368>
 8ea:	aa 94       	dec	r10
 8ec:	f4 01       	movw	r30, r8
 8ee:	ea 0d       	add	r30, r10
 8f0:	f1 1d       	adc	r31, r1
 8f2:	80 81       	ld	r24, Z
 8f4:	b7 01       	movw	r22, r14
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	88 d1       	rcall	.+784    	; 0xc0a <fputc>
 8fa:	a1 10       	cpse	r10, r1
 8fc:	f6 cf       	rjmp	.-20     	; 0x8ea <vfprintf+0x378>
 8fe:	33 20       	and	r3, r3
 900:	09 f4       	brne	.+2      	; 0x904 <vfprintf+0x392>
 902:	5d ce       	rjmp	.-838    	; 0x5be <vfprintf+0x4c>
 904:	b7 01       	movw	r22, r14
 906:	80 e2       	ldi	r24, 0x20	; 32
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	7f d1       	rcall	.+766    	; 0xc0a <fputc>
 90c:	3a 94       	dec	r3
 90e:	f7 cf       	rjmp	.-18     	; 0x8fe <vfprintf+0x38c>
 910:	f7 01       	movw	r30, r14
 912:	86 81       	ldd	r24, Z+6	; 0x06
 914:	97 81       	ldd	r25, Z+7	; 0x07
 916:	02 c0       	rjmp	.+4      	; 0x91c <vfprintf+0x3aa>
 918:	8f ef       	ldi	r24, 0xFF	; 255
 91a:	9f ef       	ldi	r25, 0xFF	; 255
 91c:	2c 96       	adiw	r28, 0x0c	; 12
 91e:	0f b6       	in	r0, 0x3f	; 63
 920:	f8 94       	cli
 922:	de bf       	out	0x3e, r29	; 62
 924:	0f be       	out	0x3f, r0	; 63
 926:	cd bf       	out	0x3d, r28	; 61
 928:	df 91       	pop	r29
 92a:	cf 91       	pop	r28
 92c:	1f 91       	pop	r17
 92e:	0f 91       	pop	r16
 930:	ff 90       	pop	r15
 932:	ef 90       	pop	r14
 934:	df 90       	pop	r13
 936:	cf 90       	pop	r12
 938:	bf 90       	pop	r11
 93a:	af 90       	pop	r10
 93c:	9f 90       	pop	r9
 93e:	8f 90       	pop	r8
 940:	7f 90       	pop	r7
 942:	6f 90       	pop	r6
 944:	5f 90       	pop	r5
 946:	4f 90       	pop	r4
 948:	3f 90       	pop	r3
 94a:	2f 90       	pop	r2
 94c:	08 95       	ret

0000094e <calloc>:
 94e:	0f 93       	push	r16
 950:	1f 93       	push	r17
 952:	cf 93       	push	r28
 954:	df 93       	push	r29
 956:	86 9f       	mul	r24, r22
 958:	80 01       	movw	r16, r0
 95a:	87 9f       	mul	r24, r23
 95c:	10 0d       	add	r17, r0
 95e:	96 9f       	mul	r25, r22
 960:	10 0d       	add	r17, r0
 962:	11 24       	eor	r1, r1
 964:	c8 01       	movw	r24, r16
 966:	0d d0       	rcall	.+26     	; 0x982 <malloc>
 968:	ec 01       	movw	r28, r24
 96a:	00 97       	sbiw	r24, 0x00	; 0
 96c:	21 f0       	breq	.+8      	; 0x976 <calloc+0x28>
 96e:	a8 01       	movw	r20, r16
 970:	60 e0       	ldi	r22, 0x00	; 0
 972:	70 e0       	ldi	r23, 0x00	; 0
 974:	38 d1       	rcall	.+624    	; 0xbe6 <memset>
 976:	ce 01       	movw	r24, r28
 978:	df 91       	pop	r29
 97a:	cf 91       	pop	r28
 97c:	1f 91       	pop	r17
 97e:	0f 91       	pop	r16
 980:	08 95       	ret

00000982 <malloc>:
 982:	cf 93       	push	r28
 984:	df 93       	push	r29
 986:	82 30       	cpi	r24, 0x02	; 2
 988:	91 05       	cpc	r25, r1
 98a:	10 f4       	brcc	.+4      	; 0x990 <malloc+0xe>
 98c:	82 e0       	ldi	r24, 0x02	; 2
 98e:	90 e0       	ldi	r25, 0x00	; 0
 990:	e0 91 69 02 	lds	r30, 0x0269
 994:	f0 91 6a 02 	lds	r31, 0x026A
 998:	20 e0       	ldi	r18, 0x00	; 0
 99a:	30 e0       	ldi	r19, 0x00	; 0
 99c:	a0 e0       	ldi	r26, 0x00	; 0
 99e:	b0 e0       	ldi	r27, 0x00	; 0
 9a0:	30 97       	sbiw	r30, 0x00	; 0
 9a2:	39 f1       	breq	.+78     	; 0x9f2 <malloc+0x70>
 9a4:	40 81       	ld	r20, Z
 9a6:	51 81       	ldd	r21, Z+1	; 0x01
 9a8:	48 17       	cp	r20, r24
 9aa:	59 07       	cpc	r21, r25
 9ac:	b8 f0       	brcs	.+46     	; 0x9dc <malloc+0x5a>
 9ae:	48 17       	cp	r20, r24
 9b0:	59 07       	cpc	r21, r25
 9b2:	71 f4       	brne	.+28     	; 0x9d0 <malloc+0x4e>
 9b4:	82 81       	ldd	r24, Z+2	; 0x02
 9b6:	93 81       	ldd	r25, Z+3	; 0x03
 9b8:	10 97       	sbiw	r26, 0x00	; 0
 9ba:	29 f0       	breq	.+10     	; 0x9c6 <malloc+0x44>
 9bc:	13 96       	adiw	r26, 0x03	; 3
 9be:	9c 93       	st	X, r25
 9c0:	8e 93       	st	-X, r24
 9c2:	12 97       	sbiw	r26, 0x02	; 2
 9c4:	2c c0       	rjmp	.+88     	; 0xa1e <malloc+0x9c>
 9c6:	90 93 6a 02 	sts	0x026A, r25
 9ca:	80 93 69 02 	sts	0x0269, r24
 9ce:	27 c0       	rjmp	.+78     	; 0xa1e <malloc+0x9c>
 9d0:	21 15       	cp	r18, r1
 9d2:	31 05       	cpc	r19, r1
 9d4:	31 f0       	breq	.+12     	; 0x9e2 <malloc+0x60>
 9d6:	42 17       	cp	r20, r18
 9d8:	53 07       	cpc	r21, r19
 9da:	18 f0       	brcs	.+6      	; 0x9e2 <malloc+0x60>
 9dc:	a9 01       	movw	r20, r18
 9de:	db 01       	movw	r26, r22
 9e0:	01 c0       	rjmp	.+2      	; 0x9e4 <malloc+0x62>
 9e2:	ef 01       	movw	r28, r30
 9e4:	9a 01       	movw	r18, r20
 9e6:	bd 01       	movw	r22, r26
 9e8:	df 01       	movw	r26, r30
 9ea:	02 80       	ldd	r0, Z+2	; 0x02
 9ec:	f3 81       	ldd	r31, Z+3	; 0x03
 9ee:	e0 2d       	mov	r30, r0
 9f0:	d7 cf       	rjmp	.-82     	; 0x9a0 <malloc+0x1e>
 9f2:	21 15       	cp	r18, r1
 9f4:	31 05       	cpc	r19, r1
 9f6:	f9 f0       	breq	.+62     	; 0xa36 <malloc+0xb4>
 9f8:	28 1b       	sub	r18, r24
 9fa:	39 0b       	sbc	r19, r25
 9fc:	24 30       	cpi	r18, 0x04	; 4
 9fe:	31 05       	cpc	r19, r1
 a00:	80 f4       	brcc	.+32     	; 0xa22 <malloc+0xa0>
 a02:	8a 81       	ldd	r24, Y+2	; 0x02
 a04:	9b 81       	ldd	r25, Y+3	; 0x03
 a06:	61 15       	cp	r22, r1
 a08:	71 05       	cpc	r23, r1
 a0a:	21 f0       	breq	.+8      	; 0xa14 <malloc+0x92>
 a0c:	fb 01       	movw	r30, r22
 a0e:	93 83       	std	Z+3, r25	; 0x03
 a10:	82 83       	std	Z+2, r24	; 0x02
 a12:	04 c0       	rjmp	.+8      	; 0xa1c <malloc+0x9a>
 a14:	90 93 6a 02 	sts	0x026A, r25
 a18:	80 93 69 02 	sts	0x0269, r24
 a1c:	fe 01       	movw	r30, r28
 a1e:	32 96       	adiw	r30, 0x02	; 2
 a20:	44 c0       	rjmp	.+136    	; 0xaaa <malloc+0x128>
 a22:	fe 01       	movw	r30, r28
 a24:	e2 0f       	add	r30, r18
 a26:	f3 1f       	adc	r31, r19
 a28:	81 93       	st	Z+, r24
 a2a:	91 93       	st	Z+, r25
 a2c:	22 50       	subi	r18, 0x02	; 2
 a2e:	31 09       	sbc	r19, r1
 a30:	39 83       	std	Y+1, r19	; 0x01
 a32:	28 83       	st	Y, r18
 a34:	3a c0       	rjmp	.+116    	; 0xaaa <malloc+0x128>
 a36:	20 91 67 02 	lds	r18, 0x0267
 a3a:	30 91 68 02 	lds	r19, 0x0268
 a3e:	23 2b       	or	r18, r19
 a40:	41 f4       	brne	.+16     	; 0xa52 <malloc+0xd0>
 a42:	20 91 02 02 	lds	r18, 0x0202
 a46:	30 91 03 02 	lds	r19, 0x0203
 a4a:	30 93 68 02 	sts	0x0268, r19
 a4e:	20 93 67 02 	sts	0x0267, r18
 a52:	20 91 00 02 	lds	r18, 0x0200
 a56:	30 91 01 02 	lds	r19, 0x0201
 a5a:	21 15       	cp	r18, r1
 a5c:	31 05       	cpc	r19, r1
 a5e:	41 f4       	brne	.+16     	; 0xa70 <malloc+0xee>
 a60:	2d b7       	in	r18, 0x3d	; 61
 a62:	3e b7       	in	r19, 0x3e	; 62
 a64:	40 91 04 02 	lds	r20, 0x0204
 a68:	50 91 05 02 	lds	r21, 0x0205
 a6c:	24 1b       	sub	r18, r20
 a6e:	35 0b       	sbc	r19, r21
 a70:	e0 91 67 02 	lds	r30, 0x0267
 a74:	f0 91 68 02 	lds	r31, 0x0268
 a78:	e2 17       	cp	r30, r18
 a7a:	f3 07       	cpc	r31, r19
 a7c:	a0 f4       	brcc	.+40     	; 0xaa6 <malloc+0x124>
 a7e:	2e 1b       	sub	r18, r30
 a80:	3f 0b       	sbc	r19, r31
 a82:	28 17       	cp	r18, r24
 a84:	39 07       	cpc	r19, r25
 a86:	78 f0       	brcs	.+30     	; 0xaa6 <malloc+0x124>
 a88:	ac 01       	movw	r20, r24
 a8a:	4e 5f       	subi	r20, 0xFE	; 254
 a8c:	5f 4f       	sbci	r21, 0xFF	; 255
 a8e:	24 17       	cp	r18, r20
 a90:	35 07       	cpc	r19, r21
 a92:	48 f0       	brcs	.+18     	; 0xaa6 <malloc+0x124>
 a94:	4e 0f       	add	r20, r30
 a96:	5f 1f       	adc	r21, r31
 a98:	50 93 68 02 	sts	0x0268, r21
 a9c:	40 93 67 02 	sts	0x0267, r20
 aa0:	81 93       	st	Z+, r24
 aa2:	91 93       	st	Z+, r25
 aa4:	02 c0       	rjmp	.+4      	; 0xaaa <malloc+0x128>
 aa6:	e0 e0       	ldi	r30, 0x00	; 0
 aa8:	f0 e0       	ldi	r31, 0x00	; 0
 aaa:	cf 01       	movw	r24, r30
 aac:	df 91       	pop	r29
 aae:	cf 91       	pop	r28
 ab0:	08 95       	ret

00000ab2 <free>:
 ab2:	cf 93       	push	r28
 ab4:	df 93       	push	r29
 ab6:	00 97       	sbiw	r24, 0x00	; 0
 ab8:	09 f4       	brne	.+2      	; 0xabc <free+0xa>
 aba:	87 c0       	rjmp	.+270    	; 0xbca <free+0x118>
 abc:	fc 01       	movw	r30, r24
 abe:	32 97       	sbiw	r30, 0x02	; 2
 ac0:	13 82       	std	Z+3, r1	; 0x03
 ac2:	12 82       	std	Z+2, r1	; 0x02
 ac4:	c0 91 69 02 	lds	r28, 0x0269
 ac8:	d0 91 6a 02 	lds	r29, 0x026A
 acc:	20 97       	sbiw	r28, 0x00	; 0
 ace:	81 f4       	brne	.+32     	; 0xaf0 <free+0x3e>
 ad0:	20 81       	ld	r18, Z
 ad2:	31 81       	ldd	r19, Z+1	; 0x01
 ad4:	28 0f       	add	r18, r24
 ad6:	39 1f       	adc	r19, r25
 ad8:	80 91 67 02 	lds	r24, 0x0267
 adc:	90 91 68 02 	lds	r25, 0x0268
 ae0:	82 17       	cp	r24, r18
 ae2:	93 07       	cpc	r25, r19
 ae4:	79 f5       	brne	.+94     	; 0xb44 <free+0x92>
 ae6:	f0 93 68 02 	sts	0x0268, r31
 aea:	e0 93 67 02 	sts	0x0267, r30
 aee:	6d c0       	rjmp	.+218    	; 0xbca <free+0x118>
 af0:	de 01       	movw	r26, r28
 af2:	20 e0       	ldi	r18, 0x00	; 0
 af4:	30 e0       	ldi	r19, 0x00	; 0
 af6:	ae 17       	cp	r26, r30
 af8:	bf 07       	cpc	r27, r31
 afa:	50 f4       	brcc	.+20     	; 0xb10 <free+0x5e>
 afc:	12 96       	adiw	r26, 0x02	; 2
 afe:	4d 91       	ld	r20, X+
 b00:	5c 91       	ld	r21, X
 b02:	13 97       	sbiw	r26, 0x03	; 3
 b04:	9d 01       	movw	r18, r26
 b06:	41 15       	cp	r20, r1
 b08:	51 05       	cpc	r21, r1
 b0a:	09 f1       	breq	.+66     	; 0xb4e <free+0x9c>
 b0c:	da 01       	movw	r26, r20
 b0e:	f3 cf       	rjmp	.-26     	; 0xaf6 <free+0x44>
 b10:	b3 83       	std	Z+3, r27	; 0x03
 b12:	a2 83       	std	Z+2, r26	; 0x02
 b14:	40 81       	ld	r20, Z
 b16:	51 81       	ldd	r21, Z+1	; 0x01
 b18:	84 0f       	add	r24, r20
 b1a:	95 1f       	adc	r25, r21
 b1c:	8a 17       	cp	r24, r26
 b1e:	9b 07       	cpc	r25, r27
 b20:	71 f4       	brne	.+28     	; 0xb3e <free+0x8c>
 b22:	8d 91       	ld	r24, X+
 b24:	9c 91       	ld	r25, X
 b26:	11 97       	sbiw	r26, 0x01	; 1
 b28:	84 0f       	add	r24, r20
 b2a:	95 1f       	adc	r25, r21
 b2c:	02 96       	adiw	r24, 0x02	; 2
 b2e:	91 83       	std	Z+1, r25	; 0x01
 b30:	80 83       	st	Z, r24
 b32:	12 96       	adiw	r26, 0x02	; 2
 b34:	8d 91       	ld	r24, X+
 b36:	9c 91       	ld	r25, X
 b38:	13 97       	sbiw	r26, 0x03	; 3
 b3a:	93 83       	std	Z+3, r25	; 0x03
 b3c:	82 83       	std	Z+2, r24	; 0x02
 b3e:	21 15       	cp	r18, r1
 b40:	31 05       	cpc	r19, r1
 b42:	29 f4       	brne	.+10     	; 0xb4e <free+0x9c>
 b44:	f0 93 6a 02 	sts	0x026A, r31
 b48:	e0 93 69 02 	sts	0x0269, r30
 b4c:	3e c0       	rjmp	.+124    	; 0xbca <free+0x118>
 b4e:	d9 01       	movw	r26, r18
 b50:	13 96       	adiw	r26, 0x03	; 3
 b52:	fc 93       	st	X, r31
 b54:	ee 93       	st	-X, r30
 b56:	12 97       	sbiw	r26, 0x02	; 2
 b58:	4d 91       	ld	r20, X+
 b5a:	5d 91       	ld	r21, X+
 b5c:	a4 0f       	add	r26, r20
 b5e:	b5 1f       	adc	r27, r21
 b60:	ea 17       	cp	r30, r26
 b62:	fb 07       	cpc	r31, r27
 b64:	79 f4       	brne	.+30     	; 0xb84 <free+0xd2>
 b66:	80 81       	ld	r24, Z
 b68:	91 81       	ldd	r25, Z+1	; 0x01
 b6a:	84 0f       	add	r24, r20
 b6c:	95 1f       	adc	r25, r21
 b6e:	02 96       	adiw	r24, 0x02	; 2
 b70:	d9 01       	movw	r26, r18
 b72:	11 96       	adiw	r26, 0x01	; 1
 b74:	9c 93       	st	X, r25
 b76:	8e 93       	st	-X, r24
 b78:	82 81       	ldd	r24, Z+2	; 0x02
 b7a:	93 81       	ldd	r25, Z+3	; 0x03
 b7c:	13 96       	adiw	r26, 0x03	; 3
 b7e:	9c 93       	st	X, r25
 b80:	8e 93       	st	-X, r24
 b82:	12 97       	sbiw	r26, 0x02	; 2
 b84:	e0 e0       	ldi	r30, 0x00	; 0
 b86:	f0 e0       	ldi	r31, 0x00	; 0
 b88:	8a 81       	ldd	r24, Y+2	; 0x02
 b8a:	9b 81       	ldd	r25, Y+3	; 0x03
 b8c:	00 97       	sbiw	r24, 0x00	; 0
 b8e:	19 f0       	breq	.+6      	; 0xb96 <free+0xe4>
 b90:	fe 01       	movw	r30, r28
 b92:	ec 01       	movw	r28, r24
 b94:	f9 cf       	rjmp	.-14     	; 0xb88 <free+0xd6>
 b96:	ce 01       	movw	r24, r28
 b98:	02 96       	adiw	r24, 0x02	; 2
 b9a:	28 81       	ld	r18, Y
 b9c:	39 81       	ldd	r19, Y+1	; 0x01
 b9e:	82 0f       	add	r24, r18
 ba0:	93 1f       	adc	r25, r19
 ba2:	20 91 67 02 	lds	r18, 0x0267
 ba6:	30 91 68 02 	lds	r19, 0x0268
 baa:	28 17       	cp	r18, r24
 bac:	39 07       	cpc	r19, r25
 bae:	69 f4       	brne	.+26     	; 0xbca <free+0x118>
 bb0:	30 97       	sbiw	r30, 0x00	; 0
 bb2:	29 f4       	brne	.+10     	; 0xbbe <free+0x10c>
 bb4:	10 92 6a 02 	sts	0x026A, r1
 bb8:	10 92 69 02 	sts	0x0269, r1
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <free+0x110>
 bbe:	13 82       	std	Z+3, r1	; 0x03
 bc0:	12 82       	std	Z+2, r1	; 0x02
 bc2:	d0 93 68 02 	sts	0x0268, r29
 bc6:	c0 93 67 02 	sts	0x0267, r28
 bca:	df 91       	pop	r29
 bcc:	cf 91       	pop	r28
 bce:	08 95       	ret

00000bd0 <strnlen_P>:
 bd0:	fc 01       	movw	r30, r24
 bd2:	05 90       	lpm	r0, Z+
 bd4:	61 50       	subi	r22, 0x01	; 1
 bd6:	70 40       	sbci	r23, 0x00	; 0
 bd8:	01 10       	cpse	r0, r1
 bda:	d8 f7       	brcc	.-10     	; 0xbd2 <strnlen_P+0x2>
 bdc:	80 95       	com	r24
 bde:	90 95       	com	r25
 be0:	8e 0f       	add	r24, r30
 be2:	9f 1f       	adc	r25, r31
 be4:	08 95       	ret

00000be6 <memset>:
 be6:	dc 01       	movw	r26, r24
 be8:	01 c0       	rjmp	.+2      	; 0xbec <memset+0x6>
 bea:	6d 93       	st	X+, r22
 bec:	41 50       	subi	r20, 0x01	; 1
 bee:	50 40       	sbci	r21, 0x00	; 0
 bf0:	e0 f7       	brcc	.-8      	; 0xbea <memset+0x4>
 bf2:	08 95       	ret

00000bf4 <strnlen>:
 bf4:	fc 01       	movw	r30, r24
 bf6:	61 50       	subi	r22, 0x01	; 1
 bf8:	70 40       	sbci	r23, 0x00	; 0
 bfa:	01 90       	ld	r0, Z+
 bfc:	01 10       	cpse	r0, r1
 bfe:	d8 f7       	brcc	.-10     	; 0xbf6 <strnlen+0x2>
 c00:	80 95       	com	r24
 c02:	90 95       	com	r25
 c04:	8e 0f       	add	r24, r30
 c06:	9f 1f       	adc	r25, r31
 c08:	08 95       	ret

00000c0a <fputc>:
 c0a:	0f 93       	push	r16
 c0c:	1f 93       	push	r17
 c0e:	cf 93       	push	r28
 c10:	df 93       	push	r29
 c12:	18 2f       	mov	r17, r24
 c14:	09 2f       	mov	r16, r25
 c16:	eb 01       	movw	r28, r22
 c18:	8b 81       	ldd	r24, Y+3	; 0x03
 c1a:	81 fd       	sbrc	r24, 1
 c1c:	03 c0       	rjmp	.+6      	; 0xc24 <fputc+0x1a>
 c1e:	8f ef       	ldi	r24, 0xFF	; 255
 c20:	9f ef       	ldi	r25, 0xFF	; 255
 c22:	20 c0       	rjmp	.+64     	; 0xc64 <fputc+0x5a>
 c24:	82 ff       	sbrs	r24, 2
 c26:	10 c0       	rjmp	.+32     	; 0xc48 <fputc+0x3e>
 c28:	4e 81       	ldd	r20, Y+6	; 0x06
 c2a:	5f 81       	ldd	r21, Y+7	; 0x07
 c2c:	2c 81       	ldd	r18, Y+4	; 0x04
 c2e:	3d 81       	ldd	r19, Y+5	; 0x05
 c30:	42 17       	cp	r20, r18
 c32:	53 07       	cpc	r21, r19
 c34:	7c f4       	brge	.+30     	; 0xc54 <fputc+0x4a>
 c36:	e8 81       	ld	r30, Y
 c38:	f9 81       	ldd	r31, Y+1	; 0x01
 c3a:	9f 01       	movw	r18, r30
 c3c:	2f 5f       	subi	r18, 0xFF	; 255
 c3e:	3f 4f       	sbci	r19, 0xFF	; 255
 c40:	39 83       	std	Y+1, r19	; 0x01
 c42:	28 83       	st	Y, r18
 c44:	10 83       	st	Z, r17
 c46:	06 c0       	rjmp	.+12     	; 0xc54 <fputc+0x4a>
 c48:	e8 85       	ldd	r30, Y+8	; 0x08
 c4a:	f9 85       	ldd	r31, Y+9	; 0x09
 c4c:	81 2f       	mov	r24, r17
 c4e:	19 95       	eicall
 c50:	89 2b       	or	r24, r25
 c52:	29 f7       	brne	.-54     	; 0xc1e <fputc+0x14>
 c54:	2e 81       	ldd	r18, Y+6	; 0x06
 c56:	3f 81       	ldd	r19, Y+7	; 0x07
 c58:	2f 5f       	subi	r18, 0xFF	; 255
 c5a:	3f 4f       	sbci	r19, 0xFF	; 255
 c5c:	3f 83       	std	Y+7, r19	; 0x07
 c5e:	2e 83       	std	Y+6, r18	; 0x06
 c60:	81 2f       	mov	r24, r17
 c62:	90 2f       	mov	r25, r16
 c64:	df 91       	pop	r29
 c66:	cf 91       	pop	r28
 c68:	1f 91       	pop	r17
 c6a:	0f 91       	pop	r16
 c6c:	08 95       	ret

00000c6e <__ultoa_invert>:
 c6e:	fa 01       	movw	r30, r20
 c70:	aa 27       	eor	r26, r26
 c72:	28 30       	cpi	r18, 0x08	; 8
 c74:	51 f1       	breq	.+84     	; 0xcca <__ultoa_invert+0x5c>
 c76:	20 31       	cpi	r18, 0x10	; 16
 c78:	81 f1       	breq	.+96     	; 0xcda <__ultoa_invert+0x6c>
 c7a:	e8 94       	clt
 c7c:	6f 93       	push	r22
 c7e:	6e 7f       	andi	r22, 0xFE	; 254
 c80:	6e 5f       	subi	r22, 0xFE	; 254
 c82:	7f 4f       	sbci	r23, 0xFF	; 255
 c84:	8f 4f       	sbci	r24, 0xFF	; 255
 c86:	9f 4f       	sbci	r25, 0xFF	; 255
 c88:	af 4f       	sbci	r26, 0xFF	; 255
 c8a:	b1 e0       	ldi	r27, 0x01	; 1
 c8c:	3e d0       	rcall	.+124    	; 0xd0a <__ultoa_invert+0x9c>
 c8e:	b4 e0       	ldi	r27, 0x04	; 4
 c90:	3c d0       	rcall	.+120    	; 0xd0a <__ultoa_invert+0x9c>
 c92:	67 0f       	add	r22, r23
 c94:	78 1f       	adc	r23, r24
 c96:	89 1f       	adc	r24, r25
 c98:	9a 1f       	adc	r25, r26
 c9a:	a1 1d       	adc	r26, r1
 c9c:	68 0f       	add	r22, r24
 c9e:	79 1f       	adc	r23, r25
 ca0:	8a 1f       	adc	r24, r26
 ca2:	91 1d       	adc	r25, r1
 ca4:	a1 1d       	adc	r26, r1
 ca6:	6a 0f       	add	r22, r26
 ca8:	71 1d       	adc	r23, r1
 caa:	81 1d       	adc	r24, r1
 cac:	91 1d       	adc	r25, r1
 cae:	a1 1d       	adc	r26, r1
 cb0:	20 d0       	rcall	.+64     	; 0xcf2 <__ultoa_invert+0x84>
 cb2:	09 f4       	brne	.+2      	; 0xcb6 <__ultoa_invert+0x48>
 cb4:	68 94       	set
 cb6:	3f 91       	pop	r19
 cb8:	2a e0       	ldi	r18, 0x0A	; 10
 cba:	26 9f       	mul	r18, r22
 cbc:	11 24       	eor	r1, r1
 cbe:	30 19       	sub	r19, r0
 cc0:	30 5d       	subi	r19, 0xD0	; 208
 cc2:	31 93       	st	Z+, r19
 cc4:	de f6       	brtc	.-74     	; 0xc7c <__ultoa_invert+0xe>
 cc6:	cf 01       	movw	r24, r30
 cc8:	08 95       	ret
 cca:	46 2f       	mov	r20, r22
 ccc:	47 70       	andi	r20, 0x07	; 7
 cce:	40 5d       	subi	r20, 0xD0	; 208
 cd0:	41 93       	st	Z+, r20
 cd2:	b3 e0       	ldi	r27, 0x03	; 3
 cd4:	0f d0       	rcall	.+30     	; 0xcf4 <__ultoa_invert+0x86>
 cd6:	c9 f7       	brne	.-14     	; 0xcca <__ultoa_invert+0x5c>
 cd8:	f6 cf       	rjmp	.-20     	; 0xcc6 <__ultoa_invert+0x58>
 cda:	46 2f       	mov	r20, r22
 cdc:	4f 70       	andi	r20, 0x0F	; 15
 cde:	40 5d       	subi	r20, 0xD0	; 208
 ce0:	4a 33       	cpi	r20, 0x3A	; 58
 ce2:	18 f0       	brcs	.+6      	; 0xcea <__ultoa_invert+0x7c>
 ce4:	49 5d       	subi	r20, 0xD9	; 217
 ce6:	31 fd       	sbrc	r19, 1
 ce8:	40 52       	subi	r20, 0x20	; 32
 cea:	41 93       	st	Z+, r20
 cec:	02 d0       	rcall	.+4      	; 0xcf2 <__ultoa_invert+0x84>
 cee:	a9 f7       	brne	.-22     	; 0xcda <__ultoa_invert+0x6c>
 cf0:	ea cf       	rjmp	.-44     	; 0xcc6 <__ultoa_invert+0x58>
 cf2:	b4 e0       	ldi	r27, 0x04	; 4
 cf4:	a6 95       	lsr	r26
 cf6:	97 95       	ror	r25
 cf8:	87 95       	ror	r24
 cfa:	77 95       	ror	r23
 cfc:	67 95       	ror	r22
 cfe:	ba 95       	dec	r27
 d00:	c9 f7       	brne	.-14     	; 0xcf4 <__ultoa_invert+0x86>
 d02:	00 97       	sbiw	r24, 0x00	; 0
 d04:	61 05       	cpc	r22, r1
 d06:	71 05       	cpc	r23, r1
 d08:	08 95       	ret
 d0a:	9b 01       	movw	r18, r22
 d0c:	ac 01       	movw	r20, r24
 d0e:	0a 2e       	mov	r0, r26
 d10:	06 94       	lsr	r0
 d12:	57 95       	ror	r21
 d14:	47 95       	ror	r20
 d16:	37 95       	ror	r19
 d18:	27 95       	ror	r18
 d1a:	ba 95       	dec	r27
 d1c:	c9 f7       	brne	.-14     	; 0xd10 <__ultoa_invert+0xa2>
 d1e:	62 0f       	add	r22, r18
 d20:	73 1f       	adc	r23, r19
 d22:	84 1f       	adc	r24, r20
 d24:	95 1f       	adc	r25, r21
 d26:	a0 1d       	adc	r26, r0
 d28:	08 95       	ret

00000d2a <_exit>:
 d2a:	f8 94       	cli

00000d2c <__stop_program>:
 d2c:	ff cf       	rjmp	.-2      	; 0xd2c <__stop_program>
